(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ldr"] = factory();
	else
		root["ldr"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/Index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://ldr/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://ldr/(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/Index.js":
/*!**********************!*\
  !*** ./src/Index.js ***!
  \**********************/
/*! exports provided: Adapter, LDRLoader, LDRMeshCollector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _adapter_Adapter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter/Adapter.js */ \"./src/adapter/Adapter.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Adapter\", function() { return _adapter_Adapter_js__WEBPACK_IMPORTED_MODULE_0__; });\n/* harmony import */ var _LDRLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LDRLoader.js */ \"./src/LDRLoader.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LDRLoader\", function() { return _LDRLoader_js__WEBPACK_IMPORTED_MODULE_1__[\"LDRLoader\"]; });\n\n/* harmony import */ var _LDRMeshCollector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LDRMeshCollector.js */ \"./src/LDRMeshCollector.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LDRMeshCollector\", function() { return _LDRMeshCollector_js__WEBPACK_IMPORTED_MODULE_2__[\"LDRMeshCollector\"]; });\n\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://ldr/./src/Index.js?");

/***/ }),

/***/ "./src/LDRColorManager.js":
/*!********************************!*\
  !*** ./src/LDRColorManager.js ***!
  \********************************/
/*! exports provided: LDRColorManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRColorManager\", function() { return LDRColorManager; });\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colors */ \"./src/colors.js\");\n/* harmony import */ var _LDRColorMaterials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LDRColorMaterials */ \"./src/LDRColorMaterials.js\");\n\r\n\r\n\r\n\r\nlet LDRColorManager = function () {\r\n    this.shaderColors = []; // [] => Vector4\r\n    this.highContrastShaderColors = []; // [] => Vector4\r\n    this.map = {}; // colorID -> floatColor\r\n    this.sixteen = -1;\r\n    this.edgeSixteen = -1;\r\n    this.anyTransparentColors = false;\r\n    this.mainColorIsTransparent = false;\r\n}\r\n\r\nLDRColorManager.prototype.clone = function () {\r\n    let ret = new LDRColorManager();\r\n    ret.shaderColors.push(...this.shaderColors);\r\n    ret.highContrastShaderColors.push(...this.highContrastShaderColors);\r\n    ret.sixteen = this.sixteen;\r\n    ret.edgeSixteen = this.edgeSixteen;\r\n    ret.anyTransparentColors = this.anyTransparentColors;\r\n    ret.mainColorIsTransparent = this.mainColorIsTransparent;\r\n    for (let c in this.map) {\r\n        if (this.map.hasOwnProperty(c))\r\n            ret.map[c] = this.map[c];\r\n    }\r\n    return ret;\r\n}\r\n\r\nLDRColorManager.prototype.overWrite = function (id) {\r\n    if (this.sixteen === -1 && this.edgeSixteen === -1) {\r\n        return;\r\n    }\r\n\r\n    let isEdge = id < 0;\r\n    let lowID = isEdge ? -id - 1 : id;\r\n    let colorObject = _colors__WEBPACK_IMPORTED_MODULE_1__[\"LDRColors\"][lowID];\r\n    if (!colorObject) {\r\n        throw \"Unknown color: \" + id;\r\n    }\r\n    let alpha = colorObject.alpha ? colorObject.alpha / 256.0 : 1;\r\n    this.mainColorIsTransparent = alpha < 1;\r\n\r\n    if (this.sixteen >= 0) {\r\n        let color = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.createWithHex(isEdge ? colorObject.edge : colorObject.value);\r\n        this.shaderColors[this.sixteen] = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector4.create(_adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getR(color), _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getG(color), _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getB(color), alpha);\r\n    }\r\n    if (this.edgeSixteen >= 0) {\r\n        let color = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.createWithHex(colorObject.edge);\r\n        this.shaderColors[this.edgeSixteen] = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector4.create(_adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getR(color), _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getG(color), _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getB(color), 1);// Drop alpha from edge lines to increase contrast.\r\n\r\n        this.highContrastShaderColors[this.edgeSixteen] = Object(_LDRColorMaterials__WEBPACK_IMPORTED_MODULE_2__[\"getHighContrastColor4\"])(lowID);\r\n    }\r\n\r\n    this.lastSet = id;\r\n}\r\n\r\nLDRColorManager.prototype.get = function (id) {\r\n    let f = this.map[id];\r\n    if (f) {\r\n        return f;\r\n    }\r\n    if (id == 16) {\r\n        this.sixteen = this.shaderColors.length;\r\n    }\r\n    else if (id == 10016 || id == 24) {\r\n        this.edgeSixteen = this.shaderColors.length;\r\n    }\r\n\r\n    let isEdge = id < 0;\r\n    let lowID = isEdge ? -id - 1 : id;\r\n    let colorObject = _colors__WEBPACK_IMPORTED_MODULE_1__[\"LDRColors\"][lowID];\r\n    if (!colorObject) {\r\n        throw \"Unknown color \" + lowID + \" from \" + id;\r\n    }\r\n    let color = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.createWithHex(isEdge ? colorObject.edge : colorObject.value);\r\n    let alpha = colorObject.alpha ? colorObject.alpha / 256.0 : 1;\r\n    this.anyTransparentColors = (this.anyTransparentColors || (alpha < 1))\r\n\r\n    f = this.shaderColors.length + 0.1;\r\n    this.map[id] = f;\r\n    this.shaderColors.push(_adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector4.create(_adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getR(color), _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getG(color), _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.getB(color), alpha));\r\n    this.highContrastShaderColors.push(Object(_LDRColorMaterials__WEBPACK_IMPORTED_MODULE_2__[\"getHighContrastColor4\"])(lowID));\r\n    return f;\r\n}\r\n\r\n\r\nLDRColorManager.prototype.containsTransparentColors = function () {\r\n    return this.anyTransparentColors || this.mainColorIsTransparent;\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRColorManager.js?");

/***/ }),

/***/ "./src/LDRColorMaterials.js":
/*!**********************************!*\
  !*** ./src/LDRColorMaterials.js ***!
  \**********************************/
/*! exports provided: getHighContrastColor4, isTrans, buildLineMaterial, buildTriangleMaterial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHighContrastColor4\", function() { return getHighContrastColor4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTrans\", function() { return isTrans; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildLineMaterial\", function() { return buildLineMaterial; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildTriangleMaterial\", function() { return buildTriangleMaterial; });\n/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colors */ \"./src/colors.js\");\n/* harmony import */ var _LDRShaders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LDRShaders */ \"./src/LDRShaders.js\");\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n\r\n\r\n\r\n\r\nlet canBeOld = false;\r\n\r\nlet ColorMaterialIdx = 0;\r\n\r\n\r\nlet getHighContrastColor4 = function (colorID) {\r\n    if (colorID === 0 || colorID === 256 || colorID === 64 || colorID === 32 || colorID === 83) {\r\n        return _adapter_Adapter__WEBPACK_IMPORTED_MODULE_2__[\"adapter\"].Vector4.create(1, 1, 1, 1);\r\n    }\r\n    else if (colorID === 272 || colorID === 70) {\r\n        return _adapter_Adapter__WEBPACK_IMPORTED_MODULE_2__[\"adapter\"].Vector4.create(1, 0, 0, 1);\r\n    }\r\n    else {\r\n        return _adapter_Adapter__WEBPACK_IMPORTED_MODULE_2__[\"adapter\"].Vector4.create(0, 0, 0, 1);\r\n    }\r\n}\r\n\r\n\r\nlet isTrans = function (colorID) {\r\n    return _colors__WEBPACK_IMPORTED_MODULE_0__[\"LDRColors\"][colorID < 0 ? -colorID - 1 : colorID].alpha > 0;\r\n}\r\n\r\n\r\nlet buildLineMaterial = function (colorManager, color, conditional) {\r\n    colorManager = colorManager.clone();\r\n    colorManager.overWrite(color);\r\n    colorManager.idMaterial = ColorMaterialIdx++;\r\n\r\n    // let colors = (LDR.Options && LDR.Options.lineContrast === 0) ?\r\n    //   colorManager.highContrastShaderColors : colorManager.shaderColors;\r\n    let colors = colorManager.shaderColors;\r\n\r\n    let len = colors.length;\r\n\r\n    let uniforms = {};\r\n    if (canBeOld) {\r\n        uniforms['old'] = { value: false };\r\n    }\r\n    if (len > 1) {\r\n        uniforms['colors'] = { type: 'v4v', value: colors };\r\n    }\r\n    else {\r\n        uniforms['color'] = { type: 'v4', value: colors[0] };\r\n    }\r\n    let ret = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_2__[\"adapter\"].RawShaderMaterial.create({\r\n        uniforms: uniforms,\r\n        vertexShader: (conditional ?\r\n            Object(_LDRShaders__WEBPACK_IMPORTED_MODULE_1__[\"createConditionalVertexShader\"])(canBeOld, colors, true) :\r\n            // LDR.Shader.createSimpleVertexShader(canBeOld, colors, true, true, false)),\r\n            Object(_LDRShaders__WEBPACK_IMPORTED_MODULE_1__[\"createSimpleVertexShader\"])(canBeOld, colors, true, true)),\r\n        fragmentShader: (conditional ?\r\n            _LDRShaders__WEBPACK_IMPORTED_MODULE_1__[\"AlphaTestFragmentShader\"] :\r\n            _LDRShaders__WEBPACK_IMPORTED_MODULE_1__[\"SimpleFragmentShader\"]),\r\n        transparent: false,\r\n        visible: true\r\n    });\r\n    // ret.colorManager = colorManager;\r\n    return ret;\r\n}\r\n\r\n\r\n// LDRColors.buildTriangleMaterial = function (colorManager, color, texmap) {\r\nlet buildTriangleMaterial = function (colorManager, color) {\r\n    colorManager = colorManager.clone();\r\n    colorManager.overWrite(color);\r\n    let colors = colorManager.shaderColors;\r\n    let len = colors.length;\r\n\r\n    let uniforms = {};\r\n    if (canBeOld) {\r\n        uniforms['old'] = { value: false };\r\n    }\r\n    if (len > 1) {\r\n        uniforms['colors'] = { type: 'v4v', value: colors };\r\n    }\r\n    else {\r\n        uniforms['color'] = { type: 'v4', value: colors[0] };\r\n    }\r\n    // if (texmap && texmap !== true) {\r\n    //     uniforms['map'] = { type: 't', value: texmap };\r\n    // }\r\n\r\n    let isTrans = colorManager.containsTransparentColors();\r\n\r\n    let ret = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_2__[\"adapter\"].RawShaderMaterial.create({\r\n        uniforms: uniforms,\r\n        // vertexShader: LDR.Shader.createSimpleVertexShader(canBeOld, colors, false, false, texmap),\r\n        vertexShader: Object(_LDRShaders__WEBPACK_IMPORTED_MODULE_1__[\"createSimpleVertexShader\"])(canBeOld, colors, false, false),\r\n        // fragmentShader: texmap ? LDR.Shader.TextureFragmentShader : LDR.Shader.SimpleFragmentShader,\r\n        fragmentShader: _LDRShaders__WEBPACK_IMPORTED_MODULE_1__[\"SimpleFragmentShader\"],\r\n        transparent: isTrans,\r\n        depthWrite: !isTrans\r\n    });\r\n    return ret;\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRColorMaterials.js?");

/***/ }),

/***/ "./src/LDRGenerator.js":
/*!*****************************!*\
  !*** ./src/LDRGenerator.js ***!
  \*****************************/
/*! exports provided: make, makeP, makeR, addLinesToStep, addConditionalLinesToStep, addTrianglesToStep, addQuadsToStep, makeCylinderClosed, makeCircle4, makeCylinder, makeCylinderSloped, makeDisc, makeRing, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"make\", function() { return make; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeP\", function() { return makeP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeR\", function() { return makeR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addLinesToStep\", function() { return addLinesToStep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addConditionalLinesToStep\", function() { return addConditionalLinesToStep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addTrianglesToStep\", function() { return addTrianglesToStep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addQuadsToStep\", function() { return addQuadsToStep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeCylinderClosed\", function() { return makeCylinderClosed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeCircle4\", function() { return makeCircle4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeCylinder\", function() { return makeCylinder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeCylinderSloped\", function() { return makeCylinderSloped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeDisc\", function() { return makeDisc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeRing\", function() { return makeRing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n/* harmony import */ var _LDRStep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LDRStep */ \"./src/LDRStep.js\");\n/* harmony import */ var _LDRPartType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LDRPartType */ \"./src/LDRPartType.js\");\n/* harmony import */ var _LDRPartDescription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LDRPartDescription */ \"./src/LDRPartDescription.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet make = function (id) {\r\n    if (map.hasOwnProperty(id)) {\r\n        return map[id]();\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nlet makeP = function (desc, name) {\r\n    let pt = new _LDRPartType__WEBPACK_IMPORTED_MODULE_2__[\"LDRPartType\"]();\r\n\r\n    pt.name = pt.ID = name;\r\n    pt.modelDescription = desc;\r\n    pt.author = 'LDRGenerator.js';\r\n    pt.license = 'Redistributable under CCAL version 2.0 : see CAreadme.txt';\r\n    pt.inlined = 'GENERATED';\r\n    pt.ldraw_org = 'Primitive';\r\n    pt.cleanSteps = pt.certifiedBFC = pt.CCW = pt.consistentFileAndName = true;\r\n    pt.isPart = true;\r\n\r\n    return pt;\r\n}\r\n\r\nlet makeR = function (a, b) {\r\n    let ret = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Matrix3.create(a, 0, 0, 0, b, 0, 0, 0, a);\r\n    return ret;\r\n}\r\n\r\nlet addLinesToStep = function (step, lines) {\r\n    for (let i = 0; i < lines.length; i += 6) {\r\n        step.addLine(24,\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(lines[i], lines[i + 1], lines[i + 2]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(lines[i + 3], lines[i + 4], lines[i + 5])\r\n        );\r\n    }\r\n}\r\n\r\nlet addConditionalLinesToStep = function (step, lines) {\r\n    for (let i = 0; i < lines.length; i += 12) {\r\n        step.addConditionalLine(24,\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(lines[i], lines[i + 1], lines[i + 2]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(lines[i + 3], lines[i + 4], lines[i + 5]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(lines[i + 6], lines[i + 7], lines[i + 8]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(lines[i + 9], lines[i + 10], lines[i + 11])\r\n        );\r\n    }\r\n}\r\n\r\nlet addTrianglesToStep = function (step, triangles, color = 16) {\r\n    for (let i = 0; i < triangles.length; i += 9) {\r\n        step.addTriangle(color,\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(triangles[i], triangles[i + 1], triangles[i + 2]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(triangles[i + 3], triangles[i + 4], triangles[i + 5]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(triangles[i + 6], triangles[i + 7], triangles[i + 8])\r\n        );\r\n    }\r\n}\r\n\r\nlet addQuadsToStep = function (step, quads, color = 16) {\r\n    for (let i = 0; i < quads.length; i += 12) {\r\n        step.addQuad(color,\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(quads[i], quads[i + 1], quads[i + 2]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(quads[i + 3], quads[i + 4], quads[i + 5]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(quads[i + 6], quads[i + 7], quads[i + 8]),\r\n            _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(quads[i + 9], quads[i + 10], quads[i + 11])\r\n        );\r\n    }\r\n}\r\n\r\n// export let makeEmpty = function(id = 'empty.dat') {\r\n//     let pt = makeP(id, id);\r\n//     pt.steps.push(new THREE.LDRStep());\r\n//     return pt;\r\n// }\r\n\r\nlet makeCylinderClosed = function (sections) {\r\n    let pt = makeP('Cylinder Closed ' + (sections * 0.25),\r\n        sections + '-4cylc.dat');\r\n    // let step = new THREE.LDRStep();\r\n    let step = new _LDRStep__WEBPACK_IMPORTED_MODULE_1__[\"LDRStep\"]();\r\n\r\n    let p0 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create();\r\n    let p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(0, 1, 0);\r\n    let r = makeR(1, 1);\r\n\r\n    // step.addSubModel(new LDRPartDescription(16, p0, r, sections + '-4edge.dat', true, false));\r\n    // step.addSubModel(new LDRPartDescription(16, p1, r, sections + '-4edge.dat', true, false));\r\n    // step.addSubModel(new LDRPartDescription(16, p0, r, sections + '-4disc.dat', true, false));\r\n    // step.addSubModel(new LDRPartDescription(16, p0, r, sections + '-4cyli.dat', true, false));\r\n    step.addSubModel(new _LDRPartDescription__WEBPACK_IMPORTED_MODULE_3__[\"LDRPartDescription\"](16, p0, r, sections + '-4edge.dat'));\r\n    step.addSubModel(new _LDRPartDescription__WEBPACK_IMPORTED_MODULE_3__[\"LDRPartDescription\"](16, p1, r, sections + '-4edge.dat'));\r\n    step.addSubModel(new _LDRPartDescription__WEBPACK_IMPORTED_MODULE_3__[\"LDRPartDescription\"](16, p0, r, sections + '-4disc.dat'));\r\n    step.addSubModel(new _LDRPartDescription__WEBPACK_IMPORTED_MODULE_3__[\"LDRPartDescription\"](16, p0, r, sections + '-4cyli.dat'));\r\n\r\n    pt.steps.push(step); // No need to user 'addStep()' for primitives.\r\n    return pt;\r\n}\r\n\r\nlet makeCircle4 = function (sections) {\r\n    let pt = makeP('Circle ' + (sections * 0.25),\r\n        sections + '-4edge.dat');\r\n    let step = new _LDRStep__WEBPACK_IMPORTED_MODULE_1__[\"LDRStep\"]();\r\n    let prev = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(1, 0, 0);\r\n    for (let i = 1; i <= 4 * sections; i++) {\r\n        let angle = i * Math.PI / 8;\r\n        let c = Math.cos(angle), s = Math.sin(angle);\r\n        let p = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 0, s);\r\n        step.addLine(24, prev, p);\r\n        prev = p;\r\n    }\r\n    pt.steps.push(step); // No need to user 'addStep()' for primitives.\r\n    return pt;\r\n}\r\n\r\nlet makeCylinder = function (cond, sections) {\r\n    let desc = 'Cylinder ' + (sections * 0.25);\r\n    if (!cond) {\r\n        desc += ' without Conditional Lines';\r\n    }\r\n    let pt = makeP(desc,\r\n        sections + (cond ? '-4cyli.dat' : '-4cyli2.dat'));\r\n    let step = new _LDRStep__WEBPACK_IMPORTED_MODULE_1__[\"LDRStep\"]();\r\n\r\n    let p0 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(1, 0, 0), p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(1, 1, 0);\r\n    let angle = Math.PI / 8;\r\n    let c = Math.cos(angle), s = Math.sin(angle);\r\n    let next0 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 0, s);\r\n    let next1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 1, s);\r\n\r\n    for (let i = 2; i < 4 * sections + 2; i++) {\r\n        let prev0 = p0, prev1 = p1;\r\n        p0 = next0;\r\n        p1 = next1;\r\n        angle = i * Math.PI / 8;\r\n        c = Math.cos(angle);\r\n        s = Math.sin(angle);\r\n        next0 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 0, s);\r\n        next1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 1, s);\r\n\r\n        step.addQuad(16, prev1, p1, p0, prev0, true);\r\n        if (cond) {\r\n            step.addConditionalLine(24, p0, p1, prev0, next0);\r\n        }\r\n    }\r\n    pt.steps.push(step); // No need to user 'addStep()' for primitives.\r\n    return pt;\r\n}\r\n\r\nlet makeCylinderSloped = function (sections) {\r\n    let desc = 'Cylinder Sloped ' + (sections * 0.25);\r\n    let pt = makeP(desc, sections + '-4cyls.dat');\r\n    let step = new _LDRStep__WEBPACK_IMPORTED_MODULE_1__[\"LDRStep\"]();\r\n\r\n    let p0 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(1, 0, 0), p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(1, 0, 0);\r\n    let angle = Math.PI / 8;\r\n    let c = Math.cos(angle), s = Math.sin(angle);\r\n    let next0 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 0, s);\r\n    let next1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 1 - c, s);\r\n\r\n    for (let i = 2; i < 4 * sections + 2; i++) {\r\n        let prev0 = p0, prev1 = p1;\r\n        p0 = next0;\r\n        p1 = next1;\r\n        angle = i * Math.PI / 8;\r\n        c = Math.cos(angle);\r\n        s = Math.sin(angle);\r\n        next0 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 0, s);\r\n        next1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 1 - c, s);\r\n\r\n        if (i === 2) {\r\n            step.addTriangle(16, prev1, p1, p0, true);\r\n        }\r\n        else if (i === 17) {\r\n            step.addTriangle(16, prev1, p1, prev0, true);\r\n        }\r\n        else {\r\n            step.addQuad(16, prev1, p1, p0, prev0, true);\r\n        }\r\n        step.addConditionalLine(24, p0, p1, prev0, next0);\r\n    }\r\n    pt.steps.push(step); // No need to user 'addStep()' for primitives.\r\n    return pt;\r\n}\r\n\r\nlet makeDisc = function (sections) {\r\n    let pt = makeP('Disc ' + (sections * 0.25),\r\n        sections + '-4disc.dat');\r\n    let step = new _LDRStep__WEBPACK_IMPORTED_MODULE_1__[\"LDRStep\"]();\r\n    let zero = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(0, 0, 0);\r\n    let prev = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(1, 0, 0);\r\n    for (let i = 1; i <= 4 * sections; i++) {\r\n        let angle = i * Math.PI / 8;\r\n        let c = Math.cos(angle), s = Math.sin(angle);\r\n        let p = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(c, 0, s);\r\n        step.addTriangle(16, zero, prev, p, true);\r\n        prev = p;\r\n    }\r\n    pt.steps.push(step); // No need to user 'addStep()' for primitives.\r\n    return pt;\r\n}\r\n\r\nlet makeRing = function (sections, size) {\r\n    let pt = makeP('Ring ' + size + ' x ' + (0.25 * sections),\r\n        sections + '-4ring' + size + '.dat');\r\n    let step = new _LDRStep__WEBPACK_IMPORTED_MODULE_1__[\"LDRStep\"]();\r\n    let SIZE = size + 1;\r\n    let prev1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(size, 0, 0);\r\n    let prev2 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(SIZE, 0, 0);\r\n    for (let i = 1; i <= 4 * sections; i++) {\r\n        let angle = i * Math.PI / 8;\r\n        let c = Math.cos(angle), s = Math.sin(angle);\r\n        let p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(SIZE * c, 0, SIZE * s);\r\n        let p2 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(size * c, 0, size * s);\r\n        step.addQuad(16, p1, p2, prev1, prev2, true);\r\n        prev1 = p2;\r\n        prev2 = p1;\r\n    }\r\n    pt.steps.push(step); // No need to user 'addStep()' for primitives.\r\n    return pt;\r\n}\r\n\r\n//// Content below copied from logo.dat by Paul Easter [pneaster]\r\n// logoPositions = [[-2, -4, 2, -5, 2, -3.5] // L\r\n//     ,\r\n// [-2, 0, -2, -2, 2, -3, 2, -1], [0, -1, 0, -2.5], // E (Divided due to middle line)\r\n//     ,\r\n// [-1.5, 2.25, -2, 2, -2, 1, -1.5, 0.5, 1.5, -0.25, 2, 0, 2, 1, 1.5, 1.5, 0, 2, 0, 1] //G\r\n//     ,\r\n// [-1.5, 4.75, -2, 4.5, -2, 3.5, -1.5, 3, 1.5, 2.25, 2, 2.5, 2, 3.5, 1.5, 4, -1.5, 4.75] // O\r\n// ];\r\n\r\n// makeLogo1 = function() {\r\n//     let pt = makeP('LEGO Logo for Studs - Non-3D Thin Lines', 'logo.dat');\r\n//     pt.ldraw_org = 'Unofficial_Primitive';\r\n//     let step = new THREE.LDRStep();\r\n\r\n//     logoPositions.forEach(letter => {\r\n// \tfor(let i = 2; i < letter.length; i+=2) {\r\n//             let p1 = new THREE.Vector3(letter[i-2], 0, letter[i-1]);\r\n//             let p2 = new THREE.Vector3(letter[i], 0, letter[i+1]);\r\n// \t    step.addLine(24, p1, p2);\r\n// \t}\r\n//     });\r\n\r\n//     pt.steps.push(step); // No need to user 'addStep()' for primitives.\r\n//     return pt;\r\n// }\r\n\r\n\r\n\r\nlet map = {\r\n    '1-4edge.dat': () => makeCircle4(1),\r\n    '2-4edge.dat': () => makeCircle4(2),\r\n    '4-4edge.dat': () => makeCircle4(4),\r\n    '1-4cyli.dat': () => makeCylinder(true, 1),\r\n    '1-4cyli2.dat': () => makeCylinder(false, 1),\r\n    '2-4cyli.dat': () => makeCylinder(true, 2),\r\n    '2-4cyli2.dat': () => makeCylinder(false, 2),\r\n    '4-4cyli.dat': () => makeCylinder(true, 4),\r\n    '4-4cyli2.dat': () => makeCylinder(false, 4),\r\n    '1-4cylc.dat': () => makeCylinderClosed(1),\r\n    '2-4cylc.dat': () => makeCylinderClosed(2),\r\n    '4-4cylc.dat': () => makeCylinderClosed(4),\r\n    '1-4cyls.dat': () => makeCylinderSloped(1),\r\n    '2-4cyls.dat': () => makeCylinderSloped(2),\r\n    '4-4cyls.dat': () => makeCylinderSloped(4),\r\n    '1-4disc.dat': () => makeDisc(1),\r\n    '2-4disc.dat': () => makeDisc(2),\r\n    //'3-4disc.dat': () => makeDisc(3), // TODO Check that this is correct!\r\n    '4-4disc.dat': () => makeDisc(4),\r\n    '2-4ring1.dat': () => makeRing(2, 1),\r\n    '4-4ring2.dat': () => makeRing(4, 2),\r\n    '4-4ring3.dat': () => makeRing(4, 3),\r\n    '4-4ring5.dat': () => makeRing(4, 5),\r\n    '4-4ring6.dat': () => makeRing(4, 6),\r\n    // 'logo.dat': () => makeLogo1(),\r\n    // 'empty.dat': () => makeEmpty()\r\n};\n\n//# sourceURL=webpack://ldr/./src/LDRGenerator.js?");

/***/ }),

/***/ "./src/LDRGeometry.js":
/*!****************************!*\
  !*** ./src/LDRGeometry.js ***!
  \****************************/
/*! exports provided: EPS, mergeGeometries, vertexSorter, vertexLessThan, vertexEqual, LDRGeometry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EPS\", function() { return EPS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeGeometries\", function() { return mergeGeometries; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vertexSorter\", function() { return vertexSorter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vertexLessThan\", function() { return vertexLessThan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vertexEqual\", function() { return vertexEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRGeometry\", function() { return LDRGeometry; });\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n/* harmony import */ var _LDRColorManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LDRColorManager */ \"./src/LDRColorManager.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nlet EPS = 1e-5;\r\n\r\n/*\r\n  Binary merge of the geometry streams.\r\n */\r\nlet mergeGeometries = function (geometries) {\r\n    if (geometries.length === 0) {\r\n        return new LDRGeometry();\r\n    }\r\n    while (geometries.length > 1) { // Repeat rounds until only 1 left:\r\n        let nextGeometries = []; // Result of round.\r\n\r\n        if (geometries.length % 2 === 1) {\r\n            nextGeometries.push(geometries[geometries.length - 1]); // Take last geometry without merging it.\r\n        }\r\n\r\n        for (let i = 0; i < geometries.length - 1; i += 2) {\r\n            geometries[i].merge(geometries[i + 1]);\r\n            nextGeometries.push(geometries[i]);\r\n        }\r\n        geometries = nextGeometries;\r\n    }\r\n    return geometries[0];\r\n}\r\n\r\n/*\r\n  A vertex is sorted by {x,y,z,c}.\r\n */\r\nlet vertexSorter = function (a, b) {\r\n    if (a.x !== b.x) {\r\n        return a.x - b.x;\r\n    }\r\n    if (a.y !== b.y) {\r\n        return a.y - b.y;\r\n    }\r\n    return a.z - b.z;\r\n}\r\n\r\nlet vertexLessThan = function (a, b) {\r\n    if (a.x !== b.x) {\r\n        return a.x < b.x;\r\n    }\r\n    if (a.y !== b.y) {\r\n        return a.y < b.y;\r\n    }\r\n    return a.z < b.z;\r\n}\r\n\r\nlet vertexEqual = function (a, b) {\r\n    return Math.abs(a.x - b.x) < EPS &&\r\n        Math.abs(a.y - b.y) < EPS &&\r\n        Math.abs(a.z - b.z) < EPS;\r\n}\r\n\r\nlet LDRGeometry = function () {\r\n    this.vertices = []; // Sorted (x,y,z,o), where 'o' is a LEGO-logo indicator.\r\n    this.lines = {}; // c -> [{p1,p2},...] (color -> indices)\r\n    this.conditionalLines = {}; // c -> [{p1,p2,p3,p4},...]\r\n    this.triangles = {}; // c -> [{p1,p2,p3},...]\r\n    this.triangles2 = {}; // Triangles without culling\r\n    this.quads = {}; // c -> [{p1,p2,p3,p4},...]\r\n    this.quads2 = {}; // Quads without culling.\r\n    // geometries:\r\n    this.lineColorManager;\r\n    this.lineGeometry;\r\n    this.triangleGeometries = {}; // c -> geometry\r\n    // this.texmapGeometries = {}; // texmapID -> [{c,g}] Populated with one geometry pr TEXMAP START command.\r\n    this.conditionalLineGeometry;\r\n    this.geometriesBuilt = false;\r\n    this.boundingBox = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.create();\r\n}\r\n\r\n// /*\r\n//   Used for showing points where all vertices are.\r\n//  */\r\n// LDRGeometry.prototype.buildVertexAttribute = function (r) {\r\n//     let vertices = [];\r\n//     this.vertices.forEach(v => {\r\n//         let p = new THREE.Vector3(v.x, v.y, v.z);\r\n//         p.applyMatrix3(r);\r\n//         vertices.push(p.x, p.y, p.z);\r\n//     });\r\n//     return new THREE.Float32BufferAttribute(vertices, 3);\r\n// }\r\n\r\nLDRGeometry.prototype.buildGeometriesAndColorsForLines = function () {\r\n    this.lineColorManager = new _LDRColorManager__WEBPACK_IMPORTED_MODULE_1__[\"LDRColorManager\"]();\r\n\r\n    // Vertices for the geometries have size 3 for single color geometries and size 4 for multi-colored (they include color indices as fourth component):\r\n    // First handle line vertices:\r\n    let allLineColors = [];\r\n    for (let c in this.lines) {\r\n        if (this.lines.hasOwnProperty(c)) {\r\n            allLineColors.push(c);\r\n        }\r\n    }\r\n    for (let c in this.conditionalLines) {\r\n        if (!this.lines.hasOwnProperty(c) && this.conditionalLines.hasOwnProperty(c)) {\r\n            allLineColors.push(c);\r\n        }\r\n    }\r\n\r\n    var self = this;\r\n    let colorIdx = 0;\r\n    let handleVertex = function (vertices, idx, fc) {\r\n        let v = self.vertices[idx];\r\n        if (v.c !== colorIdx) {\r\n            v.c = colorIdx;\r\n            v.idx = vertices.length / 4;\r\n            vertices.push(v.x, v.y, v.z, fc);\r\n        }\r\n        return v.idx;\r\n    }\r\n\r\n    let lineVertexAttribute, lineVertices = [], lineIndices = [];\r\n    if (allLineColors.length === 1) {\r\n        let c = allLineColors[0];\r\n        this.lineColorManager.get(c); // Ensure color is present.\r\n        this.vertices.forEach(v => lineVertices.push(v.x, v.y, v.z));\r\n        lineVertexAttribute = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(lineVertices, 3);\r\n        // No need to update indices of lines.\r\n        if (this.lines.hasOwnProperty(c)) {\r\n            this.lines[c].forEach(line => lineIndices.push(line.p1, line.p2));\r\n        }\r\n    }\r\n    else if (allLineColors.length > 1) {\r\n        /*\r\n          Duplicate vertices for each color.\r\n         */\r\n        for (let c in this.lines) {\r\n            colorIdx++;\r\n            if (!this.lines.hasOwnProperty(c)) {\r\n                continue;\r\n            }\r\n            let fc = this.lineColorManager.get(c);\r\n\r\n            this.lines[c].forEach(line => {\r\n                lineIndices.push(handleVertex(lineVertices, line.p1, fc)); // Update indices\r\n                lineIndices.push(handleVertex(lineVertices, line.p2, fc));\r\n            });\r\n        }\r\n        lineVertexAttribute = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(lineVertices, 4);\r\n    }\r\n    this.lineGeometry = this.buildGeometry(lineIndices, lineVertexAttribute);\r\n\r\n    // Conditional lines:\r\n    let conditionalLines = [];\r\n    for (let c in this.conditionalLines) {\r\n        if (!this.conditionalLines.hasOwnProperty(c)) {\r\n            continue;\r\n        }\r\n        let fc = this.lineColorManager.get(c);\r\n        this.conditionalLines[c].forEach(p => {\r\n            let p1 = this.vertices[p.p1];\r\n            let p2 = this.vertices[p.p2];\r\n            let p3 = this.vertices[p.p3];\r\n            let p4 = this.vertices[p.p4];\r\n            conditionalLines.push({ p1: p1, p2: p2, p3: p3, p4: p4, fc: fc });\r\n        });\r\n    }\r\n    this.buildGeometryForConditionalLines(allLineColors.length > 1, conditionalLines);\r\n}\r\n\r\n/*\r\n  Build geometries and color managers for standard (quick draw) drawing (seen in building instructions and parts lists)\r\n */\r\nLDRGeometry.prototype.buildGeometriesAndColors = function () {\r\n    if (this.geometriesBuilt) {\r\n        return; // Already built.\r\n    }\r\n    let self = this;\r\n    this.buildGeometriesAndColorsForLines();\r\n\r\n    // Now handle triangle colors and vertices:\r\n    let allTriangleColors = [];\r\n    let seen = {};\r\n    function getColorsFrom(p) {\r\n        for (let c in p) {\r\n            if (!seen.hasOwnProperty(c) && p.hasOwnProperty(c)) {\r\n                allTriangleColors.push(c);\r\n                seen[c] = true;\r\n            }\r\n        }\r\n    }\r\n    getColorsFrom(this.triangles);\r\n    getColorsFrom(this.triangles2);\r\n    getColorsFrom(this.quads);\r\n    getColorsFrom(this.quads2);\r\n\r\n    let colorIdx = -1;\r\n    allTriangleColors.forEach(c => {\r\n        let triangleVertices = [], triangleIndices = [];\r\n        colorIdx--;\r\n        let tvIdx = 0;\r\n\r\n        let hv = function (idx) { // Handle vertex:\r\n            let v = self.vertices[idx];\r\n            if (v.c !== colorIdx) { // Not already seen for this color.\r\n                v.c = colorIdx;\r\n                v.idx = tvIdx++;\r\n                triangleVertices.push(v.x, v.y, v.z);\r\n            }\r\n            return v.idx;\r\n        }\r\n\r\n        function handlePrimitives(ps, f) {\r\n            if (ps.hasOwnProperty(c)) {\r\n                ps[c].filter(p => !p.t).forEach(f);\r\n            }\r\n        }\r\n        handlePrimitives(self.triangles, t => triangleIndices.push(hv(t.p1), hv(t.p2), hv(t.p3)));\r\n        handlePrimitives(self.triangles2, t => { let i1 = hv(t.p1), i2 = hv(t.p2), i3 = hv(t.p3); triangleIndices.push(i1, i2, i3, i3, i2, i1); });\r\n        handlePrimitives(self.quads, q => { let i1 = hv(q.p1), i2 = hv(q.p2), i3 = hv(q.p3), i4 = hv(q.p4); triangleIndices.push(i1, i2, i4, i2, i3, i4); });\r\n        handlePrimitives(self.quads2, q => { let i1 = hv(q.p1), i2 = hv(q.p2), i3 = hv(q.p3), i4 = hv(q.p4); triangleIndices.push(i1, i2, i4, i2, i3, i4, i4, i3, i2, i4, i2, i1); });\r\n\r\n        let triangleVertexAttribute = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(triangleVertices, 3);\r\n        let triangleGeometry = this.buildGeometry(triangleIndices, triangleVertexAttribute);\r\n        if (triangleGeometry) {\r\n            this.triangleGeometries[c] = triangleGeometry;\r\n        }\r\n    });\r\n\r\n    // // Handle texmap geometries:\r\n    // allTriangleColors.forEach(c => self.buildTexmapGeometriesForColor(c));\r\n\r\n    this.geometriesBuilt = true;\r\n}\r\n\r\n// LDRGeometry.prototype.buildTexmapGeometriesForColor = function (c) {\r\n//     let self = this;\r\n\r\n//     let texmapped = {}; // idx => [{p,size,noBFC}]\r\n//     function check(ps, q, noBFC) {\r\n//         if (!ps.hasOwnProperty(c)) {\r\n//             return;\r\n//         }\r\n//         ps[c].filter(p => p.t).forEach(p => {\r\n//             if (!texmapped.hasOwnProperty(p.t.idx)) {\r\n//                 texmapped[p.t.idx] = [];\r\n//             }\r\n//             texmapped[p.t.idx].push({ p: p, q: q, noBFC: noBFC });\r\n//         });\r\n//     }\r\n//     check(self.triangles, false, false);\r\n//     check(self.triangles2, false, true);\r\n//     check(self.quads, true, false);\r\n//     check(self.quads2, true, true);\r\n\r\n//     for (let idx in texmapped) {\r\n//         if (!texmapped.hasOwnProperty(idx)) {\r\n//             return;\r\n//         }\r\n//         let primitiveList = texmapped[idx];\r\n\r\n//         // Build indexed geometry for the texture:\r\n//         let vertices = []; // x 3\r\n//         let indices = []; // x 1\r\n//         let uvs = []; // x 2\r\n//         let indexMap = {}; // original index -> new index\r\n\r\n//         //let uvs = new Float32Array(triangleVertices.length*2); // TODO!\r\n\r\n//         // Compute ps and uvs:\r\n//         let texmapPlacement;\r\n//         function set(a, b, c) {\r\n//             let vertex = self.vertices[a];\r\n//             let [u, v] = texmapPlacement.getUV(vertex, self.vertices[b], self.vertices[c]);\r\n\r\n//             if (indexMap.hasOwnProperty(a)) {\r\n//                 let idx = indexMap[a];\r\n//                 // Check UV:\r\n//                 let oldU = uvs[2 * idx], oldV = uvs[2 * idx + 1];\r\n//                 /*if(oldU === u && oldV === v) { TODO!\r\n//                     indices.push(idx);\r\n//                     return;\r\n//                     } TODO */\r\n//             }\r\n\r\n//             let idx = indices.length;\r\n//             indexMap[a] = idx;\r\n//             vertices.push(vertex.x, vertex.y, vertex.z);\r\n//             indices.push(idx);\r\n//             uvs.push(u, v);\r\n//         }\r\n//         function setAll(a, b, c) {\r\n//             set(a, b, c);\r\n//             set(b, a, c);\r\n//             set(c, a, b);\r\n//         }\r\n//         primitiveList.forEach(ele => {\r\n//             let p = ele.p, q = ele.q, noBFC = ele.noBFC;\r\n//             texmapPlacement = p.t;\r\n\r\n//             setAll(p.p1, p.p2, p.p3);\r\n//             if (noBFC) {\r\n//                 setAll(p.p3, p.p2, p.p1);\r\n//             }\r\n//             if (q) { // Quad:\r\n//                 setAll(p.p1, p.p3, p.p4);\r\n//                 if (noBFC) {\r\n//                     setAll(p.p4, p.p3, p.p1);\r\n//                 }\r\n//             }\r\n//         });\r\n\r\n//         let g = self.buildGeometry(indices, new THREE.Float32BufferAttribute(vertices, 3));\r\n//         g.computeVertexNormals(); // Also normalizes.\r\n\r\n//         g.setAttribute('uv', new THREE.Float32BufferAttribute(uvs, 2));\r\n//         if (!self.texmapGeometries.hasOwnProperty(texmapPlacement.idx)) {\r\n//             self.texmapGeometries[texmapPlacement.idx] = [];\r\n//         }\r\n//         self.texmapGeometries[texmapPlacement.idx].push({ c: c, g: g });\r\n//     }\r\n// }\r\n\r\n// Optimized version of the one found in https://github.com/mrdoob/three.js/blob/master/src/core/BufferGeometry.js\r\n// THREE.BufferGeometry.prototype.computeVertexNormals = function () {\r\n//     var attributes = this.attributes;\r\n//     var positions = attributes.position.array;\r\n\r\n//     this.setAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\r\n//     var normals = attributes.normal.array;\r\n\r\n//     var vA, vB, vC;\r\n//     var pA = new THREE.Vector3(), pB = new THREE.Vector3(), pC = new THREE.Vector3();\r\n//     var cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n//     var index = this.index;\r\n//     var indices = index.array;\r\n//     for (var i = 0, il = index.count; i < il; i += 3) {\r\n//         vA = indices[i] * 3;\r\n//         vB = indices[i + 1] * 3;\r\n//         vC = indices[i + 2] * 3;\r\n\r\n//         pA.fromArray(positions, vA);\r\n//         pB.fromArray(positions, vB);\r\n//         pC.fromArray(positions, vC);\r\n\r\n//         cb.subVectors(pC, pB);\r\n//         ab.subVectors(pA, pB);\r\n//         cb.cross(ab);\r\n\r\n//         normals[vA] += cb.x;\r\n//         normals[vA + 1] += cb.y;\r\n//         normals[vA + 2] += cb.z;\r\n\r\n//         normals[vB] += cb.x;\r\n//         normals[vB + 1] += cb.y;\r\n//         normals[vB + 2] += cb.z;\r\n\r\n//         normals[vC] += cb.x;\r\n//         normals[vC + 1] += cb.y;\r\n//         normals[vC + 2] += cb.z;\r\n//     }\r\n//     this.normalizeNormals();\r\n//     attributes.normal.needsUpdate = true;\r\n// }\r\n\r\n/**\r\n   This function also computes normals and UV's to be used by standard materials.\r\n */\r\n// LDRGeometry.UV_WarningWritten = false;\r\n// LDRGeometry.prototype.buildPhysicalGeometriesAndColors = function () {\r\n//     if (this.geometriesBuilt) {\r\n//         return;\r\n//     }\r\n\r\n//     var self = this;\r\n//     let vertices = this.vertices;\r\n//     let vLen = vertices.length;\r\n//     const VLEN = vLen;\r\n//     let key = (a, b) => (a < b) ? (a * VLEN + b) : (b * VLEN + a);\r\n\r\n//     // Find bounds:\r\n//     let b = new THREE.Box3();\r\n//     vertices.forEach(v => b.expandByPoint(v));\r\n//     let size = new THREE.Vector3();\r\n//     b.getSize(size);\r\n\r\n//     // Mark lines shared by lines and conditional lines:\r\n//     let edges = []; // 0/1 => soft, 2 => hard\r\n//     for (let c in this.conditionalLines) {\r\n//         if (this.conditionalLines.hasOwnProperty(c)) {\r\n//             let lines = this.conditionalLines[c];\r\n//             lines.forEach(line => edges[key(line.p1, line.p2)] = true);\r\n//         }\r\n//     }\r\n//     for (let c in this.lines) {\r\n//         if (this.lines.hasOwnProperty(c)) {\r\n//             let lines = this.lines[c];\r\n//             lines.forEach(line => vertices[line.p1].hard = vertices[line.p2].hard = true);\r\n//             lines.forEach(line => edges[key(line.p1, line.p2)] = false); // This fixes duplicate soft and hard edges.\r\n//         }\r\n//     }\r\n\r\n//     // Now handle triangle colors and vertices:\r\n//     let allTriangleColors = [];\r\n//     let seenColors = {};\r\n//     function getColorsFrom(p) {\r\n//         for (let c in p) {\r\n//             if (!seenColors.hasOwnProperty(c) && p.hasOwnProperty(c)) {\r\n//                 allTriangleColors.push(c);\r\n//                 seenColors[c] = true;\r\n//             }\r\n//         }\r\n//     }\r\n//     getColorsFrom(this.triangles);\r\n//     getColorsFrom(this.triangles2);\r\n//     getColorsFrom(this.quads);\r\n//     getColorsFrom(this.quads2);\r\n\r\n//     function renew(i) {\r\n//         let v = vertices[i];\r\n//         vertices.push({ x: v.x, y: v.y, z: v.z }); // No mark as it is new and will not be visited again.\r\n//         vLen++;\r\n//         return vLen - 1;\r\n//     }\r\n\r\n//     function updateTriangleIndices(t) {\r\n//         let p1 = t.p1, p2 = t.p2, p3 = t.p3;\r\n//         let h1 = vertices[p1].hard, h2 = vertices[p2].hard, h3 = vertices[p3].hard;\r\n//         let k12 = edges[key(p1, p2)], k23 = edges[key(p2, p3)], k31 = edges[key(p3, p1)];\r\n\r\n//         if (h1 && !k12 && !k31) {\r\n//             t.p1 = renew(t.p1);\r\n//         }\r\n//         if (h2 && !k12 && !k23) {\r\n//             t.p2 = renew(t.p2);\r\n//         }\r\n//         if (h3 && !k23 && !k31) {\r\n//             t.p3 = renew(t.p3);\r\n//         }\r\n//     }\r\n\r\n//     function updateQuadIndices(t) {\r\n//         let p1 = t.p1, p2 = t.p2, p3 = t.p3, p4 = t.p4;\r\n//         let h1 = vertices[p1].hard, h2 = vertices[p2].hard, h3 = vertices[p3].hard, h4 = vertices[p4].hard;\r\n//         let k12 = edges[key(p1, p2)], k23 = edges[key(p2, p3)], k34 = edges[key(p3, p4)], k41 = edges[key(p4, p1)];\r\n\r\n//         if (h1 && !k12 && !k41) {\r\n//             t.p1 = renew(t.p1);\r\n//         }\r\n//         if (h2 && !k12 && !k23) {\r\n//             t.p2 = renew(t.p2);\r\n//         }\r\n//         if (h3 && !k23 && !k34) {\r\n//             t.p3 = renew(t.p3);\r\n//         }\r\n//         if (h4 && !k41 && !k34) {\r\n//             t.p4 = renew(t.p4);\r\n//         }\r\n//     }\r\n\r\n//     allTriangleColors.forEach(c => {\r\n//         if (self.triangles.hasOwnProperty(c)) {\r\n//             self.triangles[c].forEach(updateTriangleIndices);\r\n//         }\r\n//         if (self.triangles2.hasOwnProperty(c)) {\r\n//             self.triangles2[c].forEach(updateTriangleIndices);\r\n//         }\r\n//         if (self.quads.hasOwnProperty(c)) {\r\n//             self.quads[c].forEach(updateQuadIndices);\r\n//         }\r\n//         if (self.quads2.hasOwnProperty(c)) {\r\n//             self.quads2[c].forEach(updateQuadIndices);\r\n//         }\r\n//     });\r\n\r\n//     let triangleVertices = [];\r\n//     vertices.forEach(v => triangleVertices.push(v.x, v.y, v.z));\r\n//     let triangleVertexAttribute = new THREE.Float32BufferAttribute(triangleVertices, 3);\r\n\r\n//     allTriangleColors.forEach(c => {\r\n//         let triangleIndices = [];\r\n\r\n//         function pushT(a, b, c) {\r\n//             triangleIndices.push(a, b, c);\r\n//         }\r\n//         function pushQ(a, b, c, d) {\r\n//             triangleIndices.push(a, b, d);\r\n//             triangleIndices.push(b, c, d);\r\n//         }\r\n\r\n//         let triangles = self.triangles.hasOwnProperty(c) ? self.triangles[c].filter(p => !p.t) : [];\r\n//         let triangles2 = self.triangles2.hasOwnProperty(c) ? self.triangles2[c].filter(p => !p.t) : [];\r\n//         let quads = self.quads.hasOwnProperty(c) ? self.quads[c].filter(p => !p.t) : [];\r\n//         let quads2 = self.quads2.hasOwnProperty(c) ? self.quads2[c].filter(p => !p.t) : [];\r\n\r\n//         triangles.forEach(t => pushT(t.p1, t.p2, t.p3));\r\n//         triangles2.forEach(t => { pushT(t.p1, t.p2, t.p3); pushT(t.p3, t.p2, t.p1); });\r\n//         quads.forEach(q => pushQ(q.p1, q.p2, q.p3, q.p4));\r\n//         quads2.forEach(q => { pushQ(q.p1, q.p2, q.p3, q.p4); pushQ(q.p4, q.p3, q.p2, q.p1); });\r\n\r\n//         if (triangleIndices.length === 0) {\r\n//             return; // None in color.\r\n//         }\r\n\r\n//         let g = self.buildGeometry(triangleIndices, triangleVertexAttribute); // TODO: Split vertexattribute by color! - compare performance!\r\n//         g.computeVertexNormals(); // Also normalizes.\r\n\r\n//         /* \r\n//            Compute UV's:\r\n//            The heuristic for computing UV's has to translate from\r\n//            3D space x 3D space (Positions and normals) to 2D (UV's)\r\n\r\n//            The heuristic performs this reduction as follows:\r\n//            0) If 3 or more normals point the same way, then project to one of the rectilinear planes and return.\r\n//            1) The sum of normals N is computed.\r\n//            2) Let v and n denote the position and normal of a point. UV is computed:\r\n//               U = v.x + planar_angle_of(n.x, n.z)\r\n//               V = v.z + acos(n.y)\r\n//            *) If |N.y| >= MAX(|N.x|, |N.z|) then perform UV calculation using XY instead of XZ above.\r\n//          */\r\n//         let normals = g.getAttribute('normal').array;\r\n//         let uvs = [];\r\n//         for (let i = 0; i < vLen; i++) {\r\n//             uvs.push(0, 0);\r\n//         }\r\n//         let dx = v => (v.x - b.min.x) / size.x;\r\n//         let dy = v => (v.y - b.min.y) / size.y;\r\n//         let dz = v => (v.z - b.min.z) / size.z;\r\n//         let [UVU, UVV] = [[0.5, 0.5], [0, 0], [0.5, 0]][Math.floor(Math.random() * 3)]; // Which of the 3 cells to use for the UV mapping (not 1,1 with the LEGO logo)\r\n\r\n//         function setUVs(indices) {\r\n//             const len = indices.length;\r\n//             let maxDiff = xs => xs.map((x, idx, a) => Math.abs(x - a[idx === 0 ? len - 1 : idx - 1])).reduce((a, b) => a > b ? a : b, 0);\r\n//             let vs = indices.map(i => vertices[i]);\r\n//             let ns = indices.map(i => 3 * i).map(idx => new THREE.Vector3(normals[idx], normals[1 + idx], normals[2 + idx]));\r\n//             let N = ns.reduce((a, b) => new THREE.Vector3(a.x + b.x, a.y + b.y, a.z + b.z), new THREE.Vector3());\r\n//             let NX = N.x * N.x, NY = N.y * N.y, NZ = N.z * N.z;\r\n\r\n//             function setUV(fu, fv, force) {\r\n//                 let ret = vs.map((v, i) => { return { u: fu(v, i), v: fv(v, i) }; });\r\n\r\n//                 if (!force) {\r\n//                     let prevprev = ret[ret.length - 2];\r\n//                     let prev = ret[ret.length - 1];\r\n//                     let turn = uv => (prev.u - prevprev.u) * (uv.v - prevprev.v) - (prev.v - prevprev.v) * (uv.u - prevprev.u);\r\n//                     for (let i = 0; i < ret.length; i++) {\r\n//                         let uv = ret[i];\r\n//                         if (Math.abs(prev.u - uv.u) < EPS && Math.abs(prev.v - uv.v) < EPS ||\r\n//                             Math.abs(prevprev.u - uv.u) < EPS && Math.abs(prevprev.v - uv.v) < EPS ||\r\n//                             Math.abs(turn(uv)) < 1e-7) {\r\n//                             if (!LDRGeometry.UV_WarningWritten) {\r\n//                                 console.log('UV issue insights for debugging. Underlying data points (vertices and normals):');\r\n//                                 console.dir(vs);\r\n//                                 console.dir(ns);\r\n//                                 console.dir('Computed U`s:');\r\n//                                 console.dir(ret);\r\n//                                 console.dir('Turn angle check at failure: ' + turn(uv));\r\n//                                 console.warn(\"Degenerate UV! \" + uv.u + ', ' + uv.v);\r\n//                                 LDRGeometry.UV_WarningWritten = true;\r\n//                             }\r\n//                             return false;\r\n//                         }\r\n//                         prevprev = prev;\r\n//                         prev = uv;\r\n//                     }\r\n//                 }\r\n\r\n//                 ret.forEach((uv, i) => {\r\n//                     let idx = 2 * indices[i];\r\n//                     uvs[idx] = 0.5 * uv.u + UVU;\r\n//                     uvs[idx + 1] = 0.5 * uv.v + UVV;\r\n//                 });\r\n\r\n//                 return true;\r\n//             }\r\n\r\n//             // Check if at least 3 normals point the same direction:\r\n//             let equalVector3 = (a, b) => Math.abs(a.x - b.x) < EPS && Math.abs(a.y - b.y) < EPS && Math.abs(a.z - b.z) < EPS;\r\n//             function atLeast3EqualNormals() {\r\n//                 let a = [...ns]; // Shallow copy.\r\n//                 a.sort(vertexSorter);\r\n//                 if (equalVector3(a[0], a[a.length - 1])) {\r\n//                     return true; // All equal!\r\n//                 }\r\n//                 if (a.length !== 4) {\r\n//                     return false;\r\n//                 }\r\n//                 return equalVector3(a[0], a[2]) || equalVector3(a[1], a[3]);\r\n//             }\r\n//             if (atLeast3EqualNormals()) { // Just project onto the plane where the normals point the most:\r\n//                 // First check if this is a simple rectilinear face:\r\n//                 let DX, DY, DZ;\r\n//                 if (vs.some(v => v.o === true)) {\r\n//                     let origo = vs.find(v => v.o === true);\r\n//                     let anyOther = vs.find(v => v.o !== true);\r\n//                     DX = origo.x - anyOther.x;\r\n//                     DY = origo.y - anyOther.y;\r\n//                     DZ = origo.z - anyOther.z;\r\n//                     let radius = 3 * Math.sqrt(DX * DX + DY * DY + DZ * DZ);\r\n\r\n//                     DX = v => 0.5 + (v.x - origo.x) / radius;\r\n//                     DY = v => 0.5 + (v.y - origo.y) / radius;\r\n//                     DZ = v => 0.5 + (v.z - origo.z) / radius;\r\n//                     setUV = function (fu, fv) {\r\n//                         let ret = vs.map((v, i) => { return { u: fu(v, i), v: fv(v, i) }; });\r\n//                         ret.forEach((uv, i) => {\r\n//                             let idx = 2 * indices[i];\r\n//                             uvs[idx] = 0.5 * uv.u;\r\n//                             uvs[idx + 1] = 0.5 * uv.v + 0.5;\r\n//                         });\r\n//                     }\r\n//                 }\r\n//                 else {\r\n//                     DX = dx;\r\n//                     DY = dy;\r\n//                     DZ = dz;\r\n//                 }\r\n\r\n//                 if (maxDiff(vs.map(v => v.x)) < EPS) { // y/z projection:\r\n//                     setUV(DY, DZ, true);\r\n//                 }\r\n//                 else if (maxDiff(vs.map(v => v.y)) < EPS) {\r\n//                     setUV(DX, DZ, true);\r\n//                 }\r\n//                 else if (maxDiff(vs.map(v => v.z)) < EPS) {\r\n//                     setUV(DX, DY, true);\r\n//                 }\r\n//                 else if (NX >= NY && NX >= NZ) {\r\n//                     setUV(DY, DZ, true);\r\n//                 }\r\n//                 else if (NY >= NX && NY >= NZ) {\r\n//                     setUV(DX, DZ, true);\r\n//                 }\r\n//                 else { // NZ >= both NX and NY\r\n//                     setUV(DX, DY, true);\r\n//                 }\r\n//                 return;\r\n//             }\r\n\r\n//             // Math.atan2 -> [-PI;PI], and Math.acos => [0;PI]\r\n//             const PI1 = 0.8 / Math.PI;\r\n//             const PI2 = 0.3 / Math.PI;\r\n//             let toCircle = (y, x) => (Math.atan2(y, x) + Math.PI) * PI2;\r\n//             let toHeight = x => Math.acos(x) * PI1;\r\n//             const C3 = 0.2 / (size.x + size.y + size.z);\r\n//             let dxyz = v => 0.1 + (v.x + v.y + v.z) * C3;\r\n\r\n//             if (NY >= Math.max(NX + NZ)) {\r\n//                 setUV((v, i) => dxyz(v) + toCircle(ns[i].x, ns[i].z),\r\n//                     (v, i) => dxyz(v) + toHeight(ns[i].y), false) ||\r\n//                     setUV(dx, dz, true);\r\n//             }\r\n//             else {\r\n//                 setUV((v, i) => dxyz(v) + toCircle(ns[i].x, ns[i].y),\r\n//                     (v, i) => dxyz(v) + toHeight(ns[i].z), false) ||\r\n//                     setUV(dx, dy, true);\r\n//             }\r\n//         }\r\n\r\n//         triangles.forEach(t => setUVs([t.p1, t.p2, t.p3]));\r\n//         triangles2.forEach(t => setUVs([t.p1, t.p2, t.p3]));\r\n//         quads.forEach(q => setUVs([q.p1, q.p2, q.p3, q.p4]));\r\n//         quads2.forEach(q => setUVs([q.p1, q.p2, q.p3, q.p4]));\r\n\r\n//         g.setAttribute('uv', new THREE.Float32BufferAttribute(uvs, 2));\r\n//         //g.attributes.uv2 = g.attributes.uv; // Used by aoMap (not in use yet)\r\n\r\n//         self.triangleGeometries[c] = g;\r\n//     });\r\n\r\n//     // Handle texmap geometries:\r\n//     allTriangleColors.forEach(c => self.buildTexmapGeometriesForColor(c));\r\n\r\n//     this.geometriesBuilt = true;\r\n\r\n//     //this.cleanTempData();\r\n// }\r\n\r\nLDRGeometry.prototype.cleanTempData = function () {\r\n    delete this.vertices;\r\n    delete this.lines;\r\n    delete this.conditionalLines;\r\n    delete this.quads;\r\n    delete this.quads2;\r\n    delete this.triangles;\r\n    delete this.triangles2;\r\n}\r\n\r\nLDRGeometry.prototype.buildGeometry = function (indices, vertexAttribute) {\r\n    if (indices.length === 0) {\r\n        return null;\r\n    }\r\n    let g = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createBufferGeometry();\r\n    g = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.setIndex(indices, g);\r\n    g = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.setAttribute('position', vertexAttribute, g);\r\n\r\n    return g;\r\n}\r\n\r\nLDRGeometry.prototype.buildGeometryForConditionalLines = function (multiColored, conditionalLines) {\r\n    if (conditionalLines.length === 0) {\r\n        return;\r\n    }\r\n    this.conditionalLineGeometry = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createBufferGeometry();\r\n    let p1s = [], p2s = [], p3s = [], p4s = [], colorIndices = [];\r\n\r\n    // Now handle conditional lines:\r\n    for (let i = 0; i < conditionalLines.length; i++) {\r\n        let line = conditionalLines[i]; // {p1, p2, p3, p4, fc}\r\n        let p1 = line.p1, p2 = line.p2, p3 = line.p3, p4 = line.p4;\r\n\r\n        p1s.push(p1.x, p1.y, p1.z, p2.x, p2.y, p2.z); // 2 points => 1 line in shader.\r\n        p2s.push(p2.x, p2.y, p2.z, p1.x, p1.y, p1.z); // Counter points for calculations\r\n        p3s.push(p3.x, p3.y, p3.z, p3.x, p3.y, p3.z); // p3's\r\n        p4s.push(p4.x, p4.y, p4.z, p4.x, p4.y, p4.z); // p4's\r\n        if (multiColored) {\r\n            colorIndices.push(line.fc, line.fc); // 2 points.\r\n        }\r\n    }\r\n    this.conditionalLineGeometry = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.setAttribute(\r\n        'position', _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(p1s, 3), this.conditionalLineGeometry\r\n    );\r\n    this.conditionalLineGeometry = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.setAttribute(\r\n        'p2', _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(p2s, 3),\r\n\r\n        this.conditionalLineGeometry\r\n    );\r\n    this.conditionalLineGeometry = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.setAttribute(\r\n        'p3', _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(p3s, 3),\r\n\r\n        this.conditionalLineGeometry\r\n    );\r\n    this.conditionalLineGeometry = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.setAttribute(\r\n        'p4', _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(p4s, 3),\r\n\r\n        this.conditionalLineGeometry\r\n    );\r\n    if (multiColored) {\r\n        this.conditionalLineGeometry = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.setAttribute(\r\n            'colorIndex', _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Geometry.createFloat32BufferAttribute(new Float32Array(colorIndices), 1),\r\n\r\n            this.conditionalLineGeometry\r\n        );\r\n    }\r\n}\r\n\r\nLDRGeometry.prototype.replaceWith = function (g) {\r\n    this.vertices = g.vertices;\r\n    this.lines = g.lines;\r\n    this.conditionalLines = g.conditionalLines;\r\n    this.triangles = g.triangles;\r\n    this.triangles2 = g.triangles2;\r\n    this.quads = g.quads;\r\n    this.quads2 = g.quads2;\r\n    this.boundingBox = g.boundingBox;\r\n}\r\n\r\nLDRGeometry.prototype.replaceWithDeep = function (g) {\r\n    let self = this;\r\n    g.vertices.forEach(v => self.vertices.push({ x: v.x, y: v.y, z: v.z, o: v.o }));\r\n\r\n    for (let c in g.lines) {\r\n        if (!g.lines.hasOwnProperty(c)) {\r\n            continue;\r\n        }\r\n        let ps = [];\r\n        g.lines[c].forEach(p => ps.push({ p1: p.p1, p2: p.p2 }));\r\n        this.lines[c] = ps;\r\n    }\r\n    for (let c in g.conditionalLines) {\r\n        if (!g.conditionalLines.hasOwnProperty(c)) {\r\n            continue;\r\n        }\r\n        let ps = [];\r\n        g.conditionalLines[c].forEach(p => ps.push({ p1: p.p1, p2: p.p2, p3: p.p3, p4: p.p4 }));\r\n        this.conditionalLines[c] = ps;\r\n    }\r\n    for (let c in g.triangles) {\r\n        if (!g.triangles.hasOwnProperty(c)) {\r\n            continue;\r\n        }\r\n        let ps = [];\r\n        g.triangles[c].forEach(p => ps.push({ p1: p.p1, p2: p.p2, p3: p.p3, t: p.t }));\r\n        this.triangles[c] = ps;\r\n    }\r\n    for (let c in g.triangles2) {\r\n        if (!g.triangles2.hasOwnProperty(c)) {\r\n            continue;\r\n        }\r\n        let ps = [];\r\n        g.triangles2[c].forEach(p => ps.push({ p1: p.p1, p2: p.p2, p3: p.p3, t: p.t }));\r\n        this.triangles2[c] = ps;\r\n    }\r\n    for (let c in g.quads) {\r\n        if (!g.quads.hasOwnProperty(c)) {\r\n            continue;\r\n        }\r\n        let ps = [];\r\n        g.quads[c].forEach(p => ps.push({ p1: p.p1, p2: p.p2, p3: p.p3, p4: p.p4, t: p.t }));\r\n        this.quads[c] = ps;\r\n    }\r\n    for (let c in g.quads2) {\r\n        if (!g.quads2.hasOwnProperty(c)) {\r\n            continue;\r\n        }\r\n        let ps = [];\r\n        g.quads2[c].forEach(p => ps.push({ p1: p.p1, p2: p.p2, p3: p.p3, p4: p.p4, t: p.t }));\r\n        this.quads2[c] = ps;\r\n    }\r\n    this.boundingBox.copy(g.boundingBox);\r\n}\r\n\r\n/*\r\n  Build this from the 4 types of primitives.\r\n*/\r\nLDRGeometry.prototype.fromPrimitives = function (lines, conditionalLines, triangles, quads) {\r\n    let geometries = [];\r\n\r\n    if (lines.length > 0) {\r\n        let g = new LDRGeometry();\r\n        g.fromLines(lines);\r\n        geometries.push(g);\r\n    }\r\n    if (conditionalLines.length > 0) {\r\n        let g = new LDRGeometry();\r\n        g.fromConditionalLines(conditionalLines);\r\n        geometries.push(g);\r\n    }\r\n    let culledTriangles = triangles.filter(t => t.cull);\r\n    if (culledTriangles.length > 0) {\r\n        let g = new LDRGeometry();\r\n        g.fromTriangles(true, culledTriangles);\r\n        geometries.push(g);\r\n    }\r\n    let unculledTriangles = triangles.filter(t => !t.cull);\r\n    if (unculledTriangles.length > 0) {\r\n        let g = new LDRGeometry();\r\n        g.fromTriangles(false, unculledTriangles);\r\n        geometries.push(g);\r\n    }\r\n    let culledQuads = quads.filter(q => q.cull);\r\n    if (culledQuads.length > 0) {\r\n        let g = new LDRGeometry();\r\n        g.fromQuads(true, culledQuads);\r\n        geometries.push(g);\r\n    }\r\n    let unculledQuads = quads.filter(q => !q.cull);\r\n    if (unculledQuads.length > 0) {\r\n        let g = new LDRGeometry();\r\n        g.fromQuads(false, unculledQuads);\r\n        geometries.push(g);\r\n    }\r\n    this.replaceWith(mergeGeometries(geometries));\r\n}\r\n\r\n/*\r\n  Assumes unsorted vertices that reference the primitives.\r\n  This function sort the vertices and updates the primitives to reference the vertices.\r\n */\r\nLDRGeometry.prototype.sortAndBurnVertices = function (vertices, primitives) {\r\n    vertices.sort(vertexSorter);\r\n    let idx = this.vertices.length - 1;\r\n    let prev;\r\n    for (let i = 0; i < vertices.length; i++) {\r\n        let v = vertices[i];\r\n        if (!(prev && vertexEqual(prev, v))) {\r\n            this.vertices.push({ x: v.x, y: v.y, z: v.z, o: false });\r\n            idx++;\r\n        }\r\n\r\n        let p = primitives[v.c][v.idx];\r\n        p.t = v.t; // texmapPlacement stored on primitives - not on vertices.\r\n        if (v.p === 1) {\r\n            p.p1 = idx;\r\n        }\r\n        else if (v.p === 2) {\r\n            p.p2 = idx;\r\n        }\r\n        else if (v.p === 3) {\r\n            p.p3 = idx;\r\n        }\r\n        else {\r\n            p.p4 = idx;\r\n        }\r\n        prev = v;\r\n    }\r\n}\r\n\r\n/*\r\n  Build a geometry from {p1,p2,c} lines.\r\n */\r\nLDRGeometry.prototype.fromLines = function (ps) {\r\n    let vertices = [];\r\n    for (let i = 0; i < ps.length; i++) {\r\n        let p = ps[i], idx;\r\n        if (this.lines.hasOwnProperty(p.c)) {\r\n            let t = this.lines[p.c];\r\n            idx = t.length;\r\n            t.push({});\r\n        }\r\n        else {\r\n            this.lines[p.c] = [{}];\r\n            idx = 0;\r\n        }\r\n        vertices.push({ x: p.p1.x, y: p.p1.y, z: p.p1.z, c: p.c, idx: idx, p: 1 },\r\n            { x: p.p2.x, y: p.p2.y, z: p.p2.z, c: p.c, idx: idx, p: 2 });\r\n        this.boundingBox.expandByPoint(p.p1);\r\n        this.boundingBox.expandByPoint(p.p2);\r\n    }\r\n    this.sortAndBurnVertices(vertices, this.lines);\r\n}\r\n\r\nLDRGeometry.prototype.fromConditionalLines = function (ps) {\r\n    let vertices = [];\r\n    for (let i = 0; i < ps.length; i++) {\r\n        let p = ps[i], idx;\r\n        if (this.conditionalLines.hasOwnProperty(p.c)) {\r\n            let t = this.conditionalLines[p.c];\r\n            idx = t.length;\r\n            t.push({});\r\n        }\r\n        else {\r\n            this.conditionalLines[p.c] = [{}];\r\n            idx = 0;\r\n        }\r\n        vertices.push({ x: p.p1.x, y: p.p1.y, z: p.p1.z, c: p.c, idx: idx, p: 1 },\r\n            { x: p.p2.x, y: p.p2.y, z: p.p2.z, c: p.c, idx: idx, p: 2 },\r\n            { x: p.p3.x, y: p.p3.y, z: p.p3.z, c: p.c, idx: idx, p: 3 },\r\n            { x: p.p4.x, y: p.p4.y, z: p.p4.z, c: p.c, idx: idx, p: 4 });\r\n        this.boundingBox.expandByPoint(p.p1);\r\n        this.boundingBox.expandByPoint(p.p2);\r\n    }\r\n    this.sortAndBurnVertices(vertices, this.conditionalLines);\r\n}\r\n\r\nLDRGeometry.prototype.fromTriangles = function (cull, ps) {\r\n    let vertices = [];\r\n    let triangles = cull ? this.triangles : this.triangles2;\r\n    let self = this;\r\n    ps.forEach(p => {\r\n        let idx;\r\n        if (triangles.hasOwnProperty(p.c)) {\r\n            let t = triangles[p.c];\r\n            idx = t.length;\r\n            t.push({});\r\n        }\r\n        else {\r\n            triangles[p.c] = [{}];\r\n            idx = 0;\r\n        }\r\n        vertices.push({ x: p.p1.x, y: p.p1.y, z: p.p1.z, c: p.c, idx: idx, p: 1, t: p.tmp },\r\n            { x: p.p2.x, y: p.p2.y, z: p.p2.z, c: p.c, idx: idx, p: 2, t: p.tmp },\r\n            { x: p.p3.x, y: p.p3.y, z: p.p3.z, c: p.c, idx: idx, p: 3, t: p.tmp });\r\n        self.boundingBox.expandByPoint(p.p1);\r\n        self.boundingBox.expandByPoint(p.p2);\r\n        self.boundingBox.expandByPoint(p.p3);\r\n    });\r\n    this.sortAndBurnVertices(vertices, triangles);\r\n}\r\n\r\nLDRGeometry.prototype.fromQuads = function (cull, ps) {\r\n    let vertices = [];\r\n    let quads = cull ? this.quads : this.quads2;\r\n    let self = this;\r\n    ps.forEach(p => {\r\n        let idx;\r\n        if (quads.hasOwnProperty(p.c)) {\r\n            let t = quads[p.c];\r\n            idx = t.length;\r\n            t.push({});\r\n        }\r\n        else {\r\n            quads[p.c] = [{}];\r\n            idx = 0;\r\n        }\r\n        vertices.push({ x: p.p1.x, y: p.p1.y, z: p.p1.z, c: p.c, idx: idx, p: 1, t: p.tmp },\r\n            { x: p.p2.x, y: p.p2.y, z: p.p2.z, c: p.c, idx: idx, p: 2, t: p.tmp },\r\n            { x: p.p3.x, y: p.p3.y, z: p.p3.z, c: p.c, idx: idx, p: 3, t: p.tmp },\r\n            { x: p.p4.x, y: p.p4.y, z: p.p4.z, c: p.c, idx: idx, p: 4, t: p.tmp });\r\n        self.boundingBox.expandByPoint(p.p1);\r\n        self.boundingBox.expandByPoint(p.p2);\r\n        self.boundingBox.expandByPoint(p.p3);\r\n        self.boundingBox.expandByPoint(p.p4);\r\n    });\r\n    this.sortAndBurnVertices(vertices, quads);\r\n}\r\n\r\n/*\r\n  Consolidate the primitives and sub-parts of the step.\r\n*/\r\nLDRGeometry.prototype.fromStep = function (loader, step) {\r\n    let geometries = [];\r\n    if (step.hasPrimitives) {\r\n        let g = new LDRGeometry();\r\n        g.fromPrimitives(step.lines, step.conditionalLines, step.triangles, step.quads);\r\n        geometries.push(g);\r\n    }\r\n\r\n    function handleSubModel(subModel) {\r\n        let g = new LDRGeometry();\r\n        g.fromPartDescription(loader, subModel);\r\n        geometries.push(g);\r\n    }\r\n    step.subModels.forEach(handleSubModel);\r\n\r\n    this.replaceWith(mergeGeometries(geometries));\r\n}\r\n\r\nLDRGeometry.prototype.fromPartType = function (loader, pt) {\r\n    if (pt.steps.length === 1) {\r\n        this.fromStep(loader, pt.steps[0]);\r\n    }\r\n    else {\r\n        console.warn('Expected 1 step. Skipping geometry for ' + pt.ID);\r\n    }\r\n}\r\n\r\nLDRGeometry.prototype.fromPartDescription = function (loader, pd) {\r\n    let pt = loader.getPartType(pd.ID);\r\n    if (!pt) {\r\n        throw \"Part not loaded: \" + pd.ID;\r\n    }\r\n    pt.ensureGeometry(loader);\r\n\r\n    this.replaceWithDeep(pt.geometry);\r\n\r\n    let m3e = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Matrix3.getElements(pd.r);\r\n    let m4 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Matrix4.create(m3e[0], m3e[3], m3e[6], pd.p.x,\r\n        m3e[1], m3e[4], m3e[7], pd.p.y,\r\n        m3e[2], m3e[5], m3e[8], pd.p.z,\r\n        0, 0, 0, 1\r\n    );\r\n    this.boundingBox = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.applyMatrix4(m4, this.boundingBox);\r\n\r\n    // let invert = pd.invertCCW !== (adapter.getMatrix3Determinant(pd.r) < 0);\r\n\r\n    // Function to update color (notice that input and output are strings):\r\n    let replaceColor;\r\n    if (pd.c === 16) {\r\n        replaceColor = x => '' + x; // Do nothing.\r\n    }\r\n    else if (pd.c === 24) {\r\n        replaceColor = x => x === '16' ? '24' : '' + x;\r\n    }\r\n    else if (pd.c < 0) { // Edge color\r\n        let pos = '' + pd.c;\r\n        replaceColor = function (x) {\r\n            if (x === '16' || x === '24') {\r\n                return pos;\r\n            }\r\n            else {\r\n                return '' + x;\r\n            }\r\n        };\r\n    }\r\n    else { // Standard color\r\n        let pos = '' + pd.c;\r\n        let neg = '' + (-pd.c - 1);\r\n        replaceColor = function (x) {\r\n            if (x === '16') {\r\n                return pos;\r\n            }\r\n            else if (x === '24') {\r\n                return neg;\r\n            }\r\n            else {\r\n                return '' + x;\r\n            }\r\n        };\r\n    }\r\n\r\n    // TODO: Optimize rotation matrices for I-matrix (1,0,0,0,1,0,0,0,1), \\-matrices, etc.\r\n\r\n    // Update and re-sort the vertices:\r\n    // First decorate with initial index and update position:\r\n    let p = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.create(0, 0, 0);\r\n    let lp = pd.logoPosition;\r\n    for (let i = 0; i < this.vertices.length; i++) {\r\n        let v = this.vertices[i];\r\n        v.oldIndex = i;\r\n\r\n        p = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.set(v.x, v.y, v.z, p);\r\n        p = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.applyMatrix3(pd.r, p);\r\n        p = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Vector3.add(pd.p, p);\r\n\r\n        v.x = p.x;\r\n        v.y = p.y;\r\n        v.z = p.z;\r\n        v.o = v.o || (lp && lp.x === v.x && lp.y === v.y && lp.z === v.z);\r\n    }\r\n    let newIndices = [];\r\n    this.vertices.sort(vertexSorter);\r\n    for (let i = 0; i < this.vertices.length; i++) {\r\n        let v = this.vertices[i];\r\n        newIndices[v.oldIndex] = i;\r\n    }\r\n    // Clean up vertices:\r\n    this.vertices.forEach(v => delete v.oldIndex);\r\n\r\n    // Update the indices and colors on the primitives:\r\n    function t(withColors, transform) {\r\n        let ret = {};\r\n        for (let c in withColors) {\r\n            if (!withColors.hasOwnProperty(c)) {\r\n                continue;\r\n            }\r\n            let primitives = withColors[c].map(transform);\r\n            let toColor = replaceColor(c);\r\n            if (ret.hasOwnProperty(toColor)) {\r\n                ret[toColor].push(...primitives);\r\n            }\r\n            else {\r\n                ret[toColor] = primitives;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    this.lines = t(this.lines, p => { return { p1: newIndices[p.p1], p2: newIndices[p.p2] }; });\r\n    this.conditionalLines = t(this.conditionalLines, p => { return { p1: newIndices[p.p1], p2: newIndices[p.p2], p3: newIndices[p.p3], p4: newIndices[p.p4] }; });\r\n    // if (invert) {\r\n    //     this.triangles = t(this.triangles, p => { return { p1: newIndices[p.p3], p2: newIndices[p.p2], p3: newIndices[p.p1] }; });\r\n    //     this.quads = t(this.quads, p => { return { p1: newIndices[p.p4], p2: newIndices[p.p3], p3: newIndices[p.p2], p4: newIndices[p.p1] }; });\r\n    // }\r\n    // else {\r\n    this.triangles = t(this.triangles, p => { return { p1: newIndices[p.p1], p2: newIndices[p.p2], p3: newIndices[p.p3] }; });\r\n    this.quads = t(this.quads, p => { return { p1: newIndices[p.p1], p2: newIndices[p.p2], p3: newIndices[p.p3], p4: newIndices[p.p4] }; });\r\n    // }\r\n    this.triangles2 = t(this.triangles2, p => { return { p1: newIndices[p.p3], p2: newIndices[p.p2], p3: newIndices[p.p1] }; });\r\n    this.quads2 = t(this.quads2, p => { return { p1: newIndices[p.p4], p2: newIndices[p.p3], p3: newIndices[p.p2], p4: newIndices[p.p1] }; });\r\n\r\n    // No culling in PD: Move all culled triangles and quads to non-culled:\r\n    if (!pd.cull) {\r\n        function mv(from, to) {\r\n            for (let c in from) {\r\n                if (!from.hasOwnProperty(c)) {\r\n                    continue;\r\n                }\r\n                if (!to.hasOwnProperty(c)) {\r\n                    to[c] = [];\r\n                }\r\n                to[c].push(...from[c]);\r\n            }\r\n        }\r\n        mv(this.triangles, this.triangles2);\r\n        this.triangles = [];\r\n        mv(this.quads, this.quads2);\r\n        this.quads = [];\r\n    }\r\n\r\n    // // Overwrite texmap placement on primitives:\r\n    // if (pd.texmapPlacement) {\r\n    //     function copyDown(ps) {\r\n    //         for (let c in ps) {\r\n    //             if (ps.hasOwnProperty(c)) {\r\n    //                 ps[c].forEach(t => t.t = pd.texmapPlacement);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     copyDown(this.triangles);\r\n    //     copyDown(this.triangle2);\r\n    //     copyDown(this.quads);\r\n    //     copyDown(this.quads2);\r\n    // }\r\n}\r\n\r\nLDRGeometry.prototype.mapIndices = function (map) {\r\n    let map2 = function (p, map) {\r\n        p.p1 = map[p.p1];\r\n        p.p2 = map[p.p2];\r\n    }\r\n    let map3 = function (p, map) {\r\n        p.p1 = map[p.p1];\r\n        p.p2 = map[p.p2];\r\n        p.p3 = map[p.p3];\r\n    }\r\n    let map4 = function (p, map) {\r\n        p.p1 = map[p.p1];\r\n        p.p2 = map[p.p2];\r\n        p.p3 = map[p.p3];\r\n        p.p4 = map[p.p4];\r\n    }\r\n\r\n    for (let c in this.lines) {\r\n        if (this.lines.hasOwnProperty(c)) {\r\n            this.lines[c].forEach(x => map2(x, map));\r\n        }\r\n    }\r\n    for (let c in this.conditionalLines) {\r\n        if (this.conditionalLines.hasOwnProperty(c)) {\r\n            this.conditionalLines[c].forEach(x => map4(x, map));\r\n        }\r\n    }\r\n    for (let c in this.triangles) {\r\n        if (this.triangles.hasOwnProperty(c)) {\r\n            this.triangles[c].forEach(x => map3(x, map));\r\n        }\r\n    }\r\n    for (let c in this.triangles2) {\r\n        if (this.triangles2.hasOwnProperty(c)) {\r\n            this.triangles2[c].forEach(x => map3(x, map));\r\n        }\r\n    }\r\n    for (let c in this.quads) {\r\n        if (this.quads.hasOwnProperty(c)) {\r\n            this.quads[c].forEach(x => map4(x, map));\r\n        }\r\n    }\r\n    for (let c in this.quads2) {\r\n        if (this.quads2.hasOwnProperty(c)) {\r\n            this.quads2[c].forEach(x => map4(x, map));\r\n        }\r\n    }\r\n}\r\n\r\nLDRGeometry.prototype.merge = function (other) {\r\n    // Merge bounding box:\r\n    this.boundingBox = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.setMin(other.boundingBox.min, this.boundingBox);\r\n    this.boundingBox = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.setMax(other.boundingBox.max, this.boundingBox);\r\n\r\n    // Merge vertices:\r\n    let mergedVertices = []; // Assume both vertex streams are sorted, so duplicates are removed.\r\n    let indexMapThis = []; // original index -> merged vertex index.\r\n    let indexMapOther = []; // Same for other.\r\n    let idxThis = 0, idxOther = 0;\r\n\r\n    // Perform merging:\r\n    while (idxThis < this.vertices.length && idxOther < other.vertices.length) {\r\n        let pThis = this.vertices[idxThis];\r\n        let pOther = other.vertices[idxOther];\r\n        if (vertexEqual(pThis, pOther)) {\r\n            indexMapThis.push(mergedVertices.length);\r\n            indexMapOther.push(mergedVertices.length);\r\n            pThis.o = pThis.o || pOther.o;\r\n            mergedVertices.push(pThis);\r\n            ++idxThis;\r\n            ++idxOther;\r\n        }\r\n        else if (vertexLessThan(pThis, pOther)) {\r\n            indexMapThis.push(mergedVertices.length);\r\n            mergedVertices.push(pThis);\r\n            ++idxThis;\r\n        }\r\n        else {\r\n            indexMapOther.push(mergedVertices.length);\r\n            mergedVertices.push(pOther);\r\n            ++idxOther;\r\n        }\r\n    }\r\n    while (idxThis < this.vertices.length) {\r\n        let pThis = this.vertices[idxThis];\r\n        indexMapThis.push(mergedVertices.length);\r\n        mergedVertices.push(pThis);\r\n        ++idxThis;\r\n    }\r\n    while (idxOther < other.vertices.length) {\r\n        let pOther = other.vertices[idxOther];\r\n        indexMapOther.push(mergedVertices.length);\r\n        mergedVertices.push(pOther);\r\n        ++idxOther;\r\n    }\r\n\r\n    // Merge the lines, conditional lines, triangles and quads:\r\n    this.vertices = mergedVertices;\r\n    this.mapIndices(indexMapThis);\r\n    other.mapIndices(indexMapOther);\r\n\r\n    function mergePrimitives(thisPrim, otherPrim) {\r\n        for (let c in otherPrim) {\r\n            if (!otherPrim.hasOwnProperty(c)) {\r\n                continue;\r\n            }\r\n            if (thisPrim.hasOwnProperty(c)) {\r\n                thisPrim[c].push(...otherPrim[c]);\r\n            }\r\n            else {\r\n                thisPrim[c] = otherPrim[c];\r\n            }\r\n        }\r\n    }\r\n\r\n    mergePrimitives(this.lines, other.lines);\r\n    mergePrimitives(this.conditionalLines, other.conditionalLines);\r\n    mergePrimitives(this.triangles, other.triangles);\r\n    mergePrimitives(this.triangles2, other.triangles2);\r\n    mergePrimitives(this.quads, other.quads);\r\n    mergePrimitives(this.quads2, other.quads2);\r\n}\r\n\n\n//# sourceURL=webpack://ldr/./src/LDRGeometry.js?");

/***/ }),

/***/ "./src/LDRLoader.js":
/*!**************************!*\
  !*** ./src/LDRLoader.js ***!
  \**************************/
/*! exports provided: LDRLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRLoader\", function() { return LDRLoader; });\n/* harmony import */ var _lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/most.min.js */ \"./src/lib/most.min.js\");\n/* harmony import */ var _lib_most_min_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n/* harmony import */ var _LDRPartType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LDRPartType */ \"./src/LDRPartType.js\");\n/* harmony import */ var _LDRPartDescription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LDRPartDescription */ \"./src/LDRPartDescription.js\");\n/* harmony import */ var _LDRStep__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LDRStep */ \"./src/LDRStep.js\");\n/* harmony import */ var _LDRGenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./LDRGenerator */ \"./src/LDRGenerator.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let fromPromise = most.fromPromise;\r\n\r\n// let from = most.from;\r\n\r\n// let empty = most.empty;\r\n\r\n// let just = most.just;\r\n\r\n// let mergeArray = most.mergeArray;\r\n\r\n\r\n// let LDRLoader = function (onLoad, storage, options) {\r\nlet LDRLoader = function (options) {\r\n    let self = this;\r\n\r\n    this.partTypes = {}; // id => true or part. id is typically something like \"parts/3001.dat\", and \"model.mpd\".\r\n    // this.texmaps = {}; // fileName => true or Texture. fileName is typically something like wall_deco123.png\r\n    // this.texmapListeners = {}; // fileName => list of functions to be called.\r\n    // this.texmapDataurls = []; // [id,mimetype,content] for sorting inline texmaps.\r\n    // this.unloadedFiles = 0;\r\n\r\n    // this.onLoad = function () {\r\n    //     let unloaded = [];\r\n    //     for (let id in self.partTypes) {\r\n    //         if (self.partTypes.hasOwnProperty(id)) {\r\n    //             let partType = self.partTypes[id];\r\n    //             if (partType === true) {\r\n    //                 unloaded.push(id);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     unloaded.forEach(id => delete self.partTypes[id]);\r\n\r\n    //     onLoad();\r\n    // };\r\n    // function backupRetrievePartsFromStorage(loader, toBeFetched, onDone) {\r\n    //     if (!LDR.Generator) {\r\n    //         onDone(toBeFetched); // Can't do anything, so just pass on the list of parts to be fetched.\r\n    //         return;\r\n    //     }\r\n    //     // Try to fetch those that can be generated:\r\n    //     let stillToBeFetched = [];\r\n    //     toBeFetched.forEach(id => {\r\n    //         let pt = LDR.Generator.make(id)\r\n    //         if (pt) {\r\n    //             loader.setPartType(pt);\r\n    //         }\r\n    //         else {\r\n    //             stillToBeFetched.push(id);\r\n    //         }\r\n    //     });\r\n    //     onDone(stillToBeFetched);\r\n    // }\r\n    // this.storage = storage || { retrievePartsFromStorage: backupRetrievePartsFromStorage };\r\n    this.options = options || {};\r\n    this.onProgress = this.options.onProgress || function () { };\r\n    this.onWarning = this.options.onWarning || console.dir;\r\n    this.onError = this.options.onError || console.dir;\r\n    // this.loader = new FileLoader(this.options.manager || DefaultLoadingManager);\r\n    // this.physicalRenderingAge = this.options.physicalRenderingAge || 0;\r\n    this.mainModel;\r\n\r\n    this.buildAllPossibleUrls = this.options.buildAllPossibleUrls || function (id) {\r\n        let lowerID = id.toLowerCase();\r\n        return [\r\n            \"ldraw_parts/p/\" + lowerID,\r\n            \"ldraw_parts/parts/\" + lowerID,\r\n            \"ldraw_unofficial/p/\" + lowerID,\r\n            \"ldraw_unofficial/parts/\" + lowerID,\r\n        ];\r\n    };\r\n\r\n    // this.idToTextureUrl = this.options.idToTextureUrl || function (id) {\r\n    //     return \"textures/\" + id.toLowerCase();\r\n    // };\r\n\r\n    // this.cleanUpPrimitivesAndSubParts = this.options.cleanUpPrimitivesAndSubParts || false;\r\n}\r\n\r\n\r\n\r\nLDRLoader.prototype.setPartType = function (pt) {\r\n    this.partTypes[pt.ID] = pt;\r\n    // if (this.options.buildAssemblies) {\r\n    //     if (!this.assemblyManager) {\r\n    //         this.assemblyManager = new LDR.AssemblyManager(this);\r\n    //     }\r\n    //     this.assemblyManager.handlePartType(pt);\r\n    // }\r\n}\r\n\r\nLDRLoader.prototype.parse = function (data, defaultID) {\r\n    //console.log('Parsing', defaultID);\r\n    // let parseStartTime = new Date();\r\n    let self = this;\r\n\r\n    // // BFC Parameters:\r\n    // let CCW = true; // Assume CCW as default\r\n    // let localCull = true;\r\n    // let invertNext = false; // Don't assume that first line needs inverted.\r\n\r\n    // Start parsing:\r\n    let part = new _LDRPartType__WEBPACK_IMPORTED_MODULE_2__[\"LDRPartType\"]();\r\n    let step = new _LDRStep__WEBPACK_IMPORTED_MODULE_4__[\"LDRStep\"]();\r\n    let loadedParts = [];\r\n    // function closeStep(keepRotation) {\r\n    //     part.addStep(step);\r\n    //     let rot = step.rotation;\r\n    //     step = new LDRStep();\r\n    //     if (keepRotation && rot !== null) {\r\n    //         step.rotation = rot.clone();\r\n    //     }\r\n    // }\r\n    function closeStep(keepRotation) {\r\n        part.addStep(step);\r\n        // let rot = step.rotation;\r\n        step = new _LDRStep__WEBPACK_IMPORTED_MODULE_4__[\"LDRStep\"]();\r\n        // if (keepRotation && rot !== null) {\r\n        //     step.rotation = rot.clone();\r\n        // }\r\n    }\r\n\r\n    // State information:\r\n    let modelDescription;\r\n    let inHeader = true;\r\n    let hasFILE = false;\r\n    // let skipPart = false;\r\n\r\n    // // TEXMAP support:\r\n    // let texmapPlacement = null;\r\n    // let inTexmapFallback = false;\r\n\r\n    let dataLines = data.split(/(\\r\\n)|\\n/);\r\n    for (let i = 0; i < dataLines.length; i++) {\r\n        let line = dataLines[i];\r\n        if (!line) {\r\n            continue; // Empty line, or 'undefined' due to '\\r\\n' split.\r\n        }\r\n\r\n        let parts = line.split(' ').filter(x => x !== ''); // Remove empty strings.\r\n        if (parts.length <= 1) {\r\n            continue; // Empty/ empty comment line\r\n        }\r\n        let lineType = parseInt(parts[0]);\r\n        // if (lineType === 0 && parts.length > 2 && texmapPlacement && parts[1] === '!:') {\r\n        //     parts = parts.slice(2); // Texmap content.\r\n        //     lineType = parseInt(parts[0]);\r\n        // }\r\n\r\n        let colorID;\r\n        if (lineType !== 0) {\r\n            colorID = parts[1];\r\n\r\n            // if (colorID.length === 9 && colorID.substring(0, 3) === '0x2') {\r\n            //     // Direct color: https://www.ldraw.org/article/218.html\r\n            //     let hexValue = parseInt(colorID.substring(3), 16);\r\n            //     LDRColors[hexValue] = { name: 'Direct color 0x2' + colorID, value: hexValue, edge: hexValue, direct: colorID };\r\n            //     colorID = hexValue;\r\n            // }\r\n            // else if (LDRColors[colorID] === undefined) {\r\n            //     // This color might be on the form \"0x2995220\", such as seen in 3626bps5.dat:\r\n\r\n            //     this.onWarning({ message: 'Unknown color \"' + colorID + '\". Black (0) will be shown instead.', line: i, subModel: part.ID });\r\n            //     colorID = 0;\r\n            // }\r\n            // else {\r\n            colorID = parseInt(colorID);\r\n            // }\r\n        }\r\n\r\n        // // Expire texmapPlacement:\r\n        // if (texmapPlacement && texmapPlacement.used) {\r\n        //     texmapPlacement = null;\r\n        // }\r\n\r\n        //console.log('Parsing line', i, 'of type', lineType, 'color', colorID, ':', line); // Useful if you encounter parse errors.\r\n\r\n        let l3 = parts.length >= 3;\r\n        let is = type => l3 && type === parts[1];\r\n\r\n        // Set the model description\r\n        if (!part.modelDescription && modelDescription) {\r\n            part.modelDescription = modelDescription;\r\n            if (modelDescription.startsWith(\"~Unknown part \")) { // TODO: This piece of code is specific to Brickhub.org and should be generalised.\r\n                self.onError({ message: 'Unknown part \"' + part.ID + '\". Please <a href=\"../upload.php\">upload</a> this part for it to be shown correctly in this model. If you do not have it, perhaps you can find it <a href=\"https://www.ldraw.org/cgi-bin/ptscan.cgi?q=' + part.ID + '\">here on LDraw.org</a>. For now it will be shown as a cube. <a href=\"#\" onclick=\"bump();\">Click here</a> once the part has been uploaded to load it into the model.', line: i, subModel: part.ID });\r\n            }\r\n            modelDescription = null; // Ready for next part.\r\n        }\r\n\r\n        let p1, p2, p3, p4; // Used in switch.\r\n        switch (lineType) {\r\n            case 0:\r\n                // let saveThisCommentLine = true;\r\n\r\n                function handleFileLine(originalFileName) {\r\n                    let fileName = originalFileName.toLowerCase().replace('\\\\', '/'); // Normalize the name by bringing to lower case and replacing backslashes:\r\n                    // localCull = true;\r\n                    // saveThisCommentLine = false;\r\n                    let isEmpty = part.steps.length === 0 && step.isEmpty();\r\n\r\n                    if (isEmpty && !self.mainModel) { // First model\r\n                        self.mainModel = part.ID = fileName;\r\n                    }\r\n                    else if (isEmpty && self.mainModel && self.mainModel === part.ID) {\r\n                        console.warn(\"Special case: Main model ID change from \" + part.ID + \" to \" + fileName);\r\n                        self.mainModel = part.ID = fileName;\r\n                    }\r\n                    else { // Close model and start new as no FILE directive has been encountered:\r\n                        closeStep(false);\r\n\r\n                        if (!part.ID) { // No ID in main model: \r\n                            console.warn(originalFileName, 'No ID in main model - setting default ID', defaultID);\r\n                            console.dir(part); console.dir(step);\r\n                            part.ID = defaultID;\r\n                            if (!self.mainModel) {\r\n                                self.mainModel = defaultID;\r\n                            }\r\n                        }\r\n                        // if (!skipPart) {\r\n                        self.setPartType(part);\r\n                        loadedParts.push(part.ID);\r\n                        // }\r\n                        // skipPart = false;\r\n                        self.onProgress(part.ID);\r\n\r\n                        part = new _LDRPartType__WEBPACK_IMPORTED_MODULE_2__[\"LDRPartType\"]();\r\n                        inHeader = true;\r\n                        part.ID = fileName;\r\n                    }\r\n                    part.name = originalFileName;\r\n                    modelDescription = null;\r\n                }\r\n\r\n                if (is(\"FILE\")) {\r\n                    hasFILE = true;\r\n                    handleFileLine(parts.slice(2).join(\" \"));\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                else if (!hasFILE && is(\"file\")) { // Special case where some very old files use '0 file' instead of the proper '0 FILE':\r\n                    handleFileLine(parts.slice(2).join(\" \"));\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                else if (is(\"Name:\")) {\r\n                    part.name = parts.slice(2).join(\" \");\r\n                    if (part.ID === part.name) { // Consistent 'FILE' and 'Name:' lines.\r\n                        part.consistentFileAndName = true;\r\n                    }\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                else if (is(\"Author:\")) {\r\n                    part.author = parts.slice(2).join(\" \");\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                else if (is(\"!LICENSE\")) {\r\n                    part.license = parts.slice(2).join(\" \");\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                else if (is(\"!LDRAW_ORG\")) {\r\n                    part.ldraw_org = parts.slice(2).join(\" \");\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                else if (is(\"!CMDLINE\")) {\r\n                    part.preferredColor = parseInt(parts[2].substring(2));\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                // else if (parts[1] === \"BFC\") {\r\n                //     // BFC documentation: http://www.ldraw.org/article/415\r\n                //     let option = parts[2];\r\n                //     switch (option) {\r\n                //         case \"CERTIFY\":\r\n                //             part.certifiedBFC = true;\r\n                //             part.CCW = CCW = true;\r\n                //             saveThisCommentLine = false;\r\n                //             break;\r\n                //         case \"NOCERTIFY\":\r\n                //             part.certifiedBFC = false;\r\n                //             part.CCW = CCW = true; // Doens't matter since there is no culling.\r\n                //             saveThisCommentLine = false;\r\n                //             break;\r\n                //         case \"INVERTNEXT\":\r\n                //             invertNext = true;\r\n                //             break;\r\n                //         case \"CLIP\":\r\n                //             localCull = true;\r\n                //             break;\r\n                //         case \"NOCLIP\":\r\n                //             localCull = false;\r\n                //             break;\r\n                //     }\r\n\r\n                //     // Handle CW/CCW:\r\n                //     if (parts[parts.length - 1] === \"CCW\") {\r\n                //         part.CCW = CCW = true;\r\n                //     }\r\n                //     else if (parts[parts.length - 1] === \"CW\") {\r\n                //         part.CCW = CCW = false;\r\n                //     }\r\n                // }\r\n                else if (parts[1] === \"STEP\") {\r\n                    closeStep(true);\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                // else if (parts[1] === \"ROTSTEP\") {\r\n                //     if (parts.length >= 5) {\r\n                //         step.rotation = new LDRStepRotation(parts[2], parts[3], parts[4], (parts.length === 5 ? \"REL\" : parts[5]));\r\n                //     }\r\n                //     else if (parts.length === 3 && parts[2] === \"END\") {\r\n                //         step.rotation = null;\r\n                //     }\r\n                //     closeStep(true);\r\n                //     saveThisCommentLine = false;\r\n                // }\r\n                else if (parts[1] === \"!BRICKHUB_INLINED\") {\r\n                    part.inlined = parts.length === 3 ? parts[2] : 'UNKNOWN';\r\n                    // saveThisCommentLine = false;\r\n                }\r\n                // else if (parts[1] === \"!TEXMAP\") {\r\n                //     if (texmapPlacement) { // Expect \"0 !TEXMAP FALLBACK\" or \"0 !TEXMAP END\"\r\n                //         if (!(parts.length === 3 && (parts[2] === 'FALLBACK' || parts[2] === 'END'))) {\r\n                //             self.onWarning({ message: 'Unexpected !TEXMAP line. Expected FALLBACK or END line. Found: \"' + line + '\".', line: i, subModel: part.ID });\r\n                //             inTexmapFallback = false;\r\n                //             texmapPlacement = null;\r\n                //         }\r\n                //         else if (parts[2] === 'FALLBACK') {\r\n                //             inTexmapFallback = true;\r\n                //         }\r\n                //         else { // !TEXMAP END\r\n                //             inTexmapFallback = false;\r\n                //             texmapPlacement = null;\r\n                //         }\r\n                //     }\r\n                //     else { // Expect 0 !TEXMAP START | NEXT...\r\n                //         texmapPlacement = new LDR.TexmapPlacement();\r\n                //         texmapPlacement.setFromParts(parts);\r\n                //         if (texmapPlacement.error) {\r\n                //             self.onWarning({ message: texmapPlacement.error + ': \"' + line + '\"', line: i, subModel: part.ID });\r\n                //             texmapPlacement = null;\r\n                //         }\r\n                //     }\r\n                //     saveThisCommentLine = false;\r\n                // }\r\n                // else if (parts[1] === \"!DATA\" && parts.length === 3 && parts[2] === \"START\") { // Inline texmap : https://www.ldraw.org/article/47.html\r\n                //     skipPart = true;\r\n                //     // Take over parsing in order to read full encoded block:\r\n                //     let encodedContent = '';\r\n                //     // Parse encoded content:\r\n                //     for (; i < dataLines.length; i++) {\r\n                //         line = dataLines[i]; if (!line) continue;\r\n                //         parts = line.split(' ').filter(x => x !== ''); if (parts.length <= 1) continue; // Empty/ empty comment line\r\n                //         lineType = parseInt(parts[0]);\r\n                //         if (lineType !== 0) { self.onWarning({ message: 'Unexpected DATA line type ' + lineType + ' is ignored.', line: i, subModel: part.ID }); continue; }\r\n                //         if (parts.length === 3 && parts[1] === '!DATA' && parts[2] === 'END') break; // Done\r\n                //         if (!parts[1].startsWith('!:')) continue;\r\n\r\n                //         encodedContent += parts[1].substring(2);\r\n                //         if (parts.length > 2) encodedContent += parts.slice(2).join('');\r\n                //     }\r\n\r\n                //     let detectMimetype = id => id.endsWith('jpg') || id.endsWith('jpeg') ? 'jpeg' : 'png'; // Only png supported according to the spec.\r\n                //     let pid = part.ID;\r\n                //     let mimetype = detectMimetype(pid);\r\n                //     let dataurl = 'data:image/' + mimetype + ';base64,' + encodedContent;\r\n                //     self.texmapDataurls.push({ id: pid, mimetype: mimetype, content: encodedContent });\r\n\r\n                //     self.texmaps[pid] = true;\r\n                //     self.texmapListeners[pid] = [];\r\n                //     let image = new Image();\r\n                //     image.onload = function (e) {\r\n                //         let texture = new Texture(this);\r\n                //         texture.needsUpdate = true;\r\n                //         self.texmaps[pid] = texture;\r\n                //         self.texmapListeners[pid].forEach(l => l(texture));\r\n                //         self.onProgress(pid);\r\n                //     };\r\n                //     image.src = dataurl;\r\n\r\n                //     saveThisCommentLine = false;\r\n                // }\r\n                // else if (LDR.STUDIO && LDR.STUDIO.handleCommentLine(part, parts)) {\r\n                //     saveThisCommentLine = false;\r\n                // }\r\n                // else if (parts[1][0] === \"!\") {\r\n                //     if (is(\"!THEME\") ||\r\n                //         is(\"!HELP\") ||\r\n                //         is(\"!KEYWORDS\") ||\r\n                //         is(\"!HISTORY\") ||\r\n                //         is(\"!LPUB\") ||\r\n                //         is(\"!LDCAD\") ||\r\n                //         is(\"!LEOCAD\") ||\r\n                //         is(\"!CATEGORY\")) {\r\n                //         // Ignore known commands.\r\n                //     }\r\n                //     else {\r\n                //         invertNext = false;\r\n                //         self.onWarning({ message: 'Unknown LDraw command \"' + parts[1] + '\" is ignored.', line: i, subModel: part.ID });\r\n                //     }\r\n                // }\r\n                else {\r\n                    // invertNext = false;\r\n                    modelDescription = line.substring(2);\r\n                    if (inHeader) {\r\n                        // saveThisCommentLine = false; // modelDescription is expected to be the description line in the header, so do not save it.\r\n                    }\r\n                }\r\n\r\n\r\n                // if (saveThisCommentLine) {\r\n                //     let fileLine = new LDR.Line0(parts.slice(1).join(' '));\r\n                //     if (step.subModels.length > 0) {\r\n                //         step.subModels[step.subModels.length - 1].commentLines.push(fileLine);\r\n                //     }\r\n                //     else {\r\n                //         part.headerLines.push(fileLine);\r\n                //     }\r\n                // }\r\n                break;\r\n            case 1: // 1 <colour> x y z a b c d e f g h i <file>\r\n                for (let j = 2; j < 14; j++) {\r\n                    parts[j] = parseFloat(parts[j]);\r\n                }\r\n                let position = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parts[2], parts[3], parts[4]);\r\n                let rotation = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Matrix3.create(parts[5], parts[6], parts[7],\r\n                    parts[8], parts[9], parts[10],\r\n                    parts[11], parts[12], parts[13]);\r\n                let subModelID = parts.slice(14).join(\" \").toLowerCase().replace('\\\\', '/');\r\n                // let subModel = new LDRPartDescription(colorID, position, rotation, subModelID, part.certifiedBFC && localCull, invertNext, texmapPlacement);\r\n                let subModel = new _LDRPartDescription__WEBPACK_IMPORTED_MODULE_3__[\"LDRPartDescription\"](colorID, position, rotation, subModelID);\r\n\r\n                // (inTexmapFallback ? texmapPlacement.fallback : step).addSubModel(subModel);\r\n                step.addSubModel(subModel);\r\n\r\n                inHeader = false;\r\n                // invertNext = false;\r\n                break;\r\n            case 2: // Line \"2 <colour> x1 y1 z1 x2 y2 z2\"\r\n                p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[2]), parseFloat(parts[3]), parseFloat(parts[4]));\r\n                p2 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[5]), parseFloat(parts[6]), parseFloat(parts[7]));\r\n\r\n                // (inTexmapFallback ? texmapPlacement.fallback : step).addLine(colorID, p1, p2, texmapPlacement);\r\n                step.addLine(colorID, p1, p2);\r\n\r\n                inHeader = false;\r\n                // invertNext = false;\r\n                break;\r\n            case 3: // 3 <colour> x1 y1 z1 x2 y2 z2 x3 y3 z3 [u1 v1 u2 v2 u3 v3]\r\n                p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[2]), parseFloat(parts[3]), parseFloat(parts[4]));\r\n                p2 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[5]), parseFloat(parts[6]), parseFloat(parts[7]));\r\n                p3 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[8]), parseFloat(parts[9]), parseFloat(parts[10]));\r\n                // if (LDR.STUDIO && parts.length === 17) { // Parse texmap UV's\r\n                //     localCull = false; // Double-side the texmaps on the triangles.\r\n                //     texmapPlacement = LDR.STUDIO.handleTriangleLine(part, parts);\r\n                // }\r\n\r\n                // (inTexmapFallback ? texmapPlacement.fallback : step).addTriangle(colorID, p1, p2, p3, part.certifiedBFC && localCull, CCW === invertNext, texmapPlacement);\r\n                step.addTriangle(colorID, p1, p2, p3);\r\n\r\n                inHeader = false;\r\n                // invertNext = false;\r\n                break;\r\n            case 4: // 4 <colour> x1 y1 z1 x2 y2 z2 x3 y3 z3 x4 y4 z4\r\n                p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[2]), parseFloat(parts[3]), parseFloat(parts[4]));\r\n                p2 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[5]), parseFloat(parts[6]), parseFloat(parts[7]));\r\n                p3 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[8]), parseFloat(parts[9]), parseFloat(parts[10]));\r\n                p4 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[11]), parseFloat(parts[12]), parseFloat(parts[13]));\r\n                // if (!part.certifiedBFC || !localCull) {\r\n                //     step.cull = false; // Ensure no culling when step is handled.\r\n                // }\r\n\r\n                // (inTexmapFallback ? texmapPlacement.fallback : step).addQuad(colorID, p1, p2, p3, p4, part.certifiedBFC && localCull, CCW === invertNext, texmapPlacement);\r\n                step.addQuad(colorID, p1, p2, p3, p4);\r\n\r\n                inHeader = false;\r\n                // invertNext = false;\r\n                break;\r\n            case 5: // Conditional lines:\r\n                p1 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[2]), parseFloat(parts[3]), parseFloat(parts[4]));\r\n                p2 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[5]), parseFloat(parts[6]), parseFloat(parts[7]));\r\n                p3 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[8]), parseFloat(parts[9]), parseFloat(parts[10]));\r\n                p4 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(parseFloat(parts[11]), parseFloat(parts[12]), parseFloat(parts[13]));\r\n\r\n                // (inTexmapFallback ? texmapPlacement.fallback : step).addConditionalLine(colorID, p1, p2, p3, p4, texmapPlacement);\r\n                step.addConditionalLine(colorID, p1, p2, p3, p4);\r\n\r\n                inHeader = false;\r\n                // invertNext = false;\r\n                break;\r\n            default:\r\n                self.onWarning({ message: 'Unknown command \"' + parts[1] + '\" is ignored.', line: i, subModel: part.ID });\r\n                break;\r\n        }\r\n    }\r\n\r\n    part.addStep(step);\r\n    if (!part.ID) {\r\n        part.ID = defaultID; // No name given in file.\r\n        if (!this.mainModel) {\r\n            this.mainModel = part.ID;\r\n        }\r\n    }\r\n    // if (!skipPart) {\r\n    this.setPartType(part);\r\n    loadedParts.push(part.ID);\r\n    // }\r\n\r\n    loadedParts = loadedParts.map(id => self.partTypes[id]); // Map from ID to part type.\r\n\r\n    // if (LDR.STUDIO) {\r\n    //     loadedParts.forEach(part => LDR.STUDIO.handlePart(self, part));\r\n    // }\r\n\r\n    // return this.onPartsLoaded(loadedParts);\r\n    return this.onPartsLoaded(defaultID, loadedParts);\r\n\r\n    // // Save loaded parts into IndexedDB:\r\n    // if (this.storage.db) {\r\n    //     if (this.options.hasOwnProperty('key') && this.options.hasOwnProperty('timestamp')) {\r\n    //         self.storage.saveInstructionsToStorage(self, self.options.key, self.options.timestamp);\r\n    //     }\r\n    //     self.storage.savePartsToStorage(loadedParts, self);\r\n    //     // Do not call storage.db.close() as there might be other parts that should be saved.\r\n    // }\r\n\r\n    //console.log(loadedParts.length + ' LDraw file(s) read in ' + (new Date()-parseStartTime) + 'ms.');\r\n\r\n}\r\n\r\n\r\nLDRLoader.prototype.applyOnPartTypes = function (f) {\r\n    for (let id in this.partTypes) {\r\n        if (!this.partTypes.hasOwnProperty(id)) {\r\n            continue;\r\n        }\r\n        let pt = this.partTypes[id];\r\n        if (pt === true) {\r\n            continue;\r\n        }\r\n        f(pt);\r\n    }\r\n}\r\n\r\n\r\n\r\n// LDRLoader.prototype.onPartsLoaded = function (loadedParts) {\r\nLDRLoader.prototype.onPartsLoaded = function (id, loadedParts) {\r\n    let self = this;\r\n\r\n    if (!loadedParts) {\r\n        loadedParts = [];\r\n        this.applyOnPartTypes(pt => loadedParts.push(pt));\r\n    }\r\n\r\n    // Load the unknown parts:    \r\n    let unloadedPartsSet = {};\r\n    let unloadedPartsList = [];\r\n    function checkPart(id) {\r\n        if (!(self.partTypes.hasOwnProperty(id) || unloadedPartsSet.hasOwnProperty(id))) {\r\n            unloadedPartsSet[id] = true;\r\n            unloadedPartsList.push(id);\r\n        }\r\n    }\r\n    loadedParts.forEach(pt => pt.steps.forEach(s => s.subModels.forEach(sm => checkPart(sm.ID))));\r\n\r\n    // Set part info (part vs non-part):\r\n    loadedParts.forEach(pt => pt.isPart = pt.computeIsPart(self));\r\n\r\n    // Clean up parts and purge those that are empty:\r\n    loadedParts.forEach(pt => pt.cleanUp(self));\r\n    // loadedParts.forEach(pt => { if (pt.steps.length === 0) self.purgePart(pt.ID); });\r\n\r\n    // // Handle assemblies:\r\n    // if (this.options.buildAssemblies) {\r\n    //     if (!this.assemblyManager) {\r\n    //         this.assemblyManager = new LDR.AssemblyManager(this);\r\n    //     }\r\n    //     const AM = this.assemblyManager;\r\n\r\n    //     loadedParts.forEach(pt => AM.handlePartType(pt));\r\n\r\n    //     let handleAssemblies = pt => {\r\n    //         if (!pt.isPart) {\r\n    //             pt.steps.forEach(s => AM.handleStep(s).forEach(checkPart));\r\n    //         }\r\n    //     };\r\n    //     loadedParts.forEach(handleAssemblies);\r\n    // }\r\n\r\n    if (unloadedPartsList.length > 0) {\r\n        return self.loadMultiple(id, unloadedPartsList);\r\n    }\r\n    else {\r\n        return Object(_lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__[\"just\"])(id);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nLDRLoader.prototype.getPartType = function (id) {\r\n    if (!this.partTypes.hasOwnProperty(id)) {\r\n        let pt;\r\n        // if (LDR.Generator && (pt = LDR.Generator.make(id))) {\r\n        if (pt = Object(_LDRGenerator__WEBPACK_IMPORTED_MODULE_5__[\"make\"])(id)) {\r\n            return this.partTypes[id] = pt;\r\n        }\r\n        return null;\r\n    }\r\n    let pt = this.partTypes[id];\r\n    if (pt === true) {\r\n        return null;\r\n    }\r\n    return pt;\r\n}\r\n\r\n\r\n\r\n\r\nlet _loadMainModel = function (url, loader) {\r\n    return Object(_lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__[\"fromPromise\"])(\r\n        _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Network.fetch(url, \"text\")\r\n    )\r\n        .flatMap((text) => {\r\n            return loader.parse(text, \"mainModel\");\r\n        })\r\n};\r\n\r\n\r\nlet _loadSubModel = function (id, urlIndex, urls, loader) {\r\n    let tryLoadOtherUrl = function (event) {\r\n        if (urlIndex < urls.length) {\r\n            return _loadSubModel(id, urlIndex + 1, urls, loader);\r\n        }\r\n        else {\r\n            loader.onError({ message: event.currentTarget ? event.currentTarget.statusText : 'Error during loading', subModel: id });\r\n\r\n            return Object(_lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__[\"throwError\"])(event);\r\n        }\r\n    }\r\n\r\n    return Object(_lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__[\"fromPromise\"])(\r\n        _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Network.fetch(urls[urlIndex], \"text\")\r\n    )\r\n        .recoverWith(tryLoadOtherUrl)\r\n};\r\n\r\n\r\nlet _loadSubModelAndParse = function (id, urlIndex, urls, loader) {\r\n\r\n    return _loadSubModel(id, urlIndex, urls, loader)\r\n        .flatMap((text) => {\r\n            return loader.parse(text, id);\r\n        })\r\n};\r\n\r\n\r\n\r\n\r\nlet _loadMultiple = (id, toBeFetched, loader) => {\r\n    if (toBeFetched.length === 0) {\r\n        return Object(_lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__[\"just\"])(id);\r\n    }\r\n\r\n    return Object(_lib_most_min_js__WEBPACK_IMPORTED_MODULE_0__[\"mergeArray\"])(\r\n        toBeFetched.map(id => _loadSubModelAndParse(id, 0, loader.buildAllPossibleUrls(id), loader))\r\n    )\r\n};\r\n\r\n\r\nLDRLoader.prototype.loadMultiple = function (id, ids) {\r\n    let self = this;\r\n    // function onStorageFetchingDone(unloadedParts) {\r\n    //     unloadedParts.forEach(id => self.load(id));\r\n    //     self.unloadedFiles--;\r\n    //     self.reportProgress(ids[0]);\r\n    // }\r\n    // self.unloadedFiles++; // Prevent early exit.\r\n\r\n    // this.storage.retrievePartsFromStorage(this, ids, onStorageFetchingDone);\r\n\r\n    let toBeFetched = ids;\r\n\r\n\r\n    // Try to fetch those that can be generated:\r\n    let stillToBeFetched = [];\r\n    toBeFetched.forEach(id => {\r\n        let pt = Object(_LDRGenerator__WEBPACK_IMPORTED_MODULE_5__[\"make\"])(id)\r\n        if (pt) {\r\n            self.setPartType(pt);\r\n        }\r\n        else {\r\n            stillToBeFetched.push(id);\r\n        }\r\n    });\r\n\r\n    // onDone(stillToBeFetched);\r\n    // return from(\r\n    //     stillToBeFetched.map(this.load)\r\n    // );\r\n    // return stillToBeFetched.map(this.load)\r\n    // return stillToBeFetched.flatMap(id => this.load(id))\r\n    //     .mergeAll();\r\n\r\n    return _loadMultiple(id, stillToBeFetched, this);\r\n}\r\n\r\n\r\n\r\n/*\r\n * Load an ldr/mpd/dat file without checking storage first.\r\n * \r\n * id is the file name to load. \r\n * id is transformed using 'buildUrls' which can be parsed to the loader using the options parameter in the constructor.\r\n */\r\nLDRLoader.prototype.load = function (modelUrl) {\r\n    return _loadMainModel(modelUrl, this)\r\n};\r\n\r\n\r\nLDRLoader.prototype.getMainModel = function () {\r\n    if (!this.mainModel) {\r\n        throw 'No main model set for ldrLoader!';\r\n    }\r\n    if (!this.partTypes.hasOwnProperty(this.mainModel)) {\r\n        throw 'Inconsistent internal storage for ldrLoader: No main model!';\r\n    }\r\n    let pt = this.partTypes[this.mainModel];\r\n    if (pt === true) {\r\n        throw 'Main model not yet loaded!';\r\n    }\r\n    return pt;\r\n}\r\n\r\nLDRLoader.prototype.generate = function (colorID, mc, taskList) {\r\n    // this.loadTexmaps();\r\n\r\n    let mainModel = this.getMainModel();\r\n\r\n    // Place model in scene:\r\n    let origo = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(0.0, 0.0, 0.0);\r\n    let inv = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Matrix3.create(1, 0, 0, 0, -1, 0, 0, 0, -1);// Invert Y, and Z-axis for LDraw\r\n\r\n    // // Generate the meshes:\r\n    // if (this.cleanUpPrimitivesAndSubParts) {\r\n    //     mainModel.setReferencedFrom(this);\r\n    // }\r\n    // mainModel.generateThreePart(this, colorID, origo, inv, true, false, mc, null, taskList);\r\n    mainModel.generateThreePart(this, colorID, origo, inv, mc, null);\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRLoader.js?");

/***/ }),

/***/ "./src/LDRMeshCollector.js":
/*!*********************************!*\
  !*** ./src/LDRMeshCollector.js ***!
  \*********************************/
/*! exports provided: MeshCollectorIdx, LDRMeshCollector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MeshCollectorIdx\", function() { return MeshCollectorIdx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRMeshCollector\", function() { return LDRMeshCollector; });\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n/* harmony import */ var _LDRColorMaterials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LDRColorMaterials */ \"./src/LDRColorMaterials.js\");\n\r\n\r\n\r\n/*\r\n  MeshCollector holds references to meshes (and similar Three.js structures for lines).\r\n  A Mesh Collector handles updates of meshes. This includes;\r\n  - Changes in options (coloring of old parts, edge colors)\r\n  - visibility\r\n  - 'old': A part placed in 'earlier steps' can be colored 'old' to highlight new parts\r\n  - 'ghost': 'Ghosted' parts will be shown by their lines only (no faces).\r\n*/\r\nlet MeshCollectorIdx = 0;\r\nlet LDRMeshCollector = function (opaqueObject, sixteenObject, transObject, outliner) {\r\n    this.opaqueObject = opaqueObject;\r\n    this.sixteenObject = sixteenObject; // To be painted after anything opaque, as it might be trans.\r\n    this.transObject = transObject; // To be painted last.\r\n    this.outliner = outliner || false; // With outlined objects\r\n\r\n    this.lineMeshes = []; // {mesh,part,conditional}\r\n    this.triangleMeshes = []; // {mesh,part,parent}\r\n\r\n    this.old = false;\r\n    this.visible = true;\r\n    this.boundingBox;\r\n    this.isMeshCollector = true;\r\n    this.idx = MeshCollectorIdx++;\r\n}\r\n\r\nLDRMeshCollector.prototype.addLines = function (mesh, part, conditional) {\r\n    this.lineMeshes.push({ mesh: mesh, part: part, conditional: conditional });\r\n    this.opaqueObject.add(mesh);\r\n}\r\n\r\nLDRMeshCollector.prototype.addMesh = function (color, mesh, part) {\r\n    let parent;\r\n    if (color === 16) {\r\n        parent = this.sixteenObject;\r\n    }\r\n    else if (Object(_LDRColorMaterials__WEBPACK_IMPORTED_MODULE_1__[\"isTrans\"])(color)) {\r\n        parent = this.transObject;\r\n    }\r\n    else {\r\n        parent = this.opaqueObject;\r\n    }\r\n    this.triangleMeshes.push({ mesh: mesh, part: part, parent: parent });\r\n    parent.add(mesh);\r\n}\r\n\r\nLDRMeshCollector.prototype.removeAllMeshes = function () {\r\n    let self = this;\r\n    this.lineMeshes.forEach(obj => self.opaqueObject.remove(obj.mesh));\r\n    this.triangleMeshes.forEach(obj => obj.parent.remove(obj.mesh));\r\n}\r\n\r\n// /*\r\n//   Sets '.visible' on all meshes according to LDR.Options and \r\n//   visibility of this meshCollector.\r\n//  */\r\n// LDRMeshCollector.prototype.updateMeshVisibility = function () {\r\n//     let v = this.visible;\r\n//     let lineV = v && LDR.Options && LDR.Options.lineContrast !== 2;\r\n\r\n//     this.lineMeshes.forEach(obj => obj.mesh.visible = lineV);\r\n\r\n//     let old = this.old;\r\n//     this.triangleMeshes.forEach(obj => obj.mesh.visible = v && (old || !(LDR.Options && LDR.Options.showEditor && obj.part && obj.part.original && obj.part.original.ghost))); // Do not show faces for ghosted parts.\r\n// }\r\n\r\n\r\n\r\nLDRMeshCollector.prototype.expandBoundingBox = function (boundingBox, m) {\r\n    let b = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.create();\r\n    b = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.copy(boundingBox, b);\r\n    b = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.applyMatrix4(m, b);\r\n\r\n    if (!this.boundingBox) {\r\n        this.boundingBox = b;\r\n    }\r\n    else {\r\n        this.boundingBox = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.expandByPoint(_adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.getMin(b), this.boundingBox);\r\n        this.boundingBox = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.expandByPoint(_adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].BoundingBox3.getMax(b), this.boundingBox);\r\n    }\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRMeshCollector.js?");

/***/ }),

/***/ "./src/LDRPartDescription.js":
/*!***********************************!*\
  !*** ./src/LDRPartDescription.js ***!
  \***********************************/
/*! exports provided: LDRPartDescription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRPartDescription\", function() { return LDRPartDescription; });\n/*\r\n  Part description: a part (ID) placed (position, rotation) with a\r\n  given color (16/24 allowed) and invertCCW to allow for sub-parts in DAT-parts.\r\n*/\r\n// let LDRPartDescription = function (colorID, position, rotation, ID, cull, invertCCW, texmapPlacement) {\r\nlet LDRPartDescription = function (colorID, position, rotation, ID) {\r\n    this.c = colorID; // LDraw ID. Negative values indicate edge colors - see top description.\r\n    this.p = position; // Vector3\r\n    this.r = rotation; // Matrix3\r\n    this.ID = ID.toLowerCase(); // part.dat lowercase\r\n    // this.cull = cull;\r\n    // this.invertCCW = invertCCW;\r\n    // this.tmp = texmapPlacement;\r\n    // this.ghost;\r\n    // this.original; // If this PD is a colored clone of an original PD.\r\n    // this.commentLines = [];\r\n    // texmapPlacement && texmapPlacement.use();\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRPartDescription.js?");

/***/ }),

/***/ "./src/LDRPartType.js":
/*!****************************!*\
  !*** ./src/LDRPartType.js ***!
  \****************************/
/*! exports provided: LDRPartType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRPartType\", function() { return LDRPartType; });\n/* harmony import */ var _LDRGeometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LDRGeometry */ \"./src/LDRGeometry.js\");\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n/* harmony import */ var _LDRColorManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LDRColorManager */ \"./src/LDRColorManager.js\");\n/* harmony import */ var _LDRColorMaterials__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LDRColorMaterials */ \"./src/LDRColorMaterials.js\");\n\r\n\r\n\r\n\r\n\r\nlet LDRPartType = function () {\r\n    this.name; // The value for '0 FILE' and '0 Name:'.\r\n    this.ID = null; // this.name, but lower case and with backslashes replaced with forward slashes.\r\n    this.modelDescription;\r\n    this.author;\r\n    this.license;\r\n    this.steps = [];\r\n    this.headerLines = [];\r\n    // this.lastRotation = null;\r\n    // this.replacement;\r\n    this.inlined;\r\n    this.ldraw_org;\r\n    // this.geometry;\r\n    // this.cnt = -1;\r\n    this.cleanSteps = false;\r\n    // this.certifiedBFC;\r\n    // this.CCW;\r\n    this.consistentFileAndName;\r\n\r\n    this.preferredColor;\r\n\r\n    // // To support early cleanup:\r\n    // this.referencedFrom = {};\r\n    // this.references = 0;\r\n}\r\n\r\nLDRPartType.prototype.addStep = function (step) {\r\n    if (step.isEmpty() && this.steps.length === 0) {\r\n        return; // Totally illegal step.\r\n    }\r\n\r\n    // Update rotation in case of ADD;\r\n    // if (step.rotation && step.rotation.type === \"ADD\") {\r\n    //     if (!this.lastRotation) {\r\n    //         step.rotation.type = \"REL\";\r\n    //     }\r\n    //     else {\r\n    //         step.rotation = new LDRStepRotation(step.rotation.x + this.lastRotation.x,\r\n    //             step.rotation.y + this.lastRotation.y,\r\n    //             step.rotation.z + this.lastRotation.z,\r\n    //             this.lastRotation.type);\r\n    //     }\r\n    // }\r\n\r\n    // let sameRotation = LDRStepRotation.equals(step.rotation, this.lastRotation);\r\n    // if (step.isEmpty() && sameRotation) {\r\n    //     return; // No change.\r\n    // }\r\n    // if (this.steps.length > 0) {\r\n    //     let prevStep = this.steps[this.steps.length - 1];\r\n    //     if (prevStep.isEmpty() && sameRotation) {\r\n    //         // Special case: Merge into previous step:\r\n    //         this.steps[this.steps.length - 1] = step;\r\n    //         return;\r\n    //     }\r\n    // }\r\n    this.steps.push(step);\r\n    // this.lastRotation = step.rotation;\r\n}\r\n\r\nLDRPartType.prototype.isPrimitive = function () {\r\n    if (!this.ldraw_ord) {\r\n        return false;\r\n    }\r\n    let lo = this.ldraw_org.split(' ')[0]; // First token.\r\n    return lo === 'Primitive' || lo === 'Subpart' || lo === '8_Primitive' || lo === '48_Primitive';\r\n}\r\n\r\nLDRPartType.prototype.computeIsPart = function (loader) {\r\n    // Simple checks:\r\n    if (this.steps.length !== 1) {\r\n        return false; // No steps in parts.\r\n    }\r\n    let s = this.steps[0];\r\n    if (s.hasPrimitives) {\r\n        return true; // Contains line, triangle or quad primitives.\r\n    }\r\n\r\n    // LDRAW_ORG checks:\r\n    if (this.isOfficialLDraw()) {\r\n        return true;\r\n    }\r\n\r\n    // Check sub-models. If any is a primitive or subpart, then this is a part:\r\n    for (let i = 0; i < s.subModels.length; i++) {\r\n        let t = loader.getPartType(s.subModels[i].ID);\r\n        if (t) {\r\n            if (t.isPrimitive()) {\r\n                return true;\r\n            }\r\n            if (t.steps.length !== 1) {\r\n                return false; // Sub model is not a part.\r\n            }\r\n        }\r\n    }\r\n\r\n    return this.ID.endsWith('.dat'); // Unsafe check as some old models used 'dat' for non-parts, but what can we do?\r\n}\r\n\r\n\r\n// Official LDraw part types: https://www.ldraw.org/article/398.html\r\nLDRPartType.prototype.isOfficialLDraw = function () {\r\n    if (!this.ldraw_org) {\r\n        return false;\r\n    }\r\n    let lo = this.ldraw_org.split(' ')[0]; // First token.\r\n    return lo === 'Part' || lo === 'Primitive' || lo === 'Subpart' ||\r\n        lo === '8_Primitive' || lo === '48_Primitive' || lo === 'Shortcut';\r\n}\r\n\r\n\r\n\r\n/*\r\n  Clean up all steps.\r\n  This can cause additional steps (such as when a step contains both parts and sub models.\r\n */\r\nLDRPartType.prototype.cleanUp = function (loader) {\r\n    if (this.cleanSteps) {\r\n        return; // Already done.\r\n    }\r\n    this.cleanSteps = true;\r\n\r\n    // if (this.isReplacedPart()) {\r\n    //     this.replacement = this.steps[0].subModels[0].ID;\r\n    //     //loader.onWarning({message:'The part \"' + this.ID + '\" has been replaced by \"' + this.replacement + '\".', line:0, subModel:this.ID});\r\n    // }\r\n    // else {\r\n    let newSteps = [];\r\n    this.steps.forEach(step => step.cleanUp(loader, newSteps));\r\n    this.steps = newSteps;\r\n    // }\r\n}\r\n\r\n\r\nLDRPartType.prototype.ensureGeometry = function (loader) {\r\n    if (this.geometry) {\r\n        return; // Already prepared.\r\n    }\r\n    this.geometry = new _LDRGeometry__WEBPACK_IMPORTED_MODULE_0__[\"LDRGeometry\"]();\r\n    this.geometry.fromPartType(loader, this);\r\n    // if (loader.cleanUpPrimitivesAndSubParts) {\r\n    //     this.removePrimitivesAndSubParts(loader);\r\n    // }\r\n}\r\n\r\n// LDRPartType.prototype.generateThreePart = function (loader, c, p, r, cull, inv, mc, pd, taskList) {\r\n// LDRPartType.prototype.generateThreePart = function (loader, c, p, r, cull, inv, mc, pd) {\r\nLDRPartType.prototype.generateThreePart = function (loader, c, p, r, mc, pd) {\r\n    if (!this.geometry) {\r\n        if (this.isPart) {\r\n            // if (taskList) {\r\n            //     let self = this;\r\n            //     taskList.push(() => self.generateThreePart(loader, c, p, r, cull, inv, mc, pd));\r\n            //     mc.expandBoundingBoxByPoint(p); // Assumes p is within the part.\r\n            //     return;\r\n            // }\r\n            // else {\r\n            this.ensureGeometry(loader);\r\n            // }\r\n        }\r\n        else {\r\n            // this.steps.forEach(step => step.generateThreePart(loader, c, p, r, cull, inv, mc, taskList));\r\n            // this.steps.forEach(step => step.generateThreePart(loader, c, p, r, cull, inv, mc));\r\n            this.steps.forEach(step => step.generateThreePart(loader, c, p, r, mc));\r\n            return;\r\n        }\r\n    }\r\n\r\n    // if (loader.physicalRenderingAge === 0) {\r\n    this.geometry.buildGeometriesAndColors();\r\n    // }\r\n    // else {\r\n    //     this.geometry.buildPhysicalGeometriesAndColors();\r\n    // }\r\n\r\n    let m3e = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Matrix3.getElements(r);\r\n    let m4 = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Matrix4.create(m3e[0], m3e[3], m3e[6], p.x,\r\n        m3e[1], m3e[4], m3e[7], p.y,\r\n        m3e[2], m3e[5], m3e[8], p.z,\r\n        0, 0, 0, 1\r\n    );\r\n\r\n    if (this.geometry.lineGeometry) {\r\n        let material = new _LDRColorMaterials__WEBPACK_IMPORTED_MODULE_3__[\"buildLineMaterial\"](this.geometry.lineColorManager, c, false);\r\n        let normalLines = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].LineSegments.create(this.geometry.lineGeometry, material);\r\n        normalLines = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].LineSegments.applyMatrix4(m4, normalLines);\r\n        mc.addLines(normalLines, pd, false);\r\n    }\r\n\r\n    if (this.geometry.conditionalLineGeometry) {\r\n        let material = new _LDRColorMaterials__WEBPACK_IMPORTED_MODULE_3__[\"buildLineMaterial\"](this.geometry.lineColorManager, c, true);\r\n        let conditionalLines = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].LineSegments.create(this.geometry.conditionalLineGeometry, material);\r\n        conditionalLines = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].LineSegments.applyMatrix4(m4, conditionalLines);\r\n        mc.addLines(conditionalLines, pd, true);\r\n    }\r\n\r\n    // Normal triangle geometries:\r\n    for (let tc in this.geometry.triangleGeometries) {\r\n        if (!this.geometry.triangleGeometries.hasOwnProperty(tc)) {\r\n            continue;\r\n        }\r\n        let g = this.geometry.triangleGeometries[tc];\r\n\r\n        let material;\r\n        // if (loader.physicalRenderingAge === 0) { // Simple rendering:\r\n        let triangleColorManager = new _LDRColorManager__WEBPACK_IMPORTED_MODULE_2__[\"LDRColorManager\"]();\r\n        triangleColorManager.get(tc); // Ensure color is present.\r\n        material = new _LDRColorMaterials__WEBPACK_IMPORTED_MODULE_3__[\"buildTriangleMaterial\"](triangleColorManager, c, false);\r\n        // }\r\n        // else { // Physical rendering:\r\n        //     tc = tc === '16' ? c : tc;\r\n        //     material = LDRColors.buildStandardMaterial(tc);\r\n        // }\r\n        let mesh = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Mesh.create(_adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Geometry.clone(g), material); // Using clone to ensure matrix in next line doesn't affect other usages of the geometry.\r\n        // mesh.castShadow = loader.physicalRenderingAge !== 0;\r\n        mesh = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Mesh.setCastShadow(false, mesh);\r\n        mesh = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Mesh.applyMatrix4(m4, mesh);// Doesn't work for all LDraw parts as the matrix needs to be decomposable to position, quaternion and scale. Some rotation matrices in LDraw parts are not decomposable.\r\n        mc.addMesh(tc, mesh, pd);\r\n    }\r\n\r\n    // let self = this;\r\n    // for (let idx in this.geometry.texmapGeometries) { // Texmap geometries:\r\n    //     if (!this.geometry.texmapGeometries.hasOwnProperty(idx)) {\r\n    //         continue;\r\n    //     }\r\n    //     this.geometry.texmapGeometries[idx].forEach(obj => {\r\n    //         let g = obj.g, c2 = obj.c;\r\n    //         let c3 = c2 === '16' ? c : c2;\r\n    //         let textureFile = LDR.TexmapPlacements[idx].file;\r\n\r\n    //         let material;\r\n    //         let buildMaterial, setMap;\r\n    //         if (loader.physicalRenderingAge === 0) {\r\n    //             let triangleColorManager = new LDRColorManager();\r\n    //             triangleColorManager.get(c2); // Ensure color is present.\r\n    //             buildMaterial = t => LDRColors.buildTriangleMaterial(triangleColorManager, c3, t);\r\n    //             setMap = t => material.uniforms.map = { type: 't', value: t };\r\n    //         }\r\n    //         else {\r\n    //             buildMaterial = t => LDRColors.buildStandardMaterial(c3, t);\r\n    //             setMap = t => material.map = t;\r\n    //         }\r\n\r\n    //         if (loader.texmaps[textureFile] === true) {\r\n    //             material = buildMaterial(true);\r\n    //             function setTexmap(t) {\r\n    //                 setMap(t);\r\n    //                 material.needsUpdate = true;\r\n    //                 loader.onProgress(textureFile);\r\n    //             }\r\n    //             loader.texmapListeners[textureFile].push(setTexmap);\r\n    //         }\r\n    //         else {\r\n    //             let texture = loader.texmaps[textureFile];\r\n    //             material = buildMaterial(texture);\r\n    //         }\r\n\r\n    //         let mesh = new Mesh(g.clone(), material);\r\n    //         mesh.geometry.applyMatrix4(m4);\r\n    //         mc.addMesh(c3, mesh, pd);\r\n    //     });\r\n    // }\r\n\r\n    let b = this.geometry.boundingBox;\r\n    mc.expandBoundingBox(b, m4);\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRPartType.js?");

/***/ }),

/***/ "./src/LDRShaders.js":
/*!***************************!*\
  !*** ./src/LDRShaders.js ***!
  \***************************/
/*! exports provided: createShaderHeader, createShaderBody, createSimpleVertexShader, createConditionalVertexShader, SimpleFragmentShader, AlphaTestFragmentShader, TextureFragmentShader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createShaderHeader\", function() { return createShaderHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createShaderBody\", function() { return createShaderBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createSimpleVertexShader\", function() { return createSimpleVertexShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConditionalVertexShader\", function() { return createConditionalVertexShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleFragmentShader\", function() { return SimpleFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AlphaTestFragmentShader\", function() { return AlphaTestFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextureFragmentShader\", function() { return TextureFragmentShader; });\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colors */ \"./src/colors.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nlet createShaderHeader = function (canBeOld, numberOfColors, c, defaultIsEdge) {\r\n    let ret = 'precision highp float;precision mediump int;';\r\n\r\n    if (canBeOld) {\r\n        ret += \"  uniform bool old;\\n\";\r\n        let oldColor = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.createWithHex(defaultIsEdge ? _colors__WEBPACK_IMPORTED_MODULE_1__[\"LDRColors\"][16].edge : _colors__WEBPACK_IMPORTED_MODULE_1__[\"LDRColors\"][16].value);\r\n        ret += \"  const vec4 oldColor = vec4(\" + oldColor.r + \",\" + oldColor.g + \",\" + oldColor.b + \",1);\\n\";\r\n    }\r\n\r\n    let multiColored = numberOfColors > 1;\r\n    if (multiColored) {\r\n        ret += \"  uniform vec4 colors[\" + numberOfColors + \"];\\n\";\r\n    }\r\n    else {\r\n        ret += \"  uniform vec4 color;\\n\";\r\n    }\r\n    return ret;\r\n}\r\n\r\n// createShaderBody = function (canBeOld, multiColored, hasTexmap) {\r\nlet createShaderBody = function (canBeOld, multiColored) {\r\n    let ret = '  uniform mat4 projectionMatrix;uniform mat4 modelViewMatrix;\\n';\r\n    // if (hasTexmap) {\r\n    //     ret += \"  attribute vec2 uv;\\n\";\r\n    //     ret += \"  varying vec2 vuv;\\n\";\r\n    // }\r\n\r\n    if (multiColored)\r\n        ret += \"  attribute vec4 position;\\n\";\r\n    else\r\n        ret += \"  attribute vec3 position;\\n\";\r\n\r\n    ret += 'varying vec4 vColor;void main(){';\r\n\r\n    ret += \"    vColor = \";\r\n    if (canBeOld)\r\n        ret += \"old ? oldColor : \";\r\n\r\n    if (multiColored) {\r\n        ret += \"colors[int(position.w)];\\n\";\r\n        ret += \"    gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz, 1.0);\";\r\n    }\r\n    else {\r\n        ret += \"color;\\n\";\r\n        ret += \"    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\";\r\n    }\r\n    // if (hasTexmap) {\r\n    //     ret += \"  vuv=uv;\\n\";\r\n    // }\r\n\r\n    return ret;\r\n}\r\n\r\n// createSimpleVertexShader = function (canBeOld, colors, push, defaultIsEdge, hasTexmap) {\r\nlet createSimpleVertexShader = function (canBeOld, colors, push, defaultIsEdge) {\r\n    let numberOfColors = colors.length;\r\n    if (numberOfColors === 0) {\r\n        throw \"No colors!\";\r\n    }\r\n    let ret = createShaderHeader(canBeOld, numberOfColors, colors[0], defaultIsEdge);\r\n\r\n    // ret += createShaderBody(canBeOld, numberOfColors > 1, hasTexmap);\r\n    ret += createShaderBody(canBeOld, numberOfColors > 1);\r\n    if (push) {\r\n        ret += \"gl_Position.w -= 0.0000005;\";\r\n    }\r\n    ret += \"  }\";\r\n    return ret;\r\n}\r\n\r\n// See 'http://www.ldraw.org/article/218.html' for specification of optional/conditional lines.\r\n// A conditional line is drawn when the camera sees p3 and p4 on same side of line p1 p2.\r\nlet createConditionalVertexShader = function (canBeOld, colors, push) {\r\n    let numberOfColors = colors.length;\r\n    let c = colors[0];\r\n\r\n    let ret = 'precision highp float;precision mediump int;';\r\n\r\n    if (canBeOld) {\r\n        ret += \"  uniform bool old;\\n\";\r\n        let oldColor = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_0__[\"adapter\"].Color.createWithHex(_colors__WEBPACK_IMPORTED_MODULE_1__[\"LDRColors\"][16].edge);\r\n        ret += \"  const vec4 oldColor = vec4(\" + oldColor.r + \",\" + oldColor.g + \",\" + oldColor.b + \",1);\\n\";\r\n    }\r\n\r\n    ret += 'uniform mat4 projectionMatrix;uniform mat4 modelViewMatrix;attribute vec3 position;attribute vec3 p2;attribute vec3 p3;attribute vec3 p4;';\r\n\r\n    let multiColored = numberOfColors > 1;\r\n    if (multiColored) {\r\n        ret += \"  uniform vec4 colors[\" + numberOfColors + \"];\\n\";\r\n        ret += \"  attribute float colorIndex;\\n\"; // Should have been an int... but GLSL doesn't support that.\r\n    }\r\n    else {\r\n        ret += \"  uniform vec4 color;\\n\";\r\n    }\r\n\r\n    ret += 'varying vec4 vColor;void main(){mat4 m=projectionMatrix*modelViewMatrix;gl_Position=m*vec4(position,1.0);vec2 xp1=gl_Position.xy;vec2 d12=vec4(m*vec4(p2,1.0)).yx-xp1.yx;d12.y=-d12.y;vec2 d13=vec4(m*vec4(p3,1.0)).xy-xp1;vec2 d14=vec4(m*vec4(p4,1.0)).xy-xp1;vColor=';\r\n    // Compute color:\r\n    if (canBeOld)\r\n        ret += \"old ? oldColor : \";\r\n\r\n    if (multiColored)\r\n        ret += \"colors[int(colorIndex)];\";\r\n    else\r\n        ret += \"color;\";\r\n\r\n    ret += \"\\n        vColor.a *= sign(dot(d12, d13)*dot(d12, d14));\";\r\n    if (push)\r\n        ret += \"\\n        gl_Position.w -= 0.0000005;\";\r\n    ret += \"\\n      }\";\r\n    return ret;\r\n}\r\n\r\nlet SimpleFragmentShader = 'precision lowp float;varying vec4 vColor;void main(){gl_FragColor=vColor;}';\r\n\r\nlet AlphaTestFragmentShader = 'precision lowp float;varying vec4 vColor;void main(){if(vColor.a <= 0.001)discard;gl_FragColor = vColor;}';\r\n\r\nlet TextureFragmentShader = 'precision lowp float;varying vec4 vColor;varying vec2 vuv;uniform sampler2D map;void main(){if(vuv.x >= 0.0 && vuv.x <= 1.0 && vuv.y >= 0.0 && vuv.y <= 1.0){gl_FragColor = texture2D(map,vuv);if(gl_FragColor.a < 1.0){gl_FragColor=mix(gl_FragColor,vColor,1.0-gl_FragColor.a);}}else{gl_FragColor=vColor;}}';\r\n\n\n//# sourceURL=webpack://ldr/./src/LDRShaders.js?");

/***/ }),

/***/ "./src/LDRStep.js":
/*!************************!*\
  !*** ./src/LDRStep.js ***!
  \************************/
/*! exports provided: LDRStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRStep\", function() { return LDRStep; });\n/* harmony import */ var _LDRStructure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LDRStructure */ \"./src/LDRStructure.js\");\n/* harmony import */ var _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adapter/Adapter */ \"./src/adapter/Adapter.js\");\n\r\n\r\n\r\n// let LDRStepIdx = 0;\r\n\r\nlet LDRStep = function () {\r\n    // this.idx = LDRStepIdx++;\r\n    this.hasPrimitives = false;\r\n    this.subModels = []; // LDRPartDescription\r\n    this.lines = []; // LDR.Line2\r\n    this.conditionalLines = []; // LDR.Line5\r\n    this.triangles = []; // LDR.Line3\r\n    this.quads = []; // LDR.Line4\r\n    // this.rotation = null; // LDRStepRotation\r\n    // this.cnt = -1;\r\n    // this.original; // LDRStep\r\n}\r\n\r\n\r\nLDRStep.prototype.isEmpty = function () {\r\n    return this.subModels.length === 0 && !this.hasPrimitives;\r\n}\r\n\r\nLDRStep.prototype.addSubModel = function (subModel) {\r\n    this.subModels.push(subModel);\r\n}\r\n\r\n// LDRStep.prototype.addLine = function (c, p1, p2, texmapPlacement) {\r\nLDRStep.prototype.addLine = function (c, p1, p2) {\r\n    this.hasPrimitives = true;\r\n    // this.lines.push(new LDR.Line2(c, p1, p2, texmapPlacement));\r\n    this.lines.push(new _LDRStructure__WEBPACK_IMPORTED_MODULE_0__[\"Line2\"](c, p1, p2));\r\n    // texmapPlacement && texmapPlacement.use();\r\n}\r\n\r\n// LDRStep.prototype.addTriangle = function (c, p1, p2, p3, cull, invert, texmapPlacement) {\r\nLDRStep.prototype.addTriangle = function (c, p1, p2, p3) {\r\n    this.hasPrimitives = true;\r\n    // this.triangles.push(new LDR.Line3(c, p1, p2, p3, cull, invert, texmapPlacement));\r\n    this.triangles.push(new _LDRStructure__WEBPACK_IMPORTED_MODULE_0__[\"Line3\"](c, p1, p2, p3));\r\n    // texmapPlacement && texmapPlacement.use();\r\n}\r\n\r\n// LDRStep.prototype.addQuad = function (c, p1, p2, p3, p4, cull, invert, texmapPlacement) {\r\nLDRStep.prototype.addQuad = function (c, p1, p2, p3, p4) {\r\n    this.hasPrimitives = true;\r\n    // this.quads.push(new LDR.Line4(c, p1, p2, p3, p4, cull, invert, texmapPlacement));\r\n    this.quads.push(new _LDRStructure__WEBPACK_IMPORTED_MODULE_0__[\"Line4\"](c, p1, p2, p3, p4));\r\n    // texmapPlacement && texmapPlacement.use();\r\n}\r\n\r\n// LDRStep.prototype.addConditionalLine = function (c, p1, p2, p3, p4, texmapPlacement) {\r\nLDRStep.prototype.addConditionalLine = function (c, p1, p2, p3, p4) {\r\n    this.hasPrimitives = true;\r\n    // this.conditionalLines.push(new LDR.Line5(c, p1, p2, p3, p4, texmapPlacement));\r\n    this.conditionalLines.push(new _LDRStructure__WEBPACK_IMPORTED_MODULE_0__[\"Line5\"](c, p1, p2, p3, p4));\r\n    // texmapPlacement && texmapPlacement.use();\r\n}\r\n\r\n/*\r\n  Split all color/partType into separate steps with one step containing only parts.\r\n  \r\n  this.subModels = [];\r\n  this.rotation = null;\r\n */\r\nLDRStep.prototype.cleanUp = function (loader, newSteps) {\r\n    if (this.isEmpty() || this.hasPrimitives) {\r\n        newSteps.push(this);\r\n        return; // Primitive-containing or empty step - just keep existing.\r\n    }\r\n\r\n    // Collect info:\r\n    let self = this;\r\n    let parts = [];\r\n    let subModelsByTypeAndColor = {};\r\n\r\n    function handleSubModel(subModelDesc) {\r\n        let subModel = loader.getPartType(subModelDesc.ID);\r\n        if (!subModel || subModel.isPart) {\r\n            parts.push(subModelDesc);\r\n        }\r\n        else { // Not a part:\r\n            subModel.cleanUp(loader);\r\n            let key = subModelDesc.c + '_' + subModel.ID;\r\n            if (subModelsByTypeAndColor.hasOwnProperty(key)) {\r\n                subModelsByTypeAndColor[key].push(subModelDesc);\r\n            }\r\n            else {\r\n                subModelsByTypeAndColor[key] = [subModelDesc];\r\n            }\r\n        }\r\n    }\r\n    this.subModels.forEach(handleSubModel);\r\n\r\n    function push(subModels) {\r\n        let newStep = new LDRStep();\r\n        newStep.subModels = subModels;\r\n        // newStep.rotation = self.rotation ? self.rotation.clone() : null;\r\n        newSteps.push(newStep);\r\n    }\r\n\r\n    // Split into separate steps if necessary:\r\n    for (let key in subModelsByTypeAndColor) {\r\n        if (subModelsByTypeAndColor.hasOwnProperty(key)) {\r\n            push(subModelsByTypeAndColor[key]);\r\n        }\r\n    }\r\n\r\n    // Finally add step for just the parts:\r\n    if (parts.length > 0) {\r\n        push(parts);\r\n    }\r\n}\r\n\r\n\r\n\r\n// LDRStep.prototype.generateThreePart = function (loader, colorID, position, rotation, cull, invertCCW, mc, taskList) {\r\nLDRStep.prototype.generateThreePart = function (loader, colorID, position, rotation, mc) {\r\n    //console.log(\"STEP: Creating three part for \" + this.subModels.length + \" sub models in color \" + colorID + \", cull: \" + cull + \", invertion: \" + invertCCW);\r\n    // let ownInversion = (rotation.determinant() < 0) !== invertCCW; // Adjust for inversed matrix!\r\n\r\n    function transformColor(subColorID) {\r\n        if (subColorID === 16) {\r\n            return colorID; // Main color\r\n        }\r\n        else if (subColorID === 24) {\r\n            return colorID < 0 ? colorID : -colorID - 1; // Edge color\r\n        }\r\n        return subColorID;\r\n    }\r\n\r\n    function transformPoint(p) {\r\n        let ret = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.create(p.x, p.y, p.z);\r\n        ret = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.applyMatrix3(rotation, ret);\r\n        ret = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Vector3.add(position, ret);\r\n        return ret;\r\n    }\r\n\r\n    function handleSubModel(subModelDesc) {\r\n        // let subModelInversion = invertCCW !== subModelDesc.invertCCW;\r\n        // let subModelCull = subModelDesc.cull && cull; // Cull only if both sub model, this step and the inherited cull info is true!\r\n\r\n        let subModelColor = transformColor(subModelDesc.c);\r\n\r\n        let subModel = loader.getPartType(subModelDesc.ID);\r\n        if (!subModel) {\r\n            loader.onError({ message: \"Unloaded sub model!\", subModel: subModelDesc.ID });\r\n            return;\r\n        }\r\n        // if (subModel.replacement) {\r\n        //     let replacementSubModel = loader.getPartType(subModel.replacement);\r\n        //     if (!replacementSubModel) {\r\n        //         throw {\r\n        //             name: \"UnloadedSubmodelException\",\r\n        //             level: \"Severe\",\r\n        //             message: \"Unloaded replaced sub model: \" + subModel.replacement + \" replacing \" + subModelDesc.ID,\r\n        //             htmlMessage: \"Unloaded replaced sub model: \" + subModel.replacement + \" replacing \" + subModelDesc.ID,\r\n        //             toString: function () { return this.name + \": \" + this.message; }\r\n        //         };\r\n        //     }\r\n        //     subModel = replacementSubModel;\r\n        // }\r\n        let nextPosition = transformPoint(subModelDesc.p);\r\n        let nextRotation = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Matrix3.createEmpty();\r\n        nextRotation = _adapter_Adapter__WEBPACK_IMPORTED_MODULE_1__[\"adapter\"].Matrix3.multiplyMatrices(rotation, subModelDesc.r, nextRotation);\r\n        // subModel.generateThreePart(loader, subModelColor, nextPosition, nextRotation, subModelCull, subModelInversion, mc, subModelDesc, taskList);\r\n        subModel.generateThreePart(loader, subModelColor, nextPosition, nextRotation, mc, subModelDesc);\r\n    }\r\n\r\n    // Add submodels:\r\n    this.subModels.forEach(handleSubModel);\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRStep.js?");

/***/ }),

/***/ "./src/LDRStructure.js":
/*!*****************************!*\
  !*** ./src/LDRStructure.js ***!
  \*****************************/
/*! exports provided: Line2, Line3, Line4, Line5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Line2\", function() { return Line2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Line3\", function() { return Line3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Line4\", function() { return Line4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Line5\", function() { return Line5; });\n\r\n// LDR.Line2 = function (c, p1, p2, tmp) {\r\nlet Line2 = function (c, p1, p2) {\r\n    this.c = c;\r\n    this.p1 = p1;\r\n    this.p2 = p2;\r\n    // this.tmp = tmp;\r\n}\r\n\r\n\r\n// LDR.Line3 = function (c, p1, p2, p3, cull, invert, tmp) {\r\nlet Line3 = function (c, p1, p2, p3) {\r\n    this.c = c;\r\n    // if (invert) {\r\n    //     this.p1 = p3;\r\n    //     this.p2 = p2;\r\n    //     this.p3 = p1;\r\n    // }\r\n    // else {\r\n    this.p1 = p1;\r\n    this.p2 = p2;\r\n    this.p3 = p3;\r\n    // }\r\n    // this.cull = cull;\r\n    // this.tmp = tmp;\r\n}\r\n\r\n\r\n// LDR.Line4 = function (c, p1, p2, p3, p4, cull, invert, tmp) {\r\nlet Line4 = function (c, p1, p2, p3, p4) {\r\n    this.c = c;\r\n    // if (invert) {\r\n    //     this.p1 = p4;\r\n    //     this.p2 = p3;\r\n    //     this.p3 = p2;\r\n    //     this.p4 = p1;\r\n    // }\r\n    // else {\r\n    this.p1 = p1;\r\n    this.p2 = p2;\r\n    this.p3 = p3;\r\n    this.p4 = p4;\r\n    // }\r\n    // this.cull = cull;\r\n    // this.tmp = tmp;\r\n}\r\n\r\n// LDR.Line5 = function (c, p1, p2, p3, p4, tmp) {\r\nlet Line5 = function (c, p1, p2, p3, p4) {\r\n    this.c = c;\r\n    this.p1 = p1;\r\n    this.p2 = p2;\r\n    this.p3 = p3;\r\n    this.p4 = p4;\r\n    // this.tmp = tmp;\r\n}\n\n//# sourceURL=webpack://ldr/./src/LDRStructure.js?");

/***/ }),

/***/ "./src/adapter/Adapter.js":
/*!********************************!*\
  !*** ./src/adapter/Adapter.js ***!
  \********************************/
/*! exports provided: adapter, setAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"adapter\", function() { return adapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAdapter\", function() { return setAdapter; });\nlet adapter = {\r\n};\r\n\r\nlet setAdapter = (adapter_) => {\r\n    adapter = adapter_;\r\n}\n\n//# sourceURL=webpack://ldr/./src/adapter/Adapter.js?");

/***/ }),

/***/ "./src/colors.js":
/*!***********************!*\
  !*** ./src/colors.js ***!
  \***********************/
/*! exports provided: LDRColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDRColors\", function() { return LDRColors; });\n\r\n\r\n// import {LDR} from \"./LDR.js\";\r\n\r\n// var LDR = {};LDRColors = [];\r\nlet LDRColors = [];\r\n\r\nLDRColors[0] = { name: 'Black', value: 0x05131D, edge: 0x595959, lego_name: 'Black', lego_id: 26, bricklink_name: 'Black', bricklink_id: 11 };\r\nLDRColors[1] = { name: 'Blue', value: 0x0055BF, edge: 0x333333, lego_name: 'Bright Blue', lego_id: 23, bricklink_name: 'Blue', bricklink_id: 7 };\r\nLDRColors[2] = { name: 'Green', value: 0x257A3E, edge: 0x333333, lego_name: 'Dark Green', lego_id: 28, bricklink_name: 'Green', bricklink_id: 6 };\r\nLDRColors[3] = { name: 'Dark_Turquoise', value: 0x00838F, edge: 0x333333, lego_name: 'Bright Bluish Green', lego_id: 107, bricklink_name: 'Dark Turquoise', bricklink_id: 39 };\r\nLDRColors[4] = { name: 'Red', value: 0xC91A09, edge: 0x333333, lego_name: 'Bright Red', lego_id: 21, bricklink_name: 'Red', bricklink_id: 5 };\r\nLDRColors[5] = { name: 'Dark_Pink', value: 0xC870A0, edge: 0x333333, lego_name: 'Bright Purple', lego_id: 221, bricklink_name: 'Dark Pink', bricklink_id: 47 };\r\nLDRColors[6] = { name: 'Brown', value: 0x583927, edge: 0x1E1E1E, lego_name: 'Brown', lego_id: 217, bricklink_name: 'Brown', bricklink_id: 8 };\r\nLDRColors[7] = { name: 'Light_Grey', value: 0x9BA19D, edge: 0x333333, lego_name: 'Grey', lego_id: 2, bricklink_name: 'Light Gray', bricklink_id: 9 };\r\nLDRColors[8] = { name: 'Dark_Grey', value: 0x6D6E5C, edge: 0x333333, lego_name: 'Dark Grey', lego_id: 27, bricklink_name: 'Dark Gray', bricklink_id: 10 };\r\nLDRColors[9] = { name: 'Light_Blue', value: 0xB4D2E3, edge: 0x333333, lego_name: 'Light Blue', lego_id: 45, bricklink_name: 'Light Blue', bricklink_id: 62 };\r\nLDRColors[10] = { name: 'Bright_Green', value: 0x4B9F4A, edge: 0x333333, lego_name: 'Bright Green', lego_id: 37, bricklink_name: 'Bright Green', bricklink_id: 36 };\r\nLDRColors[11] = { name: 'Light_Turquoise', value: 0x55A5AF, edge: 0x333333, lego_name: 'Medium Bluish Green', lego_id: 116, bricklink_name: 'Light Turquoise', bricklink_id: 40 };\r\nLDRColors[12] = { name: 'Salmon', value: 0xF2705E, edge: 0x333333, lego_name: 'Medium Red', lego_id: 4, bricklink_name: 'Salmon', bricklink_id: 25 };\r\nLDRColors[13] = { name: 'Pink', value: 0xFC97AC, edge: 0x333333, lego_name: 'Light Reddish Violet', lego_id: 9, bricklink_name: 'Pink', bricklink_id: 23 };\r\nLDRColors[14] = { name: 'Yellow', value: 0xF2CD37, edge: 0x333333, lego_name: 'Bright Yellow', lego_id: 24, bricklink_name: 'Yellow', bricklink_id: 3 };\r\nLDRColors[15] = { name: 'White', value: 0xFFFFFF, edge: 0x333333, lego_name: 'White', lego_id: 1, bricklink_name: 'White', bricklink_id: 1 };\r\nLDRColors[16] = { name: 'Main_Colour', value: 0xFFFF80, edge: 0x333333 };\r\nLDRColors[17] = { name: 'Light_Green', value: 0xC2DAB8, edge: 0x333333, lego_name: 'Light Green', lego_id: 6, bricklink_name: 'Light Green', bricklink_id: 38 };\r\nLDRColors[18] = { name: 'Light_Yellow', value: 0xFBE696, edge: 0x333333, lego_name: 'Light Yellow', lego_id: 3, bricklink_name: 'Light Yellow', bricklink_id: 33 };\r\nLDRColors[19] = { name: 'Tan', value: 0xF4DC96, edge: 0x333333, lego_name: 'Brick Yellow', lego_id: 5, bricklink_name: 'Tan', bricklink_id: 2 };\r\nLDRColors[20] = { name: 'Light_Violet', value: 0xC9CAE2, edge: 0x333333, lego_name: 'Light Bluish Violet', lego_id: 39, bricklink_name: 'Light Violet', bricklink_id: 44 };\r\nLDRColors[21] = { name: 'Glow_In_Dark_Opaque', value: 0xE0FFB0, edge: 0xA4C374, lego_name: 'Phosphorescent Green', lego_id: 294, bricklink_name: 'Glow In Dark Opaque', bricklink_id: 46, alpha: 240, luminance: 15 };\r\nLDRColors[22] = { name: 'Purple', value: 0x81007B, edge: 0x333333, lego_name: 'Bright Violet', lego_id: 104, bricklink_name: 'Purple', bricklink_id: 24 };\r\nLDRColors[23] = { name: 'Dark_Blue_Violet', value: 0x2032B0, edge: 0x1E1E1E, lego_name: 'Dark Royal Blue', lego_id: 196, bricklink_name: 'Dark Blue-Violet', bricklink_id: 109 };\r\nLDRColors[24] = { name: 'Edge_Colour', value: 0x7F7F7F, edge: 0x333333 };\r\nLDRColors[25] = { name: 'Orange', value: 0xFE8A18, edge: 0x333333, lego_name: 'Bright Orange', lego_id: 106, bricklink_name: 'Orange', bricklink_id: 4 };\r\nLDRColors[26] = { name: 'Magenta', value: 0x901F76, edge: 0x333333, lego_name: 'Bright Reddish Violet', lego_id: 124, bricklink_name: 'Magenta', bricklink_id: 71 };\r\nLDRColors[27] = { name: 'Lime', value: 0xBBE90B, edge: 0x333333, lego_name: 'Bright Yellowish Green', lego_id: 119, bricklink_name: 'Lime', bricklink_id: 34 };\r\nLDRColors[28] = { name: 'Dark_Tan', value: 0x958A73, edge: 0x333333, lego_name: 'Sand Yellow', lego_id: 138, bricklink_name: 'Dark Tan', bricklink_id: 69 };\r\nLDRColors[29] = { name: 'Bright_Pink', value: 0xE4ADC8, edge: 0x333333, lego_name: 'Light Purple', lego_id: 222, bricklink_name: 'Bright Pink', bricklink_id: 104 };\r\nLDRColors[30] = { name: 'Medium_Lavender', value: 0xAC78BA, edge: 0x333333, lego_name: 'Medium Lavender', lego_id: 324, bricklink_name: 'Medium Lavender', bricklink_id: 157 };\r\nLDRColors[31] = { name: 'Lavender', value: 0xE1D5ED, edge: 0x333333, lego_name: 'Lavender', lego_id: 325, bricklink_name: 'Lavender', bricklink_id: 154 };\r\nLDRColors[32] = { name: 'Trans_Black_IR_Lens', value: 0x000000, edge: 0x333333, lego_name: 'Black IR', lego_id: 109, alpha: 210 };\r\nLDRColors[33] = { name: 'Trans_Dark_Blue', value: 0x0020A0, edge: 0x000064, lego_name: 'Transparent Blue', lego_id: 43, bricklink_name: 'Trans-Dark Blue', bricklink_id: 14, alpha: 128 };\r\nLDRColors[34] = { name: 'Trans_Green', value: 0x237841, edge: 0x1E6239, lego_name: 'Transparent Green', lego_id: 48, bricklink_name: 'Trans-Green', bricklink_id: 20, alpha: 128 };\r\nLDRColors[35] = { name: 'Trans_Bright_Green', value: 0x56E646, edge: 0x9DA86B, lego_name: '227 - Transparent Bright Green / Transparent Bright Yellowish Green', lego_id: 311, bricklink_name: 'Trans-Bright Green', bricklink_id: 108, alpha: 128 };\r\nLDRColors[36] = { name: 'Trans_Red', value: 0xC91A09, edge: 0x880000, lego_name: 'Transparent Red', lego_id: 41, bricklink_name: 'Trans-Red', bricklink_id: 17, alpha: 128 };\r\nLDRColors[37] = { name: 'Trans_Dark_Pink', value: 0xDF6695, edge: 0xA32A59, lego_name: 'Transparent Medium Reddish Violet', lego_id: 113, bricklink_name: 'Trans-Dark Pink', bricklink_id: 50, alpha: 128 };\r\nLDRColors[38] = { name: 'Trans_Neon_Orange', value: 0xFF800D, edge: 0xBD2400, lego_name: 'Transparent Fluorescent Reddish Orange', lego_id: 47, bricklink_name: 'Trans-Neon Orange', bricklink_id: 18, alpha: 128 };\r\nLDRColors[39] = { name: 'Trans_Very_Light_Blue', value: 0xC1DFF0, edge: 0x85A3B4, lego_name: 'Transparent Light Bluish Green', lego_id: 229, bricklink_name: 'Trans-Very Lt Blue', bricklink_id: 113, alpha: 128 };\r\nLDRColors[40] = { name: 'Trans_Black', value: 0x635F52, edge: 0x171316, lego_name: 'Transparent Brown', lego_id: 111, bricklink_name: 'Trans-Black', bricklink_id: 13, alpha: 128 };\r\nLDRColors[41] = { name: 'Trans_Medium_Blue', value: 0x559AB7, edge: 0x196973, lego_name: 'Transparent Fluorescent Blue', lego_id: 143, bricklink_name: 'Trans-Medium Blue', bricklink_id: 74, alpha: 128 };\r\nLDRColors[42] = { name: 'Trans_Neon_Green', value: 0xC0FF00, edge: 0x84C300, lego_name: 'Transparent Fluorescent Green', lego_id: 49, bricklink_name: 'Trans-Neon Green', bricklink_id: 16, alpha: 128 };\r\nLDRColors[43] = { name: 'Trans_Light_Blue', value: 0xAEE9EF, edge: 0x72B3B0, lego_name: 'Transparent Light Blue', lego_id: 42, bricklink_name: 'Trans-Light Blue', bricklink_id: 15, alpha: 128 };\r\nLDRColors[44] = { name: 'Trans_Bright_Reddish_Lilac', value: 0x96709F, edge: 0x5A3463, lego_name: 'Transparent Bright Reddish Lilac', lego_id: 236, bricklink_name: 'Trans-Light Purple', bricklink_id: 114, alpha: 128 };\r\nLDRColors[45] = { name: 'Trans_Pink', value: 0xFC97AC, edge: 0xA8718C, lego_name: 'Transparent Bright Pink', lego_id: 230, bricklink_name: 'Trans-Pink', bricklink_id: 107, alpha: 128 };\r\nLDRColors[46] = { name: 'Trans_Yellow', value: 0xF5CD2F, edge: 0x8E7400, lego_name: 'Transparent Yellow', lego_id: 44, bricklink_name: 'Trans-Yellow', bricklink_id: 19, alpha: 128 };\r\nLDRColors[47] = { name: 'Trans_Clear', value: 0xFCFCFC, edge: 0xC3C3C3, lego_name: 'Transparent', lego_id: 40, bricklink_name: 'Trans-Clear', bricklink_id: 12, alpha: 128 };\r\nLDRColors[52] = { name: 'Trans_Purple', value: 0xA5A5CB, edge: 0x280025, lego_name: 'Transparent Bright Bluish Violet', lego_id: 126, bricklink_name: 'Trans-Purple', bricklink_id: 51, alpha: 128 };\r\nLDRColors[54] = { name: 'Trans_Neon_Yellow', value: 0xDAB000, edge: 0xC3BA3F, lego_name: 'Transparent Fluorescent Yellow', lego_id: 157, bricklink_name: 'Trans-Neon Yellow', bricklink_id: 121, alpha: 128 };\r\nLDRColors[57] = { name: 'Trans_Orange', value: 0xF08F1C, edge: 0xA45C28, lego_name: 'Trans Bright Orange', lego_id: 182, bricklink_name: 'Trans-Orange', bricklink_id: 98, alpha: 128 };\r\nLDRColors[60] = { name: 'Chrome_Antique_Brass', value: 0x645A4C, edge: 0x281E10, lego_name: 'Metallic Earth Orange', lego_id: 187, bricklink_name: 'Chrome Antique Brass', bricklink_id: 57, material: 'CHROME' };\r\nLDRColors[61] = { name: 'Chrome_Blue', value: 0x6C96BF, edge: 0x202A68, lego_name: 'Metallic Bright Blue', lego_id: 185, bricklink_name: 'Chrome Blue', bricklink_id: 52, material: 'CHROME' };\r\nLDRColors[62] = { name: 'Chrome_Green', value: 0x3CB371, edge: 0x007735, lego_name: 'Metallic Dark Green', lego_id: 147, bricklink_name: 'Chrome Green', bricklink_id: 64, material: 'CHROME' };\r\nLDRColors[63] = { name: 'Chrome_Pink', value: 0xAA4D8E, edge: 0x6E1152, bricklink_name: 'Chrome Pink', bricklink_id: 82, material: 'CHROME' };\r\nLDRColors[64] = { name: 'Chrome_Black', value: 0x1B2A34, edge: 0x595959, bricklink_name: 'Chrome Black', bricklink_id: 122, material: 'CHROME' };\r\nLDRColors[65] = { name: 'Rubber_Yellow', value: 0xF5CD2F, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[66] = { name: 'Rubber_Trans_Yellow', value: 0xCAB000, edge: 0x8E7400, alpha: 128, material: 'RUBBER' };\r\nLDRColors[67] = { name: 'Rubber_Trans_Clear', value: 0xFFFFFF, edge: 0xC3C3C3, alpha: 128, material: 'RUBBER' };\r\nLDRColors[68] = { name: 'Very_Light_Orange', value: 0xF3CF9B, edge: 0x333333, lego_name: 'Light Yellowish Orange', lego_id: 36, bricklink_name: 'Very Light Orange', bricklink_id: 96 };\r\nLDRColors[69] = { name: 'Bright_Reddish_Lilac', value: 0xCD6298, edge: 0x333333, lego_name: 'Bright Reddish Lilac', lego_id: 198, bricklink_name: 'Light Purple', bricklink_id: 93 };\r\nLDRColors[70] = { name: 'Reddish_Brown', value: 0x582A12, edge: 0x595959, lego_name: 'Reddish Brown', lego_id: 192, bricklink_name: 'Reddish Brown', bricklink_id: 88 };\r\nLDRColors[71] = { name: 'Light_Bluish_Grey', value: 0xA0A5A9, edge: 0x333333, lego_name: 'Medium Stone Grey', lego_id: 194, bricklink_name: 'Light Bluish Gray', bricklink_id: 86 };\r\nLDRColors[72] = { name: 'Dark_Bluish_Grey', value: 0x6C6E68, edge: 0x333333, lego_name: 'Dark Stone Grey', lego_id: 199, bricklink_name: 'Dark Bluish Gray', bricklink_id: 85 };\r\nLDRColors[73] = { name: 'Medium_Blue', value: 0x5C9DD1, edge: 0x333333, lego_name: 'Medium Blue', lego_id: 102, bricklink_name: 'Medium Blue', bricklink_id: 42 };\r\nLDRColors[74] = { name: 'Medium_Green', value: 0x73DCA1, edge: 0x333333, lego_name: 'Medium Green', lego_id: 29, bricklink_name: 'Medium Green', bricklink_id: 37 };\r\nLDRColors[75] = { name: 'Speckle_Black_Copper', value: 0xAB6038, edge: 0xAB6038, bricklink_name: 'Speckle Black-Copper', bricklink_id: 116, material: 'MATERIAL SPECKLE FRACTION 0.4 MINSIZE 1 MAXSIZE 3' };\r\nLDRColors[76] = { name: 'Speckle_Dark_Bluish_Grey_Silver', value: 0x898788, edge: 0x898788, bricklink_name: 'Speckle DBGray-Silver', bricklink_id: 117, material: 'MATERIAL SPECKLE FRACTION 0.4 MINSIZE 1 MAXSIZE 3' };\r\nLDRColors[77] = { name: 'Light_Pink', value: 0xFECCCF, edge: 0x333333, lego_name: 'Light Pink', lego_id: 223, bricklink_name: 'Light Pink', bricklink_id: 56 };\r\nLDRColors[78] = { name: 'Light_Flesh', value: 0xF6D7B3, edge: 0x333333, lego_name: 'Light Nougat', lego_id: 283, bricklink_name: 'Light Flesh', bricklink_id: 90 };\r\nLDRColors[79] = { name: 'Milky_White', value: 0xFFFFFF, edge: 0xC3C3C3, lego_name: 'Nature', lego_id: 20, bricklink_name: 'Milky White', bricklink_id: 60, alpha: 240 };\r\nLDRColors[80] = { name: 'Metallic_Silver', value: 0xA5A9B4, edge: 0x333333, lego_name: '336 - Cool Silver Drum Lacq / Silver Ink', lego_id: 315, bricklink_name: 'Metallic Silver', bricklink_id: 67, material: 'METAL' };\r\nLDRColors[81] = { name: 'Metallic_Green', value: 0x899B5F, edge: 0x333333, lego_name: 'Lemon Metallic', lego_id: 200, bricklink_name: 'Metallic Green', bricklink_id: 70, material: 'METAL' };\r\nLDRColors[82] = { name: 'Metallic_Gold', value: 0xDBAC34, edge: 0x333333, lego_name: '335 - Warm Gold Drum Lacq / Gold Ink', lego_id: 310, bricklink_name: 'Metallic Gold', bricklink_id: 65, material: 'METAL' };\r\nLDRColors[83] = { name: 'Metallic_Black', value: 0x1A2831, edge: 0x333333, lego_name: 'Metallic Black', lego_id: 149, bricklink_name: 'Pearl Dark Gray', bricklink_id: 77, material: 'METAL' };\r\nLDRColors[84] = { name: 'Medium_Dark_Flesh', value: 0xCC702A, edge: 0x333333, lego_name: 'Dark Orange', lego_id: 38, bricklink_name: 'Medium Dark Flesh', bricklink_id: 150 };\r\nLDRColors[85] = { name: 'Medium_Lilac', value: 0x3F3691, edge: 0x1E1E1E, lego_name: 'Medium Lilac', lego_id: 268, bricklink_name: 'Dark Purple', bricklink_id: 89 };\r\nLDRColors[86] = { name: 'Dark_Flesh', value: 0x7C503A, edge: 0x333333, lego_name: 'Medium Nougat', lego_id: 312, bricklink_name: 'Dark Flesh', bricklink_id: 91 };\r\nLDRColors[87] = { name: 'Metallic_Dark_Grey', value: 0x6D6E5C, edge: 0x333333, lego_name: 'Titanium', lego_id: 309, bricklink_name: 'Pearl Dark Gray', bricklink_id: 77, material: 'METAL' };\r\nLDRColors[89] = { name: 'Blue_Violet', value: 0x4C61DB, edge: 0x333333, lego_name: 'Medium Royal Blue', lego_id: 195 };\r\nLDRColors[92] = { name: 'Flesh', value: 0xF5A949, edge: 0x333333, lego_name: 'Nougat', lego_id: 18, bricklink_name: 'Flesh', bricklink_id: 28 };\r\nLDRColors[100] = { name: 'Light_Salmon', value: 0xFEBABD, edge: 0x333333, lego_name: 'Light Red', lego_id: 100, bricklink_name: 'Light Salmon', bricklink_id: 26 };\r\nLDRColors[110] = { name: 'Violet', value: 0x4354A3, edge: 0x333333, lego_name: 'Bright Bluish Violet', lego_id: 110, bricklink_name: 'Violet', bricklink_id: 43 };\r\nLDRColors[112] = { name: 'Medium_Violet', value: 0x6874CA, edge: 0x333333, lego_name: 'Medium Bluish Violet', lego_id: 112, bricklink_name: 'Medium Violet', bricklink_id: 73 };\r\nLDRColors[114] = { name: 'Glitter_Trans_Dark_Pink', value: 0x923978, edge: 0x9A2A66, lego_name: 'Tr. Medium Reddish-Violet w. Glitter 2%', lego_id: 114, bricklink_name: 'Glitter Trans-Dark Pink', bricklink_id: 100, alpha: 128, material: 'MATERIAL GLITTER FRACTION 0.17 VFRACTION 0.2 SIZE 1' };\r\nLDRColors[115] = { name: 'Medium_Lime', value: 0xC7D23C, edge: 0x333333, lego_name: 'Medium Yellowish Green', lego_id: 115, bricklink_name: 'Medium Lime', bricklink_id: 76 };\r\nLDRColors[117] = { name: 'Glitter_Trans_Clear', value: 0xFFFFFF, edge: 0xC3C3C3, lego_name: 'Transparent Glitter', lego_id: 117, bricklink_name: 'Glitter Trans-Clear', bricklink_id: 101, alpha: 128, material: 'MATERIAL GLITTER FRACTION 0.08 VFRACTION 0.1 SIZE 1' };\r\nLDRColors[118] = { name: 'Aqua', value: 0xB3D7D1, edge: 0x333333, lego_name: 'Light Bluish Green', lego_id: 118, bricklink_name: 'Aqua', bricklink_id: 41 };\r\nLDRColors[120] = { name: 'Light_Lime', value: 0xD9E4A7, edge: 0x333333, lego_name: 'Light Yellowish Green', lego_id: 120, bricklink_name: 'Light Lime', bricklink_id: 35 };\r\nLDRColors[125] = { name: 'Light_Orange', value: 0xF9BA61, edge: 0x333333, lego_name: 'Light Orange', lego_id: 125, bricklink_name: 'Light Orange', bricklink_id: 32 };\r\nLDRColors[128] = { name: 'Dark_Nougat', value: 0xAD6140, edge: 0x333333, lego_name: 'Dark Nougat', lego_id: 128, bricklink_name: 'Earth Orange', bricklink_id: 29 };\r\nLDRColors[129] = { name: 'Glitter_Trans_Purple', value: 0x8C00FF, edge: 0x280025, lego_name: 'Tr. Bright Bluish Violet w. Glitter 2%', lego_id: 129, bricklink_name: 'Glitter Trans-Purple', bricklink_id: 102, alpha: 128, material: 'MATERIAL GLITTER FRACTION 0.3 VFRACTION 0.4 SIZE 1' };\r\nLDRColors[132] = { name: 'Speckle_Black_Silver', value: 0x898788, edge: 0x898788, bricklink_name: 'Speckle Black-Silver', bricklink_id: 111, material: 'MATERIAL SPECKLE FRACTION 0.4 MINSIZE 1 MAXSIZE 3' };\r\nLDRColors[133] = { name: 'Speckle_Black_Gold', value: 0xDBAC34, edge: 0xDBAC34, lego_name: 'Black Glitter', lego_id: 132, bricklink_name: 'Speckle Black-Gold', bricklink_id: 151, material: 'MATERIAL SPECKLE FRACTION 0.4 MINSIZE 1 MAXSIZE 3' };\r\nLDRColors[134] = { name: 'Copper', value: 0x964A27, edge: 0x333333, lego_name: 'Copper', lego_id: 139, bricklink_name: 'Copper', bricklink_id: 84, material: 'PEARLESCENT' };\r\nLDRColors[135] = { name: 'Pearl_Light_Grey', value: 0x9CA3A8, edge: 0x333333, lego_name: '296 / 131 / 315 - Silver Flip-flop / Cool Silver / Silver / Silver Metallic', lego_id: 179, bricklink_name: 'Pearl Light Gray', bricklink_id: 66, material: 'PEARLESCENT' };\r\nLDRColors[137] = { name: 'Metal_Blue', value: 0x5677BA, edge: 0x333333, lego_name: 'Sand Blue Metallic', lego_id: 145, bricklink_name: 'Metal Blue', bricklink_id: 78, material: 'PEARLESCENT' };\r\nLDRColors[142] = { name: 'Pearl_Light_Gold', value: 0xDCBE61, edge: 0x333333, lego_name: 'Gold', lego_id: 127, bricklink_name: 'Pearl Light Gold', bricklink_id: 61, material: 'PEARLESCENT' };\r\nLDRColors[148] = { name: 'Pearl_Dark_Grey', value: 0x575857, edge: 0x333333, lego_name: 'Metallic Dark Grey', lego_id: 148, bricklink_name: 'Pearl Dark Gray', bricklink_id: 77, material: 'PEARLESCENT' };\r\nLDRColors[150] = { name: 'Pearl_Very_Light_Grey', value: 0xBBBDBC, edge: 0x333333, lego_name: 'Metallic Light Grey', lego_id: 150, bricklink_name: 'Pearl Very Light Gray', bricklink_id: 119, material: 'PEARLESCENT' };\r\nLDRColors[151] = { name: 'Very_Light_Bluish_Grey', value: 0xE6E3E0, edge: 0x333333, lego_name: 'Light Stone Grey', lego_id: 208, bricklink_name: 'Very Light Bluish Gray', bricklink_id: 99 };\r\nLDRColors[178] = { name: 'Flat_Dark_Gold', value: 0xB4883E, edge: 0x333333, lego_name: 'Metallic Sand Yellow', lego_id: 147, bricklink_name: 'Flat Dark Gold', bricklink_id: 81, material: 'PEARLESCENT' };\r\nLDRColors[179] = { name: 'Flat_Silver', value: 0x898788, edge: 0x333333, lego_name: 'Silver', lego_id: 131, bricklink_name: 'Flat Silver', bricklink_id: 95, material: 'PEARLESCENT' };\r\nLDRColors[183] = { name: 'Pearl_White', value: 0xF2F3F2, edge: 0x333333, lego_name: 'Metallic White', lego_id: 183, bricklink_name: 'Pearl White', bricklink_id: 83, material: 'PEARLESCENT' };\r\nLDRColors[184] = { name: 'Metallic_Bright_Red', value: 0xD60026, edge: 0x333333, lego_name: 'Metallic Bright Red', lego_id: 184, bricklink_name: 'Red', bricklink_id: 5, material: 'METAL' };\r\nLDRColors[186] = { name: 'Metallic_Dark_Green', value: 0x008E3C, edge: 0x333333, lego_name: 'Metallic Dark Green', lego_id: 186, bricklink_name: 'Green', bricklink_id: 6, material: 'METAL' };\r\nLDRColors[189] = { name: 'Reddish_Gold', value: 0xAC8247, edge: 0x333333, lego_name: 'Reddish Gold', lego_id: 189, material: 'PEARLESCENT' };\r\nLDRColors[191] = { name: 'Bright_Light_Orange', value: 0xF8BB3D, edge: 0x333333, lego_name: 'Flame Yellowish Orange', lego_id: 191, bricklink_name: 'Bright Light Orange', bricklink_id: 110 };\r\nLDRColors[212] = { name: 'Bright_Light_Blue', value: 0x86C1E1, edge: 0x333333, lego_name: 'Light Royal Blue', lego_id: 212, bricklink_name: 'Bright Light Blue', bricklink_id: 105 };\r\nLDRColors[216] = { name: 'Rust', value: 0xB31004, edge: 0x333333, lego_name: 'Rust', lego_id: 216, bricklink_name: 'Rust', bricklink_id: 27 };\r\nLDRColors[218] = { name: 'Reddish_Lilac', value: 0x8E5597, edge: 0x333333, lego_name: 'Reddish Lilac', lego_id: 218 };\r\nLDRColors[219] = { name: 'Lilac', value: 0x564E9D, edge: 0x333333, lego_name: 'Lilac', lego_id: 219, bricklink_name: 'Medium Violet', bricklink_id: 73 };\r\nLDRColors[226] = { name: 'Bright_Light_Yellow', value: 0xFFF03A, edge: 0x333333, lego_name: 'Cool Yellow', lego_id: 226, bricklink_name: 'Bright Light Yellow', bricklink_id: 103 };\r\nLDRColors[231] = { name: 'Trans_Bright_Light_Orange', value: 0xFCB76D, edge: 0xBD8951, lego_name: 'Transparent Flame Yellowish Orange', lego_id: 231, bricklink_name: 'Trans Light Orange', bricklink_id: 164, alpha: 128 };\r\nLDRColors[232] = { name: 'Sky_Blue', value: 0x56BED6, edge: 0x333333, lego_name: 'Dove Blue', lego_id: 232, bricklink_name: 'Sky Blue', bricklink_id: 87 };\r\nLDRColors[234] = { name: 'Trans_Fire_Yellow', value: 0xFBE890, edge: 0xBAAB6A, lego_name: 'Transparent Fire Yellow', lego_id: 234, alpha: 128 };\r\nLDRColors[256] = { name: 'Rubber_Black', value: 0x212121, edge: 0x595959, material: 'RUBBER' };\r\nLDRColors[272] = { name: 'Dark_Blue', value: 0x0D325B, edge: 0x1E1E1E, lego_name: 'Earth Blue', lego_id: 140, bricklink_name: 'Dark Blue', bricklink_id: 63 };\r\nLDRColors[273] = { name: 'Rubber_Blue', value: 0x0033B2, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[284] = { name: 'Trans_Reddish_Lilac', value: 0xC281A5, edge: 0x82566E, lego_name: 'Transparent Reddish Lilac', lego_id: 284, bricklink_name: 'Trans-Light Purple', bricklink_id: 114, alpha: 128 };\r\nLDRColors[285] = { name: 'Trans_Light_Green', value: 0x7DC291, edge: 0x52805F, lego_name: 'Transparent Light Green', lego_id: 285, alpha: 128 };\r\nLDRColors[288] = { name: 'Dark_Green', value: 0x184632, edge: 0x595959, lego_name: 'Earth Green', lego_id: 141, bricklink_name: 'Dark Green', bricklink_id: 80 };\r\nLDRColors[293] = { name: 'Trans_Light_Blue_Violet', value: 0x6BABE4, edge: 0x4D7BA3, lego_name: 'Transparent Light Royal Blue', lego_id: 293, alpha: 128 };\r\nLDRColors[294] = { name: 'Glow_In_Dark_Trans', value: 0xBDC6AD, edge: 0x818A71, lego_name: 'Phosphorescent White', lego_id: 50, bricklink_name: 'Glow In Dark Trans', bricklink_id: 118, alpha: 240, luminance: 15 };\r\nLDRColors[295] = { name: 'Flamingo_Pink', value: 0xFF94C2, edge: 0x333333, lego_name: 'Flamingo Pink', lego_id: 295 };\r\nLDRColors[297] = { name: 'Pearl_Gold', value: 0xCC9C2B, edge: 0x333333, lego_name: 'Warm Gold', lego_id: 297, bricklink_name: 'Pearl Gold', bricklink_id: 115, material: 'PEARLESCENT' };\r\nLDRColors[300] = { name: 'Metallic_Copper', value: 0xC27F53, edge: 0x333333, lego_name: '334 - Copper Drum Lacq / Copper Ink', lego_id: 300, material: 'METAL' };\r\nLDRColors[302] = { name: 'Glitter_Trans_Light_Blue', value: 0x923978, edge: 0x72B3B0, lego_name: 'Light Blue with Glitter 2%', lego_id: 302, bricklink_name: 'Glitter Trans-Light Blue', bricklink_id: 162, alpha: 128, material: 'MATERIAL GLITTER FRACTION 0.17 VFRACTION 0.2 SIZE 1' };\r\nLDRColors[308] = { name: 'Dark_Brown', value: 0x352100, edge: 0x595959, lego_name: 'Dark Brown', lego_id: 308, bricklink_name: 'Dark Brown', bricklink_id: 120 };\r\nLDRColors[313] = { name: 'Maersk_Blue', value: 0x54A9C8, edge: 0x333333, lego_name: 'Pastel Blue', lego_id: 11, bricklink_name: 'Maersk Blue', bricklink_id: 72 };\r\nLDRColors[320] = { name: 'Dark_Red', value: 0x720E0F, edge: 0x333333, lego_name: 'New Dark Red', lego_id: 154, bricklink_name: 'Dark Red', bricklink_id: 59 };\r\nLDRColors[321] = { name: 'Dark_Azure', value: 0x1498D7, edge: 0x333333, lego_name: 'Dark Azur', lego_id: 321, bricklink_name: 'Dark Azure', bricklink_id: 153 };\r\nLDRColors[322] = { name: 'Medium_Azure', value: 0x3EC2DD, edge: 0x333333, lego_name: 'Medium Azur', lego_id: 322, bricklink_name: 'Medium Azure', bricklink_id: 156 };\r\nLDRColors[323] = { name: 'Light_Aqua', value: 0xBDDCD8, edge: 0x333333, lego_name: 'Aqua', lego_id: 323, bricklink_name: 'Light Aqua', bricklink_id: 152 };\r\nLDRColors[324] = { name: 'Rubber_Red', value: 0xC40026, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[326] = { name: 'Yellowish_Green', value: 0xDFEEA5, edge: 0x333333, lego_name: 'Spring Yellowish Green', lego_id: 326 };\r\nLDRColors[329] = { name: 'Glow_In_Dark_White', value: 0xF5F3D7, edge: 0xB5B49F, lego_name: 'White Glow', lego_id: 329, bricklink_name: 'Glow in Dark White', bricklink_id: 159, alpha: 240, luminance: 15 };\r\nLDRColors[330] = { name: 'Olive_Green', value: 0x9B9A5A, edge: 0x333333, lego_name: 'Olive Green', lego_id: 330, bricklink_name: 'Olive Green', bricklink_id: 155 };\r\nLDRColors[334] = { name: 'Chrome_Gold', value: 0xBBA53D, edge: 0xBBB23D, lego_name: 'Metalized Gold', lego_id: 299, bricklink_name: 'Chrome Gold', bricklink_id: 21, material: 'CHROME' };\r\nLDRColors[335] = { name: 'Sand_Red', value: 0xD67572, edge: 0x333333, lego_name: 'Sand Red', lego_id: 153, bricklink_name: 'Sand Red', bricklink_id: 58 };\r\nLDRColors[339] = { name: 'Glitter_Trans_Neon_Green', value: 0x923978, edge: 0x84C300, lego_name: 'Fluorescent Green with Glitter 2%', lego_id: 339, bricklink_name: 'Glitter Trans-Neon Green', bricklink_id: 163, alpha: 128, material: 'MATERIAL GLITTER FRACTION 0.17 VFRACTION 0.2 SIZE 1' };\r\nLDRColors[350] = { name: 'Rubber_Orange', value: 0xD06610, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[351] = { name: 'Medium_Dark_Pink', value: 0xF785B1, edge: 0x333333, lego_name: 'Medium Reddish Violet', lego_id: 22, bricklink_name: 'Medium Dark Pink', bricklink_id: 94 };\r\nLDRColors[353] = { name: 'Coral', value: 0xFF6D77, edge: 0x333333, lego_name: 'Vibrant Coral', lego_id: 353 };\r\nLDRColors[366] = { name: 'Earth_Orange', value: 0x7B4A26, edge: 0x333333, lego_name: 'Earth Orange', lego_id: 25, bricklink_name: 'Earth Orange', bricklink_id: 29 };\r\nLDRColors[373] = { name: 'Sand_Purple', value: 0x845E84, edge: 0x333333, lego_name: 'Sand Violet', lego_id: 136, bricklink_name: 'Sand Purple', bricklink_id: 54 };\r\nLDRColors[375] = { name: 'Rubber_Light_Grey', value: 0xC1C2C1, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[378] = { name: 'Sand_Green', value: 0xA0BCAC, edge: 0x333333, lego_name: 'Sand Green', lego_id: 151, bricklink_name: 'Sand Green', bricklink_id: 48 };\r\nLDRColors[379] = { name: 'Sand_Blue', value: 0x597184, edge: 0x333333, lego_name: 'Sand Blue', lego_id: 135, bricklink_name: 'Sand Blue', bricklink_id: 55 };\r\nLDRColors[383] = { name: 'Chrome_Silver', value: 0xE0E0E0, edge: 0xA4A4A4, lego_name: 'Metalized Silver', lego_id: 298, bricklink_name: 'Chrome Silver', bricklink_id: 22, material: 'CHROME' };\r\nLDRColors[406] = { name: 'Rubber_Dark_Blue', value: 0x001D68, edge: 0x595959, material: 'RUBBER' };\r\nLDRColors[449] = { name: 'Rubber_Purple', value: 0x81007B, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[450] = { name: 'Fabuland_Brown', value: 0xD27744, edge: 0x333333, lego_name: 'Brick Red', lego_id: 12, bricklink_name: 'Fabuland Brown', bricklink_id: 106 };\r\nLDRColors[462] = { name: 'Medium_Orange', value: 0xFFA70B, edge: 0x333333, lego_name: 'Bright Yellowish Orange', lego_id: 105, bricklink_name: 'Medium Orange', bricklink_id: 31 };\r\nLDRColors[484] = { name: 'Dark_Orange', value: 0xA95500, edge: 0x333333, lego_name: 'Dark Orange', lego_id: 38, bricklink_name: 'Dark Orange', bricklink_id: 68 };\r\nLDRColors[490] = { name: 'Rubber_Lime', value: 0xD7F000, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[493] = { name: 'Magnet', value: 0x656761, edge: 0x595959, material: 'METAL' };\r\nLDRColors[494] = { name: 'Electric_Contact_Alloy', value: 0xD0D0D0, edge: 0x333333, material: 'METAL' };\r\nLDRColors[495] = { name: 'Electric_Contact_Copper', value: 0xAE7A59, edge: 0x333333, material: 'METAL' };\r\nLDRColors[496] = { name: 'Rubber_Light_Bluish_Grey', value: 0xA3A2A4, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[503] = { name: 'Very_Light_Grey', value: 0xE6E3DA, edge: 0x333333, lego_name: 'Light Grey', lego_id: 103, bricklink_name: 'Very Light Gray', bricklink_id: 49 };\r\nLDRColors[504] = { name: 'Rubber_Flat_Silver', value: 0x898788, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[507] = { name: 'Light_Orange_Brown', value: 0xFA9C1C, edge: 0x333333, lego_name: 'Light Orange Brown', lego_id: 12 };\r\nLDRColors[508] = { name: 'Fabuland_Red', value: 0xF26436, edge: 0x333333, lego_name: 'Red Orange', lego_id: 13 };\r\nLDRColors[509] = { name: 'Fabuland_Orange', value: 0xE79320, edge: 0x333333, lego_name: 'Light Brown', lego_id: 19 };\r\nLDRColors[510] = { name: 'Fabuland_Pastel_Green', value: 0xACE35E, edge: 0x333333, lego_name: 'Pastel Green', lego_id: 14 };\r\nLDRColors[511] = { name: 'Rubber_White', value: 0xFAFAFA, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10002] = { name: 'Rubber_Green', value: 0x257A3E, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10026] = { name: 'Rubber_Magenta', value: 0x901F76, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10030] = { name: 'Rubber_Medium_Lavender', value: 0xAC78BA, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10031] = { name: 'Rubber_Lavender', value: 0xE1D5ED, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10070] = { name: 'Rubber_Reddish_Brown', value: 0x582A12, edge: 0x595959, material: 'RUBBER' };\r\nLDRColors[10226] = { name: 'Rubber_Bright_Light_Yellow', value: 0xFFF03A, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10308] = { name: 'Rubber_Dark_Brown', value: 0x352100, edge: 0x595959, material: 'RUBBER' };\r\nLDRColors[10320] = { name: 'Rubber_Dark_Red', value: 0x720E0F, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10321] = { name: 'Rubber_Dark_Azure', value: 0x1498D7, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10322] = { name: 'Rubber_Medium_Azure', value: 0x3EC2DD, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10323] = { name: 'Rubber_Light_Aqua', value: 0xBDDCD8, edge: 0x333333, material: 'RUBBER' };\r\nLDRColors[10484] = { name: 'Rubber_Dark_Orange', value: 0xA95500, edge: 0x333333, material: 'RUBBER' };\r\n\r\n\n\n//# sourceURL=webpack://ldr/./src/colors.js?");

/***/ }),

/***/ "./src/lib/most.min.js":
/*!*****************************!*\
  !*** ./src/lib/most.min.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {!function(t,e){ true?e(exports):undefined}(this,function(t){\"use strict\";function e(t){this.source=t}function n(t,e){if(t<0)throw new TypeError(\"n must be >= 0\");var n=e.length;return 0===t||0===n?e:t>=n?[]:function(t,e,n){for(var i=new Array(n),r=0;r<n;++r)i[r]=e[t+r];return i}(t,e,n-t)}function i(t){return n(1,t)}function r(t,e){for(var n=e.length,i=new Array(n),r=0;r<n;++r)i[r]=t(e[r]);return i}function o(t,e,n){if(e<0)throw new TypeError(\"i must be >= 0\");for(var i=n.length,r=new Array(i),o=0;o<i;++o)r[o]=e===o?t:n[o];return r}function s(t,e){if(t<0)throw new TypeError(\"i must be >= 0\");var n=e.length;return 0===n||t>=n?e:1===n?[]:function(t,e,n){var i,r=new Array(n);for(i=0;i<t;++i)r[i]=e[i];for(i=t;i<n;++i)r[i]=e[i+1];return r}(t,e,n-1)}function u(t,e){for(var n=0,i=e.length;n<i;++n)if(t===e[n])return n;return-1}function h(t,e){this._dispose=t,this._data=e}function p(){this.disposable=void 0,this.disposed=!1,this._resolve=void 0;var t=this;this.result=new Promise(function(e){t._resolve=e})}function c(t,e,n){var i=y(e);return function(t){return null!==t&&\"object\"==typeof t&&\"function\"==typeof t.then}(i)?i.catch(function(e){n.error(t,e)}):i}function f(t,e){return w(new h(t,e))}function a(){return new h(Qn,void 0)}function d(t){return f(l,t)}function l(t){return Promise.all(Kn(y,t))}function y(t){try{return t.dispose()}catch(t){return Promise.reject(t)}}function v(){return new p}function w(t){return new h(k,function(t){return{disposed:!1,disposable:t,value:void 0}}(t))}function k(t){return t.disposed||(t.disposed=!0,t.value=y(t.disposable),t.disposable=void 0),t.value}function m(t){setTimeout(function(){throw t},0)}function _(t,e,n){this._run=t,this.value=e,this.sink=n,this.active=!0}function b(t,e,n){n.error(t,e)}function g(t,e,n){n.event(t,e)}function x(t,e,n){n.end(t,e)}function E(t){return new e(new A(t))}function A(t){this.value=t}function T(t,e,n){n.event(t,e),n.end(t,void 0)}function P(){return Xn}function M(){}function R(t){return t.dispose()}function I(){}function W(t){this.array=t}function L(t,e,n){for(var i=0,r=e.length;i<r&&this.active;++i)n.event(t,e[i]);this.active&&n.end(t)}function C(t){this.iterable=t}function N(t,e,n){for(var i=e.next();!i.done&&this.active;)n.event(t,i.value),i=e.next();n.end(t,i.value)}function S(t,e,n){try{n.event(t,e)}catch(e){n.error(t,e)}}function q(t,e,n){try{n.end(t,e)}catch(e){n.error(t,e)}}function B(t){this.observable=t}function j(t,e){this.sink=t,this.scheduler=e}function D(t){return t.unsubscribe()}function V(t){if(t instanceof e)return t;var n=function(t){var e=null;if(t){var n=t[ti];if(\"function\"==typeof n&&(!(e=n.call(t))||\"function\"!=typeof e.subscribe))throw new TypeError(\"invalid observable \"+e)}return e}(t);if(null!=n)return function(t){return new e(new B(t))}(n);if(Array.isArray(t)||function(t){return null!=t&&\"number\"==typeof t.length&&\"function\"!=typeof t}(t))return function(t){return new e(new W(t))}(t);if(function(t){return\"function\"==typeof t[Zn]}(t))return function(t){return new e(new C(t))}(t);throw new TypeError(\"from(x) must be observable, iterable, or array-like: \"+t)}function U(t,e){this.period=t,this.value=e}function z(t,e,n,i){this.time=t,this.period=e,this.task=n,this.scheduler=i,this.active=!0}function O(t){return Promise.resolve(t).then(F)}function F(t){try{return t.run()}catch(e){return t.error(e)}}function G(t,e){this.timer=t,this.timeline=e,this._timer=null,this._nextArrival=1/0;var n=this;this._runReadyTasksBound=function(){n._runReadyTasks(n.now())}}function H(){}function J(t){this.f=t,this.active=!0}function K(){this.tasks=[]}function Q(t,e){var n=e.length;if(0!==n){var i=Y(t.time,e);i>=n?e.push(Z(t.time,[t])):t.time===e[i].time?e[i].events.push(t):e.splice(i,0,Z(t.time,[t]))}else e.push(Z(t.time,[t]))}function X(t,e){e.events=function(t,e){for(var n=e.length,i=new Array(n),r=0,o=void 0,s=0;s<n;++s)t(o=e[s])||(i[r]=o,++r);return i.length=r,i}(t,e.events)}function Y(t,e){for(var n,i,r=0,o=e.length;r<o;){if(n=Math.floor((r+o)/2),i=e[n],t===i.time)return n;t<i.time?o=n:r=n+1}return o}function Z(t,e){return{time:t,events:e}}function $(t,e,n){this.fatalError=t,this.subscriber=e,this.disposable=n}function tt(t){this.disposable=t}function et(t,e,n){if(\"function\"==typeof e.error)try{e.error(t)}catch(t){n(t)}else n(t)}function nt(t,e,n){this.event=t,this.source=e,this.capture=n}function it(t){var e=t.target;e.source.removeEventListener(e.event,t.addEvent,e.capture)}function rt(t){this.sink=t,this.events=[],this.active=!0}function ot(t,e,n){this.sink=t,this.events=n,this.time=e}function st(t,e,n){this.time=t,this.value=e,this.sink=n}function ut(t,e,n){this.time=t,this.value=e,this.sink=n}function ht(t,e){this.event=t,this.source=e}function pt(t){var e=t.target;e.source.removeListener(e.event,t.addEvent)}function ct(t){return function(t,e){return new Promise(function(n,i){!function(t,e,n,i){var r=v(),o=new ft(n,i,r);r.setDisposable(t.run(o,e))}(t,e,n,i)})}(t,ei)}function ft(t,e,n){this._end=t,this._error=e,this._disposable=n,this.active=!0}function at(t,e,n,i){Promise.resolve(n.dispose()).then(function(){t(i)},e)}function dt(t){this.sink=t}function lt(t,e){this.p=t,this.source=e}function yt(t,e){this.p=t,this.sink=e}function vt(t,e,n){this.p=t,this.f=e,this.source=n}function wt(t,e,n){this.p=t,this.f=e,this.sink=n}function kt(t,e){this.f=t,this.source=e}function mt(t,e){this.f=t,this.sink=e}function _t(t,n){return new e(kt.create(t,n.source))}function bt(t,e){return _t(function(){return t},e)}function gt(t,n){return new e(new xt(t,n.source))}function xt(t,e){this.source=e,this.f=t}function Et(t,e){this.sink=e,this.f=t}function At(t,e){return Tt(gt(t,e))}function Tt(t){return ct(t.source)}function Pt(t,n,i){return new e(new Mt(t,n,i.source))}function Mt(t,e,n){this.step=t,this.seed=e,this.source=n}function Rt(t,e,n){this.step=t,this.seed=e,this.sink=n}function It(t,n,i){return new e(new Wt(t,n,i.source))}function Wt(t,e,n){this.source=n,this.f=t,this.value=e}function Lt(t,e,n){this.f=t,this.value=e,this.sink=n}function Ct(t,e,n){return ct(new Nt(t,e,n.source))}function Nt(t,e,n){this.source=n,this.f=t,this.value=e}function St(t,e,n){this.f=t,this.value=e,this.sink=n}function qt(t,e){this.f=t,this.value=e}function Bt(t,e,n,i){this.f=t,this.sink=n,this.scheduler=i,this.active=!0;var r=this;Promise.resolve(this).then(function(t){return jt(t,e)}).catch(function(t){r.sink.error(r.scheduler.now(),t)})}function jt(t,e){var n=t.f;return Promise.resolve(n(e)).then(function(e){return function(t,e){if(e.done)return t.sink.end(t.scheduler.now(),e.value),e.value;if(t.sink.event(t.scheduler.now(),e.value),!t.active)return e.value;return jt(t,e.seed)}(t,e)})}function Dt(t,e){this.f=t,this.value=e}function Vt(t,e,n,i){this.f=t,this.sink=n,this.scheduler=i,this.active=!0;var r=e,o=this;Promise.resolve(this).then(function(t){return Ut(t,r)}).catch(function(t){o.sink.error(o.scheduler.now(),t)})}function Ut(t,e){if(t.sink.event(t.scheduler.now(),e),!t.active)return e;var n=t.f;return Promise.resolve(n(e)).then(function(e){return function(t,e){return t.active?Ut(t,e):t.value}(t,e)})}function zt(t,e){this.f=t,this.args=e}function Ot(t,e,n){this.iterator=t,this.sink=e,this.scheduler=n,this.active=!0;var i=this;Promise.resolve(this).then(Ft).catch(function(t){i.sink.error(i.scheduler.now(),t)})}function Ft(t,e){return t.active?Gt(t,t.iterator.next(e)):e}function Gt(t,e){return e.done?t.sink.end(t.scheduler.now(),e.value):Promise.resolve(e.value).then(function(e){return function(t,e){return t.sink.event(t.scheduler.now(),e),Ft(t,e)}(t,e)},function(e){return function(t,e){return Gt(t,t.iterator.throw(e))}(t,e)})}function Ht(t,n){return new e(new Jt(t,n.source))}function Jt(t,e){this.f=t,this.source=e}function Kt(t,e,n,i){this.f=t,this.sink=n,this.scheduler=i,this.active=!0,this.disposable=w(e.run(this,i))}function Qt(t,e){return Xt(E(t),e)}function Xt(t,e){return Ht(function(){return e},t)}function Yt(t,e){this.sink=e,this.index=t,this.active=!0,this.value=void 0}function Zt(t,e){switch(e.length){case 0:return t();case 1:return t(e[0]);case 2:return t(e[0],e[1]);case 3:return t(e[0],e[1],e[2]);case 4:return t(e[0],e[1],e[2],e[3]);case 5:return t(e[0],e[1],e[2],e[3],e[4]);default:return t.apply(void 0,e)}}function $t(t){return te(t,ii(arguments))}function te(t,n){var i=n.length;return 0===i?P():1===i?_t(t,n[0]):new e(function(t,e){return new ne(t,ni(ee,e))}(t,n))}function ee(t){return t.source}function ne(t,e){this.f=t,this.sources=e}function ie(t,e,n,i){this.sink=n,this.disposables=t,this.sinks=e,this.f=i;var r=e.length;this.awaiting=r,this.values=new Array(r),this.hasValue=new Array(r);for(var o=0;o<r;++o)this.hasValue[o]=!1;this.activeCount=e.length}function re(t,e){return $t(Jn,t,e)}function oe(t,n){return new e(new se(t,n.source))}function se(t,e){this.transducer=t,this.source=e}function ue(t,e){this.xf=t,this.sink=e}function he(t){this.time=-1/0,this.sink=t}function pe(t){this.tx=t}function ce(t){this.tx=t}function fe(){this.head=null,this.length=0}function ae(t,e){return de(Hn,t,e)}function de(t,n,i){return new e(new le(t,n,i.source))}function le(t,e,n){this.f=t,this.concurrency=e,this.source=n}function ye(t,e,n,i,r){this.f=t,this.concurrency=e,this.sink=i,this.scheduler=r,this.pending=[],this.current=new fe,this.disposable=w(n.run(this,r)),this.active=!0}function ve(t,e,n){this.prev=this.next=null,this.time=t,this.outer=e,this.sink=n,this.disposable=void 0}function we(t,e){return de(t,1/0,e)}function ke(t){return ae(1/0,t)}function me(t,e){return de(t,1,e)}function _e(t){var n=t.length;return 0===n?P():1===n?t[0]:new e(function(t){return new ge(oi(be,[],t))}(t))}function be(t,e){var n=e.source;return n instanceof ge?t.concat(n.sources):t.concat(n)}function ge(t){this.sources=t}function xe(t,e,n){this.sink=n,this.disposables=t,this.activeCount=e.length}function Ee(t,n){return new e(new Pe(Hn,t.source,[n.source]))}function Ae(t,n,i){return new e(new Pe(t,n.source,r(Te,i)))}function Te(t){return t.source}function Pe(t,e,n){this.f=t,this.sampler=e,this.sources=n}function Me(t){this.sink=t,this.hasValue=!1}function Re(t,e,n){this.f=t,this.sinks=e,this.sink=n,this.active=!1}function Ie(t){return t.hasValue}function We(t){return t.value}function Le(t){this._capacity=t||32,this._length=0,this._head=0}function Ce(t,n){return 0===n.length?P():1===n.length?_t(t,n[0]):new e(new Se(t,si(Ne,n)))}function Ne(t){return t.source}function Se(t,e){this.f=t,this.sources=e}function qe(t,e,n,i){this.f=t,this.sinks=n,this.sink=i,this.buffers=e}function Be(t){return t.shift()}function je(t){return new e(new De(t.source))}function De(t){this.source=t}function Ve(t,e){this.sink=t,this.scheduler=e,this.current=null,this.ended=!1}function Ue(t,e,n,i){this.min=t,this.max=e,this.outer=n,this.sink=i,this.disposable=a()}function ze(t,n){return new e(lt.create(t,n.source))}function Oe(t){return Fe(Je,t)}function Fe(t,n){return new e(new Ge(t,n.source))}function Ge(t,e){this.equals=t,this.source=e}function He(t,e){this.equals=t,this.sink=e,this.value=void 0,this.init=!0}function Je(t,e){return t===e}function Ke(t,e){return Xe(0,t,e)}function Qe(t,e){return Xe(t,1/0,e)}function Xe(t,n,i){return n<=t?P():new e(Ye(t,n,i.source))}function Ye(t,e,n){return n instanceof kt?function(t,e,n){return kt.create(n.f,Ye(t,e,n.source))}(t,e,n):n instanceof Ze?function(t,e,n){return t+=n.min,e=Math.min(e+n.min,n.max),new Ze(t,e,n.source)}(t,e,n):new Ze(t,e,n)}function Ze(t,e,n){this.source=n,this.min=t,this.max=e}function $e(t,e,n,i){this.sink=n,this.skip=t,this.take=e,this.disposable=i}function tn(t,n){return new e(new en(t,n.source))}function en(t,e){this.p=t,this.source=e}function nn(t,e,n){this.p=t,this.sink=e,this.active=!0,this.disposable=n}function rn(t,n){return new e(new on(t,n.source))}function on(t,e){this.p=t,this.source=e}function sn(t,e){this.p=t,this.sink=e,this.skipping=!0}function un(t,n){return new e(new hn(t,n.source))}function hn(t,e){this.p=t,this.source=e}function pn(t,e){this.p=t,this.sink=e,this.skipping=!1}function cn(t,n){return new e(new dn(t.source,n.source))}function fn(t,n){return new e(new ln(t.source,n.source))}function an(t,e){return cn(ke(t),fn(t,e))}function dn(t,e){this.maxSignal=t,this.source=e}function ln(t,e){this.minSignal=t,this.source=e}function yn(t,e){this.value=t,this.sink=e}function vn(t,e,n){this.min=t,this.max=e,this.sink=n}function wn(t,e,n){this.value=1/0,this.sink=e,this.disposable=t.run(this,n)}function kn(t,e,n){this.value=1/0,this.sink=e,this.disposable=t.run(this,n)}function mn(){}function _n(t,n){return t<=0?n:new e(new bn(t,n.source))}function bn(t,e){this.dt=t,this.source=e}function gn(t,e,n){this.dt=t,this.sink=e,this.scheduler=n}function xn(t){return new e(new En(t.source))}function En(t){this.source=t}function An(t){this.sink=t}function Tn(t,n){return new e(Pn(t,n.source))}function Pn(t,e){return e instanceof kt?function(t,e){return kt.create(e.f,Pn(t,e.source))}(t,e):e instanceof Mn?function(t,e){return new Mn(Math.max(t,e.period),e.source)}(t,e):new Mn(t,e)}function Mn(t,e){this.period=t,this.source=e}function Rn(t,e){this.time=0,this.period=t,this.sink=e}function In(t,n){return new e(new Wn(t,n.source))}function Wn(t,e){this.dt=t,this.source=e}function Ln(t,e,n,i){this.dt=t,this.sink=n,this.scheduler=i,this.value=void 0,this.timer=null,this.disposable=e.run(this,i)}function Cn(t,e){this.debounce=t,this.value=e}function Nn(t){return new e(new Sn(t.source))}function Sn(t){this.source=t}function qn(t,e,n){this.sink=e,this.scheduler=n,this.queue=Promise.resolve(),this.disposable=t.run(this,n),this.active=!0;var i=this;this._eventBound=function(t){i.active&&i.sink.event(i.scheduler.now(),t)},this._endBound=function(t){i.active&&i.sink.end(i.scheduler.now(),t)},this._errorBound=function(t){i.sink.error(i.scheduler.now(),t)}}function Bn(t){this.sink=t,this.active=!0}function jn(t,n){return new e(new Un(t,n.source))}function Dn(t){this.value=t}function Vn(t,e,n){n.error(t,e)}function Un(t,e){this.f=t,this.source=e}function zn(t,e,n,i){this.f=t,this.sink=new Bn(n),this.scheduler=i,this.disposable=e.run(this,i)}function On(t,e,n){try{n.event(t,e)}catch(e){n.error(t,e)}}function Fn(t,e,n){try{n.end(t,e)}catch(e){n.error(t,e)}}function Gn(t){var e=t.source;return e instanceof ai?t:new t.constructor(new ai(e))}e.prototype.run=function(t,e){return this.source.run(t,e)};var Hn=function(t){return t},Jn=function(t,e){return t(e)};h.prototype.dispose=function(){return this._dispose(this._data)},p.prototype.setDisposable=function(t){if(void 0!==this.disposable)throw new Error(\"setDisposable called more than once\");this.disposable=t,this.disposed&&this._resolve(t.dispose())},p.prototype.dispose=function(){return this.disposed?this.result:(this.disposed=!0,void 0!==this.disposable&&(this.result=this.disposable.dispose()),this.result)};var Kn=r,Qn=Hn;_.event=function(t,e){return new _(g,t,e)},_.end=function(t,e){return new _(x,t,e)},_.error=function(t,e){return new _(b,t,e)},_.prototype.dispose=function(){this.active=!1},_.prototype.run=function(t){this.active&&this._run(t,this.value,this.sink)},_.prototype.error=function(t,e){if(!this.active)return m(e);this.sink.error(t,e)},A.prototype.run=function(t,e){return e.asap(new _(T,this.value,t))},M.prototype.run=function(t,e){var n=_.end(void 0,t);return e.asap(n),f(R,n)};var Xn=new e(new M);I.prototype.run=function(){return a()};var Yn=new e(new I);W.prototype.run=function(t,e){return e.asap(new _(L,this.array,t))};var Zn;Zn=\"function\"==typeof Set&&\"function\"==typeof(new Set)[\"@@iterator\"]?\"@@iterator\":\"function\"==typeof Symbol?Symbol.iterator:\"_es6shim_iterator_\",C.prototype.run=function(t,e){return e.asap(new _(N,function(t){return t[Zn]()}(this.iterable),t))};var $n,ti=function(t){var e,n=t.Symbol;return\"function\"==typeof n?n.observable?e=n.observable:(e=n(\"observable\"),n.observable=e):e=\"@@observable\",e}($n=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global: true?module:undefined);B.prototype.run=function(t,e){var n=this.observable.subscribe(new j(t,e));if(\"function\"==typeof n)return f(n);if(n&&\"function\"==typeof n.unsubscribe)return f(D,n);throw new TypeError(\"Observable returned invalid subscription \"+String(n))},j.prototype.next=function(t){S(this.scheduler.now(),t,this.sink)},j.prototype.complete=function(t){q(this.scheduler.now(),t,this.sink)},j.prototype.error=function(t){this.sink.error(this.scheduler.now(),t)},U.prototype.run=function(t,e){return e.periodic(this.period,_.event(this.value,t))},z.prototype.run=function(){return this.task.run(this.time)},z.prototype.error=function(t){return this.task.error(this.time,t)},z.prototype.dispose=function(){return this.scheduler.cancel(this),this.task.dispose()},G.prototype.now=function(){return this.timer.now()},G.prototype.asap=function(t){return this.schedule(0,-1,t)},G.prototype.delay=function(t,e){return this.schedule(t,-1,e)},G.prototype.periodic=function(t,e){return this.schedule(0,t,e)},G.prototype.schedule=function(t,e,n){var i=this.now(),r=new z(i+Math.max(0,t),e,n,this);return this.timeline.add(r),this._scheduleNextRun(i),r},G.prototype.cancel=function(t){t.active=!1,this.timeline.remove(t)&&this._reschedule()},G.prototype.cancelAll=function(t){this.timeline.removeAll(t),this._reschedule()},G.prototype._reschedule=function(){this.timeline.isEmpty()?this._unschedule():this._scheduleNextRun(this.now())},G.prototype._unschedule=function(){this.timer.clearTimer(this._timer),this._timer=null},G.prototype._scheduleNextRun=function(t){if(!this.timeline.isEmpty()){var e=this.timeline.nextArrival();null===this._timer?this._scheduleNextArrival(e,t):e<this._nextArrival&&(this._unschedule(),this._scheduleNextArrival(e,t))}},G.prototype._scheduleNextArrival=function(t,e){this._nextArrival=t;var n=Math.max(0,t-e);this._timer=this.timer.setTimer(this._runReadyTasksBound,n)},G.prototype._runReadyTasks=function(t){this._timer=null,this.timeline.runTasks(t,F),this._scheduleNextRun(this.now())},H.prototype.now=Date.now,H.prototype.setTimer=function(t,e){return e<=0?function(t){var e=new J(t);return O(e),e}(t):setTimeout(t,e)},H.prototype.clearTimer=function(t){return t instanceof J?t.cancel():clearTimeout(t)},J.prototype.run=function(){return this.active&&this.f()},J.prototype.error=function(t){throw t},J.prototype.cancel=function(){this.active=!1},K.prototype.nextArrival=function(){return this.isEmpty()?1/0:this.tasks[0].time},K.prototype.isEmpty=function(){return 0===this.tasks.length},K.prototype.add=function(t){Q(t,this.tasks)},K.prototype.remove=function(t){var e=Y(t.time,this.tasks);if(e>=0&&e<this.tasks.length){var n=u(t,this.tasks[e].events);if(n>=0)return this.tasks[e].events.splice(n,1),!0}return!1},K.prototype.removeAll=function(t){for(var e=0,n=this.tasks.length;e<n;++e)X(t,this.tasks[e])},K.prototype.runTasks=function(t,e){for(var n=this.tasks,i=n.length,r=0;r<i&&n[r].time<=t;)++r;this.tasks=n.slice(r);for(var o=0;o<r;++o)this.tasks=function(t,e,n){for(var i=e.events,r=0;r<i.length;++r){var o=i[r];o.active&&(t(o),o.period>=0&&o.active&&(o.time=o.time+o.period,Q(o,n)))}return n}(e,n[o],this.tasks)};var ei=new G(new H,new K);$.prototype.event=function(t,e){this.disposable.disposed||\"function\"!=typeof this.subscriber.next||this.subscriber.next(e)},$.prototype.end=function(t,e){if(!this.disposable.disposed){var n=this.subscriber,i=this.fatalError;Promise.resolve(this.disposable.dispose()).then(function(){\"function\"==typeof n.complete&&n.complete(e)}).catch(function(t){et(t,n,i)})}},$.prototype.error=function(t,e){var n=this.subscriber,i=this.fatalError;Promise.resolve(this.disposable.dispose()).then(function(){et(e,n,i)})},tt.prototype.unsubscribe=function(){this.disposable.dispose()},nt.prototype.run=function(t,e){function n(n){S(e.now(),n,t)}return this.source.addEventListener(this.event,n,this.capture),f(it,{target:this,addEvent:n})},rt.prototype.event=function(t,e){this.active&&(0===this.events.length&&O(new ot(this.sink,t,this.events)),this.events.push({time:t,value:e}))},rt.prototype.end=function(t,e){this.active&&this._end(new st(t,e,this.sink))},rt.prototype.error=function(t,e){this._end(new ut(t,e,this.sink))},rt.prototype._end=function(t){this.active=!1,O(t)},ot.prototype.run=function(){for(var t,e=this.events,n=this.sink,i=0,r=e.length;i<r;++i)t=e[i],this.time=t.time,n.event(t.time,t.value);e.length=0},ot.prototype.error=function(t){this.sink.error(this.time,t)},st.prototype.run=function(){this.sink.end(this.time,this.value)},st.prototype.error=function(t){this.sink.error(this.time,t)},ut.prototype.run=function(){this.sink.error(this.time,this.value)},ut.prototype.error=function(t){throw t},ht.prototype.run=function(t,e){function n(t){var n=arguments,r=arguments.length;if(r>1){for(var o=new Array(r),s=0;s<r;++s)o[s]=n[s];S(e.now(),o,i)}else S(e.now(),t,i)}var i=new rt(t);return this.source.addListener(this.event,n),f(pt,{target:this,addEvent:n})},ft.prototype.event=function(t,e){},ft.prototype.end=function(t,e){this.active&&(this.active=!1,at(this._end,this._error,this._disposable,e))},ft.prototype.error=function(t,e){this.active=!1,at(this._error,this._error,this._disposable,e)},dt.prototype.event=function(t,e){return this.sink.event(t,e)},dt.prototype.end=function(t,e){return this.sink.end(t,e)},dt.prototype.error=function(t,e){return this.sink.error(t,e)},lt.create=function(t,e){return e instanceof lt?new lt(function(t,e){return function(n){return t(n)&&e(n)}}(e.p,t),e.source):new lt(t,e)},lt.prototype.run=function(t,e){return this.source.run(new yt(this.p,t),e)},yt.prototype.end=dt.prototype.end,yt.prototype.error=dt.prototype.error,yt.prototype.event=function(t,e){(0,this.p)(e)&&this.sink.event(t,e)},vt.prototype.run=function(t,e){return this.source.run(new wt(this.p,this.f,t),e)},wt.prototype.event=function(t,e){var n=this.f;(0,this.p)(e)&&this.sink.event(t,n(e))},wt.prototype.end=dt.prototype.end,wt.prototype.error=dt.prototype.error,kt.create=function(t,e){return e instanceof kt?new kt(function(t,e){return function(n){return t(e(n))}}(t,e.f),e.source):e instanceof lt?new vt(e.p,t,e.source):new kt(t,e)},kt.prototype.run=function(t,e){return this.source.run(new mt(this.f,t),e)},mt.prototype.end=dt.prototype.end,mt.prototype.error=dt.prototype.error,mt.prototype.event=function(t,e){var n=this.f;this.sink.event(t,n(e))},xt.prototype.run=function(t,e){return this.source.run(new Et(this.f,t),e)},Et.prototype.end=dt.prototype.end,Et.prototype.error=dt.prototype.error,Et.prototype.event=function(t,e){(0,this.f)(e),this.sink.event(t,e)},Mt.prototype.run=function(t,e){return this.source.run(new Rt(this.step,this.seed,t),e)},Rt.prototype.error=dt.prototype.error,Rt.prototype.event=function(t,e){var n=this.step(this.seed,e);this.seed=n.seed,this.sink.event(t,n.value)},Rt.prototype.end=function(t){this.sink.end(t,this.seed)},Wt.prototype.run=function(t,e){return d([e.asap(_.event(this.value,t)),this.source.run(new Lt(this.f,this.value,t),e)])},Lt.prototype.event=function(t,e){var n=this.f;this.value=n(this.value,e),this.sink.event(t,this.value)},Lt.prototype.error=dt.prototype.error,Lt.prototype.end=dt.prototype.end,Nt.prototype.run=function(t,e){return this.source.run(new St(this.f,this.value,t),e)},St.prototype.event=function(t,e){var n=this.f;this.value=n(this.value,e),this.sink.event(t,this.value)},St.prototype.error=dt.prototype.error,St.prototype.end=function(t){this.sink.end(t,this.value)},qt.prototype.run=function(t,e){return new Bt(this.f,this.value,t,e)},Bt.prototype.dispose=function(){this.active=!1},Dt.prototype.run=function(t,e){return new Vt(this.f,this.value,t,e)},Vt.prototype.dispose=function(){this.active=!1},zt.prototype.run=function(t,e){return new Ot(this.f.apply(void 0,this.args),t,e)},Ot.prototype.dispose=function(){this.active=!1},Jt.prototype.run=function(t,e){return new Kt(this.f,this.source,t,e)},Kt.prototype.error=dt.prototype.error,Kt.prototype.event=function(t,e){this.active&&this.sink.event(t,e)},Kt.prototype.end=function(t,e){this.active&&(c(t,this.disposable,this.sink),this._startNext(t,e,this.sink))},Kt.prototype._startNext=function(t,e,n){try{this.disposable=this._continue(this.f,e,n)}catch(e){n.error(t,e)}},Kt.prototype._continue=function(t,e,n){return t(e).source.run(n,this.scheduler)},Kt.prototype.dispose=function(){return this.active=!1,this.disposable.dispose()},Yt.prototype.event=function(t,e){this.active&&(this.value=e,this.sink.event(t,this))},Yt.prototype.end=function(t,e){this.active&&(this.active=!1,this.sink.end(t,{index:this.index,value:e}))},Yt.prototype.error=dt.prototype.error;var ni=r,ii=i;ne.prototype.run=function(t,e){for(var n,i=this.sources.length,r=new Array(i),o=new Array(i),s=new ie(r,o,t,this.f),u=0;u<i;++u)n=o[u]=new Yt(u,s),r[u]=this.sources[u].run(n,e);return d(r)},ie.prototype.error=dt.prototype.error,ie.prototype.event=function(t,e){var n=e.index,i=this._updateReady(n);this.values[n]=e.value,0===i&&this.sink.event(t,Zt(this.f,this.values))},ie.prototype._updateReady=function(t){return this.awaiting>0&&(this.hasValue[t]||(this.hasValue[t]=!0,this.awaiting-=1)),this.awaiting},ie.prototype.end=function(t,e){c(t,this.disposables[e.index],this.sink),0==--this.activeCount&&this.sink.end(t,e.value)},se.prototype.run=function(t,e){var n=this.transducer(new he(t));return this.source.run(new ue(function(t){return\"function\"==typeof t[\"@@transducer/step\"]?new pe(t):new ce(t)}(n),t),e)},ue.prototype.event=function(t,e){var n=this.xf.step(t,e);return this.xf.isReduced(n)?this.sink.end(t,this.xf.getResult(n)):n},ue.prototype.end=function(t,e){return this.xf.result(e)},ue.prototype.error=function(t,e){return this.sink.error(t,e)},he.prototype[\"@@transducer/init\"]=he.prototype.init=function(){},he.prototype[\"@@transducer/step\"]=he.prototype.step=function(t,e){return isNaN(t)||(this.time=Math.max(t,this.time)),this.sink.event(this.time,e)},he.prototype[\"@@transducer/result\"]=he.prototype.result=function(t){return this.sink.end(this.time,t)},pe.prototype.step=function(t,e){return this.tx[\"@@transducer/step\"](t,e)},pe.prototype.result=function(t){return this.tx[\"@@transducer/result\"](t)},pe.prototype.isReduced=function(t){return null!=t&&t[\"@@transducer/reduced\"]},pe.prototype.getResult=function(t){return t[\"@@transducer/value\"]},ce.prototype.step=function(t,e){return this.tx.step(t,e)},ce.prototype.result=function(t){return this.tx.result(t)},ce.prototype.isReduced=function(t){return null!=t&&t.__transducers_reduced__},ce.prototype.getResult=function(t){return t.value},fe.prototype.add=function(t){null!==this.head&&(this.head.prev=t,t.next=this.head),this.head=t,++this.length},fe.prototype.remove=function(t){--this.length,t===this.head&&(this.head=this.head.next),null!==t.next&&(t.next.prev=t.prev,t.next=null),null!==t.prev&&(t.prev.next=t.next,t.prev=null)},fe.prototype.isEmpty=function(){return 0===this.length},fe.prototype.dispose=function(){if(this.isEmpty())return Promise.resolve();var t=[],e=this.head;for(this.head=null,this.length=0;null!==e;)t.push(e.dispose()),e=e.next;return Promise.all(t)},le.prototype.run=function(t,e){return new ye(this.f,this.concurrency,this.source,t,e)},ye.prototype.event=function(t,e){this._addInner(t,e)},ye.prototype._addInner=function(t,e){this.current.length<this.concurrency?this._startInner(t,e):this.pending.push(e)},ye.prototype._startInner=function(t,e){try{this._initInner(t,e)}catch(e){this.error(t,e)}},ye.prototype._initInner=function(t,e){var n=new ve(t,this,this.sink);n.disposable=function(t,e,n,i){return t(e).source.run(n,i)}(this.f,e,n,this.scheduler),this.current.add(n)},ye.prototype.end=function(t,e){this.active=!1,c(t,this.disposable,this.sink),this._checkEnd(t,e)},ye.prototype.error=function(t,e){this.active=!1,this.sink.error(t,e)},ye.prototype.dispose=function(){return this.active=!1,this.pending.length=0,Promise.all([this.disposable.dispose(),this.current.dispose()])},ye.prototype._endInner=function(t,e,n){this.current.remove(n),c(t,n,this),0===this.pending.length?this._checkEnd(t,e):this._startInner(t,this.pending.shift())},ye.prototype._checkEnd=function(t,e){!this.active&&this.current.isEmpty()&&this.sink.end(t,e)},ve.prototype.event=function(t,e){this.sink.event(Math.max(t,this.time),e)},ve.prototype.end=function(t,e){this.outer._endInner(Math.max(t,this.time),e,this)},ve.prototype.error=function(t,e){this.outer.error(Math.max(t,this.time),e)},ve.prototype.dispose=function(){return this.disposable.dispose()};var ri=function(t){for(var e=t.length,n=new Array(e),i=0;i<e;++i)n[i]=t[i];return n},oi=function(t,e,n){for(var i=e,r=0,o=n.length;r<o;++r)i=t(i,n[r],r);return i};ge.prototype.run=function(t,e){for(var n,i=this.sources.length,r=new Array(i),o=new Array(i),s=new xe(r,o,t),u=0;u<i;++u)n=o[u]=new Yt(u,s),r[u]=this.sources[u].run(n,e);return d(r)},xe.prototype.error=dt.prototype.error,xe.prototype.event=function(t,e){this.sink.event(t,e.value)},xe.prototype.end=function(t,e){c(t,this.disposables[e.index],this.sink),0==--this.activeCount&&this.sink.end(t,e.value)},Pe.prototype.run=function(t,e){for(var n,i=this.sources.length,r=new Array(i+1),o=new Array(i),s=new Re(this.f,o,t),u=0;u<i;++u)n=o[u]=new Me(s),r[u]=this.sources[u].run(n,e);return r[u]=this.sampler.run(s,e),d(r)},Me.prototype.event=function(t,e){this.value=e,this.hasValue=!0,this.sink._notify(this)},Me.prototype.end=function(){},Me.prototype.error=dt.prototype.error,Re.prototype._notify=function(){this.active||(this.active=this.sinks.every(Ie))},Re.prototype.event=function(t){this.active&&this.sink.event(t,Zt(this.f,r(We,this.sinks)))},Re.prototype.end=dt.prototype.end,Re.prototype.error=dt.prototype.error,Le.prototype.push=function(t){var e=this._length;this._checkCapacity(e+1);this[this._head+e&this._capacity-1]=t,this._length=e+1},Le.prototype.shift=function(){var t=this._head,e=this[t];return this[t]=void 0,this._head=t+1&this._capacity-1,this._length--,e},Le.prototype.isEmpty=function(){return 0===this._length},Le.prototype.length=function(){return this._length},Le.prototype._checkCapacity=function(t){this._capacity<t&&this._ensureCapacity(this._capacity<<1)},Le.prototype._ensureCapacity=function(t){var e=this._capacity;this._capacity=t;var n=this._head+this._length;n>e&&function(t,e,n,i,r){for(var o=0;o<r;++o)n[o+i]=t[o+e],t[o+e]=void 0}(this,0,this,e,n&e-1)};var si=r,ui=i;Se.prototype.run=function(t,e){for(var n,i=this.sources.length,r=new Array(i),o=new Array(i),s=new Array(i),u=new qe(this.f,s,o,t),h=0;h<i;++h)s[h]=new Le,n=o[h]=new Yt(h,u),r[h]=this.sources[h].run(n,e);return d(r)},qe.prototype.event=function(t,e){var n=this.buffers,i=n[e.index];if(i.push(e.value),1===i.length()){if(!function(t){for(var e=0,n=t.length;e<n;++e)if(t[e].isEmpty())return!1;return!0}(this.buffers))return;!function(t,e,n,i){i.event(e,Zt(t,si(Be,n)))}(this.f,t,n,this.sink),function(t,e){for(var n=0,i=t.length;n<i;++n)if(t[n].isEmpty()&&!e[n].active)return!0;return!1}(this.buffers,this.sinks)&&this.sink.end(t,void 0)}},qe.prototype.end=function(t,e){this.buffers[e.index].isEmpty()&&this.sink.end(t,e.value)},qe.prototype.error=dt.prototype.error,De.prototype.run=function(t,e){var n=new Ve(t,e);return d([n,this.source.run(n,e)])},Ve.prototype.event=function(t,e){this._disposeCurrent(t),this.current=new Ue(t,1/0,this,this.sink),this.current.disposable=e.source.run(this.current,this.scheduler)},Ve.prototype.end=function(t,e){this.ended=!0,this._checkEnd(t,e)},Ve.prototype.error=function(t,e){this.ended=!0,this.sink.error(t,e)},Ve.prototype.dispose=function(){return this._disposeCurrent(this.scheduler.now())},Ve.prototype._disposeCurrent=function(t){if(null!==this.current)return this.current._dispose(t)},Ve.prototype._disposeInner=function(t,e){e._dispose(t),e===this.current&&(this.current=null)},Ve.prototype._checkEnd=function(t,e){this.ended&&null===this.current&&this.sink.end(t,e)},Ve.prototype._endInner=function(t,e,n){this._disposeInner(t,n),this._checkEnd(t,e)},Ve.prototype._errorInner=function(t,e,n){this._disposeInner(t,n),this.sink.error(t,e)},Ue.prototype.event=function(t,e){t<this.max&&this.sink.event(Math.max(t,this.min),e)},Ue.prototype.end=function(t,e){this.outer._endInner(Math.max(t,this.min),e,this)},Ue.prototype.error=function(t,e){this.outer._errorInner(Math.max(t,this.min),e,this)},Ue.prototype._dispose=function(t){this.max=t,c(t,this.disposable,this.sink)},Ge.prototype.run=function(t,e){return this.source.run(new He(this.equals,t),e)},He.prototype.end=dt.prototype.end,He.prototype.error=dt.prototype.error,He.prototype.event=function(t,e){this.init?(this.init=!1,this.value=e,this.sink.event(t,e)):this.equals(this.value,e)||(this.value=e,this.sink.event(t,e))},Ze.prototype.run=function(t,e){var n=v(),i=new $e(this.min,this.max-this.min,t,n);return n.setDisposable(this.source.run(i,e)),n},$e.prototype.end=dt.prototype.end,$e.prototype.error=dt.prototype.error,$e.prototype.event=function(t,e){this.skip>0?this.skip-=1:0!==this.take&&(this.take-=1,this.sink.event(t,e),0===this.take&&(this.disposable.dispose(),this.sink.end(t,e)))},en.prototype.run=function(t,e){var n=v(),i=new nn(this.p,t,n);return n.setDisposable(this.source.run(i,e)),n},nn.prototype.end=dt.prototype.end,nn.prototype.error=dt.prototype.error,nn.prototype.event=function(t,e){if(this.active){var n=this.p;this.active=n(e),this.active?this.sink.event(t,e):(this.disposable.dispose(),this.sink.end(t,e))}},on.prototype.run=function(t,e){return this.source.run(new sn(this.p,t),e)},sn.prototype.end=dt.prototype.end,sn.prototype.error=dt.prototype.error,sn.prototype.event=function(t,e){if(this.skipping){var n=this.p;if(this.skipping=n(e),this.skipping)return}this.sink.event(t,e)},hn.prototype.run=function(t,e){return this.source.run(new pn(this.p,t),e)},pn.prototype.event=function(t,e){if(!this.skipping){var n=this.p;this.skipping=n(e),this.sink.event(t,e),this.skipping&&this.sink.end(t,e)}},pn.prototype.end=dt.prototype.end,pn.prototype.error=dt.prototype.error,dn.prototype.run=function(t,e){var n=new yn(-1/0,t),i=new kn(this.maxSignal,t,e);return d([n,i,this.source.run(new vn(n,i,t),e)])},ln.prototype.run=function(t,e){var n=new wn(this.minSignal,t,e),i=new yn(1/0,t);return d([n,i,this.source.run(new vn(n,i,t),e)])},yn.prototype.error=dt.prototype.error,yn.prototype.event=mn,yn.prototype.end=mn,yn.prototype.dispose=mn,vn.prototype.event=function(t,e){t>=this.min.value&&t<this.max.value&&this.sink.event(t,e)},vn.prototype.error=dt.prototype.error,vn.prototype.end=dt.prototype.end,wn.prototype.event=function(t){t<this.value&&(this.value=t)},wn.prototype.end=mn,wn.prototype.error=dt.prototype.error,wn.prototype.dispose=function(){return this.disposable.dispose()},kn.prototype.event=function(t,e){t<this.value&&(this.value=t,this.sink.end(t,e))},kn.prototype.end=mn,kn.prototype.error=dt.prototype.error,kn.prototype.dispose=function(){return this.disposable.dispose()},bn.prototype.run=function(t,e){var n=new gn(this.dt,t,e);return d([n,this.source.run(n,e)])},gn.prototype.dispose=function(){var t=this;this.scheduler.cancelAll(function(e){return e.task.sink===t.sink})},gn.prototype.event=function(t,e){this.scheduler.delay(this.dt,_.event(e,this.sink))},gn.prototype.end=function(t,e){this.scheduler.delay(this.dt,_.end(e,this.sink))},gn.prototype.error=dt.prototype.error,En.prototype.run=function(t,e){return this.source.run(new An(t),e)},An.prototype.end=dt.prototype.end,An.prototype.error=dt.prototype.error,An.prototype.event=function(t,e){this.sink.event(t,{time:t,value:e})},Mn.prototype.run=function(t,e){return this.source.run(new Rn(this.period,t),e)},Rn.prototype.event=function(t,e){t>=this.time&&(this.time=t+this.period,this.sink.event(t,e))},Rn.prototype.end=dt.prototype.end,Rn.prototype.error=dt.prototype.error,Wn.prototype.run=function(t,e){return new Ln(this.dt,this.source,t,e)},Ln.prototype.event=function(t,e){this._clearTimer(),this.value=e,this.timer=this.scheduler.delay(this.dt,new Cn(this,e))},Ln.prototype._event=function(t,e){this._clearTimer(),this.sink.event(t,e)},Ln.prototype.end=function(t,e){this._clearTimer()&&(this.sink.event(t,this.value),this.value=void 0),this.sink.end(t,e)},Ln.prototype.error=function(t,e){this._clearTimer(),this.sink.error(t,e)},Ln.prototype.dispose=function(){return this._clearTimer(),this.disposable.dispose()},Ln.prototype._clearTimer=function(){return null!==this.timer&&(this.timer.dispose(),this.timer=null,!0)},Cn.prototype.run=function(t){this.debounce._event(t,this.value)},Cn.prototype.error=function(t,e){this.debounce.error(t,e)},Cn.prototype.dispose=function(){},Sn.prototype.run=function(t,e){return new qn(this.source,t,e)},qn.prototype.dispose=function(){return this.active=!1,this.disposable.dispose()},qn.prototype.event=function(t,e){var n=this;this.queue=this.queue.then(function(){return n._event(e)}).catch(this._errorBound)},qn.prototype.end=function(t,e){var n=this;this.queue=this.queue.then(function(){return n._end(e)}).catch(this._errorBound)},qn.prototype.error=function(t,e){var n=this;this.queue=this.queue.then(function(){return n._errorBound(e)}).catch(m)},qn.prototype._event=function(t){return t.then(this._eventBound)},qn.prototype._end=function(t){return Promise.resolve(t).then(this._endBound)},Bn.prototype.event=function(t,e){this.active&&this.sink.event(t,e)},Bn.prototype.end=function(t,e){this.active&&(this.disable(),this.sink.end(t,e))},Bn.prototype.error=function(t,e){this.disable(),this.sink.error(t,e)},Bn.prototype.disable=function(){return this.active=!1,this.sink};var hi=jn;Dn.prototype.run=function(t,e){return e.asap(new _(Vn,this.value,t))},Un.prototype.run=function(t,e){return new zn(this.f,this.source,t,e)},zn.prototype.event=function(t,e){S(t,e,this.sink)},zn.prototype.end=function(t,e){q(t,e,this.sink)},zn.prototype.error=function(t,e){var n=this.sink.disable();c(t,this.disposable,this.sink),this._startNext(t,e,n)},zn.prototype._startNext=function(t,e,n){try{this.disposable=this._continue(this.f,e,n)}catch(e){n.error(t,e)}},zn.prototype._continue=function(t,e,n){return t(e).source.run(n,this.scheduler)},zn.prototype.dispose=function(){return this.disposable.dispose()};var pi=function(t,e){this.source=t,this.sink=e,this.disposed=!1};pi.prototype.dispose=function(){if(!this.disposed){this.disposed=!0;return 0===this.source.remove(this.sink)&&this.source._dispose()}};var ci=function(t){return t.dispose()},fi={dispose:function(){}},ai=function(t){this.source=t,this.sinks=[],this._disposable=fi};ai.prototype.run=function(t,e){return 1===this.add(t)&&(this._disposable=this.source.run(this,e)),new pi(this,t)},ai.prototype._dispose=function(){var t=this._disposable;return this._disposable=fi,Promise.resolve(t).then(ci)},ai.prototype.add=function(t){return this.sinks=function(t,e){for(var n=e.length,i=new Array(n+1),r=0;r<n;++r)i[r]=e[r];return i[n]=t,i}(t,this.sinks),this.sinks.length},ai.prototype.remove=function(t){var e=u(t,this.sinks);return e>=0&&(this.sinks=s(e,this.sinks)),this.sinks.length},ai.prototype.event=function(t,e){var n=this.sinks;if(1===n.length)return n[0].event(t,e);for(var i=0;i<n.length;++i)On(t,e,n[i])},ai.prototype.end=function(t,e){for(var n=this.sinks,i=0;i<n.length;++i)Fn(t,e,n[i])},ai.prototype.error=function(t,e){for(var n=this.sinks,i=0;i<n.length;++i)n[i].error(t,e)},e.of=E,e.empty=P,e.from=V,e.prototype.subscribe=function(t){return function(t,e){if(Object(t)!==t)throw new TypeError(\"subscriber must be an object\");var n=v(),i=new $(m,t,n);return n.setDisposable(e.source.run(i,ei)),new tt(n)}(t,this)},e.prototype[ti]=function(){return this},e.prototype.thru=function(t){return function(t,e){return t(e)}(t,this)},e.prototype.observe=e.prototype.forEach=function(t){return At(t,this)},e.prototype.drain=function(){return Tt(this)},e.prototype.loop=function(t,e){return Pt(t,e,this)},e.prototype.scan=function(t,e){return It(t,e,this)},e.prototype.reduce=function(t,e){return Ct(t,e,this)},e.prototype.concat=function(t){return Xt(this,t)},e.prototype.startWith=function(t){return Qt(t,this)},e.prototype.map=function(t){return _t(t,this)},e.prototype.ap=function(t){return re(this,t)},e.prototype.constant=function(t){return bt(t,this)},e.prototype.tap=function(t){return gt(t,this)},e.prototype.transduce=function(t){return oe(t,this)},e.prototype.chain=function(t){return we(t,this)},e.prototype.flatMap=e.prototype.chain,e.prototype.join=function(){return ke(this)},e.prototype.continueWith=function(t){return Ht(t,this)},e.prototype.flatMapEnd=e.prototype.continueWith,e.prototype.concatMap=function(t){return me(t,this)},e.prototype.mergeConcurrently=function(t){return ae(t,this)},e.prototype.merge=function(){return _e(function(t,e){var n=e.length,i=new Array(n+1);i[0]=t;for(var r=0;r<n;++r)i[r+1]=e[r];return i}(this,arguments))},e.prototype.combine=function(t){return te(t,o(this,0,arguments))},e.prototype.sampleWith=function(t){return Ee(t,this)},e.prototype.sample=function(t){return Ae(t,this,i(arguments))},e.prototype.zip=function(t){return Ce(t,o(this,0,arguments))},e.prototype.switchLatest=function(){return je(this)},e.prototype.switch=e.prototype.switchLatest,e.prototype.filter=function(t){return ze(t,this)},e.prototype.skipRepeats=function(){return Oe(this)},e.prototype.skipRepeatsWith=function(t){return Fe(t,this)},e.prototype.take=function(t){return Ke(t,this)},e.prototype.skip=function(t){return Qe(t,this)},e.prototype.slice=function(t,e){return Xe(t,e,this)},e.prototype.takeWhile=function(t){return tn(t,this)},e.prototype.skipWhile=function(t){return rn(t,this)},e.prototype.skipAfter=function(t){return un(t,this)},e.prototype.until=function(t){return cn(t,this)},e.prototype.takeUntil=e.prototype.until,e.prototype.since=function(t){return fn(t,this)},e.prototype.skipUntil=e.prototype.since,e.prototype.during=function(t){return an(t,this)},e.prototype.delay=function(t){return _n(t,this)},e.prototype.timestamp=function(){return xn(this)},e.prototype.throttle=function(t){return Tn(t,this)},e.prototype.debounce=function(t){return In(t,this)},e.prototype.awaitPromises=function(){return Nn(this)},e.prototype.await=e.prototype.awaitPromises,e.prototype.recoverWith=function(t){return hi(t,this)},e.prototype.flatMapError=e.prototype.recoverWith,e.prototype.multicast=function(){return Gn(this)},t.Stream=e,t.of=E,t.just=E,t.empty=P,t.never=function(){return Yn},t.from=V,t.periodic=function(t,n){return new e(new U(t,n))},t.observe=At,t.forEach=At,t.drain=Tt,t.loop=Pt,t.scan=It,t.reduce=Ct,t.concat=Xt,t.startWith=Qt,t.map=_t,t.constant=bt,t.tap=gt,t.ap=re,t.transduce=oe,t.flatMap=we,t.chain=we,t.join=ke,t.continueWith=Ht,t.flatMapEnd=Ht,t.concatMap=me,t.mergeConcurrently=ae,t.merge=function(){return _e(ri(arguments))},t.mergeArray=_e,t.combine=$t,t.combineArray=te,t.sample=function(t,e){return Ae(t,e,n(2,arguments))},t.sampleArray=Ae,t.sampleWith=Ee,t.zip=function(t){return Ce(t,ui(arguments))},t.zipArray=Ce,t.switchLatest=je,t.switch=je,t.filter=ze,t.skipRepeats=Oe,t.distinct=Oe,t.skipRepeatsWith=Fe,t.distinctBy=Fe,t.take=Ke,t.skip=Qe,t.slice=Xe,t.takeWhile=tn,t.skipWhile=rn,t.skipAfter=un,t.takeUntil=cn,t.until=cn,t.skipUntil=fn,t.since=fn,t.during=an,t.delay=_n,t.timestamp=xn,t.throttle=Tn,t.debounce=In,t.fromPromise=function(t){return Nn(E(t))},t.awaitPromises=Nn,t.await=Nn,t.recoverWith=jn,t.flatMapError=hi,t.throwError=function(t){return new e(new Dn(t))},t.multicast=Gn,t.defaultScheduler=ei,t.PropagateTask=_,t.fromEvent=function(t,n,i){var r;if(\"function\"==typeof n.addEventListener&&\"function\"==typeof n.removeEventListener)arguments.length<3&&(i=!1),r=new nt(t,n,i);else{if(\"function\"!=typeof n.addListener||\"function\"!=typeof n.removeListener)throw new Error(\"source must support addEventListener/removeEventListener or addListener/removeListener\");r=new ht(t,n)}return new e(r)},t.unfold=function(t,n){return new e(new qt(t,n))},t.iterate=function(t,n){return new e(new Dt(t,n))},t.generate=function(t){return new e(new zt(t,i(arguments)))},Object.defineProperty(t,\"__esModule\",{value:!0})});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://ldr/./src/lib/most.min.js?");

/***/ })

/******/ });
});